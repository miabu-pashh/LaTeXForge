{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/resuME/ResumeApp/Resume-FrontEnd/src/components/ColdEmailSender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { testColdEmailBackend } from \"../services/coldEmailService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColdEmailSender = ({\n  coldEmail,\n  companyName\n}) => {\n  _s();\n  const [backendStatus, setBackendStatus] = useState(\"checking\");\n  const [loading, setLoading] = useState(false);\n\n  // Test backend connection when component mounts\n  React.useEffect(() => {\n    checkBackendConnection();\n  }, []);\n  const checkBackendConnection = async () => {\n    try {\n      await testColdEmailBackend();\n      setBackendStatus(\"connected\");\n      console.log(\"‚úÖ Cold email backend connected\");\n    } catch (error) {\n      setBackendStatus(\"disconnected\");\n      console.error(\"‚ùå Cold email backend disconnected:\", error);\n    }\n  };\n  const handleSendColdEmail = () => {\n    if (backendStatus !== \"connected\") {\n      alert(\"‚ùå Cold email backend is not connected. Please make sure the Spring Boot server is running on port 8080.\");\n      return;\n    }\n\n    // For now, just show an alert - we'll implement the full functionality in the next step\n    alert(\"üöÄ Opening cold email sender...\");\n    console.log(\"Cold email content:\", coldEmail);\n    console.log(\"Company name:\", companyName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: \"12px\",\n        marginBottom: \"8px\",\n        color: backendStatus === \"connected\" ? \"green\" : \"red\"\n      },\n      children: [backendStatus === \"checking\" && \"üîÑ Checking cold email backend...\", backendStatus === \"connected\" && \"‚úÖ Cold email backend connected\", backendStatus === \"disconnected\" && \"‚ùå Cold email backend disconnected\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-email-btn\",\n      onClick: handleSendColdEmail,\n      disabled: loading || !coldEmail,\n      style: {\n        backgroundColor: backendStatus === \"connected\" ? \"#3b82f6\" : \"#6b7280\",\n        color: \"white\",\n        padding: \"10px 20px\",\n        border: \"none\",\n        borderRadius: \"5px\",\n        cursor: backendStatus === \"connected\" ? \"pointer\" : \"not-allowed\"\n      },\n      children: loading ? \"Loading...\" : \"üöÄ Send via Cold Email App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ColdEmailSender, \"tbZNUvJGCQA8TtH/Q0VM/RJgi5U=\");\n_c = ColdEmailSender;\nexport default ColdEmailSender;\nvar _c;\n$RefreshReg$(_c, \"ColdEmailSender\");","map":{"version":3,"names":["React","useState","testColdEmailBackend","jsxDEV","_jsxDEV","ColdEmailSender","coldEmail","companyName","_s","backendStatus","setBackendStatus","loading","setLoading","useEffect","checkBackendConnection","console","log","error","handleSendColdEmail","alert","style","marginTop","children","fontSize","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","backgroundColor","padding","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/resuME/ResumeApp/Resume-FrontEnd/src/components/ColdEmailSender.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { testColdEmailBackend } from \"../services/coldEmailService\";\n\nconst ColdEmailSender = ({ coldEmail, companyName }) => {\n  const [backendStatus, setBackendStatus] = useState(\"checking\");\n  const [loading, setLoading] = useState(false);\n\n  // Test backend connection when component mounts\n  React.useEffect(() => {\n    checkBackendConnection();\n  }, []);\n\n  const checkBackendConnection = async () => {\n    try {\n      await testColdEmailBackend();\n      setBackendStatus(\"connected\");\n      console.log(\"‚úÖ Cold email backend connected\");\n    } catch (error) {\n      setBackendStatus(\"disconnected\");\n      console.error(\"‚ùå Cold email backend disconnected:\", error);\n    }\n  };\n\n  const handleSendColdEmail = () => {\n    if (backendStatus !== \"connected\") {\n      alert(\n        \"‚ùå Cold email backend is not connected. Please make sure the Spring Boot server is running on port 8080.\"\n      );\n      return;\n    }\n\n    // For now, just show an alert - we'll implement the full functionality in the next step\n    alert(\"üöÄ Opening cold email sender...\");\n    console.log(\"Cold email content:\", coldEmail);\n    console.log(\"Company name:\", companyName);\n  };\n\n  return (\n    <div style={{ marginTop: \"10px\" }}>\n      {/* Backend Status Indicator */}\n      <div\n        style={{\n          fontSize: \"12px\",\n          marginBottom: \"8px\",\n          color: backendStatus === \"connected\" ? \"green\" : \"red\",\n        }}\n      >\n        {backendStatus === \"checking\" && \"üîÑ Checking cold email backend...\"}\n        {backendStatus === \"connected\" && \"‚úÖ Cold email backend connected\"}\n        {backendStatus === \"disconnected\" &&\n          \"‚ùå Cold email backend disconnected\"}\n      </div>\n\n      {/* Send Cold Email Button */}\n      <button\n        className=\"send-email-btn\"\n        onClick={handleSendColdEmail}\n        disabled={loading || !coldEmail}\n        style={{\n          backgroundColor:\n            backendStatus === \"connected\" ? \"#3b82f6\" : \"#6b7280\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          border: \"none\",\n          borderRadius: \"5px\",\n          cursor: backendStatus === \"connected\" ? \"pointer\" : \"not-allowed\",\n        }}\n      >\n        {loading ? \"Loading...\" : \"üöÄ Send via Cold Email App\"}\n      </button>\n    </div>\n  );\n};\n\nexport default ColdEmailSender;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,eAAe,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,UAAU,CAAC;EAC9D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAD,KAAK,CAACa,SAAS,CAAC,MAAM;IACpBC,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,sBAAsB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACF,MAAMZ,oBAAoB,CAAC,CAAC;MAC5BQ,gBAAgB,CAAC,WAAW,CAAC;MAC7BK,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,gBAAgB,CAAC,cAAc,CAAC;MAChCK,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC5D;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIT,aAAa,KAAK,WAAW,EAAE;MACjCU,KAAK,CACH,yGACF,CAAC;MACD;IACF;;IAEA;IACAA,KAAK,CAAC,iCAAiC,CAAC;IACxCJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEV,SAAS,CAAC;IAC7CS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,WAAW,CAAC;EAC3C,CAAC;EAED,oBACEH,OAAA;IAAKgB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAEhClB,OAAA;MACEgB,KAAK,EAAE;QACLG,QAAQ,EAAE,MAAM;QAChBC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAEhB,aAAa,KAAK,WAAW,GAAG,OAAO,GAAG;MACnD,CAAE;MAAAa,QAAA,GAEDb,aAAa,KAAK,UAAU,IAAI,mCAAmC,EACnEA,aAAa,KAAK,WAAW,IAAI,gCAAgC,EACjEA,aAAa,KAAK,cAAc,IAC/B,mCAAmC;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAGNzB,OAAA;MACE0B,SAAS,EAAC,gBAAgB;MAC1BC,OAAO,EAAEb,mBAAoB;MAC7Bc,QAAQ,EAAErB,OAAO,IAAI,CAACL,SAAU;MAChCc,KAAK,EAAE;QACLa,eAAe,EACbxB,aAAa,KAAK,WAAW,GAAG,SAAS,GAAG,SAAS;QACvDgB,KAAK,EAAE,OAAO;QACdS,OAAO,EAAE,WAAW;QACpBC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE5B,aAAa,KAAK,WAAW,GAAG,SAAS,GAAG;MACtD,CAAE;MAAAa,QAAA,EAEDX,OAAO,GAAG,YAAY,GAAG;IAA4B;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACrB,EAAA,CArEIH,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AAuErB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}