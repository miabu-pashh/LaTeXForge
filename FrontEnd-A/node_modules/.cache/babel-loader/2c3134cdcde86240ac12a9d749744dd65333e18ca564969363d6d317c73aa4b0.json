{"ast":null,"code":"import axios from \"axios\";\nconst GEMINI_API_URL = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent\";\nexport async function callGeminiAPI(prompt) {\n  const apiKey = \"AIzaSyB1mo0mYLvRkle-6OCLUFpS0rbaSdIHiHI\"; // Replace if needed\n  console.log(\"the api is called\");\n  try {\n    var _response$data$candid, _response$data$candid2, _response$data$candid3, _response$data$candid4, _response$data$candid5;\n    const response = await axios.post(`${GEMINI_API_URL}?key=${apiKey}`, {\n      contents: [{\n        role: \"user\",\n        parts: [{\n          text: prompt\n        }]\n      }]\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const text = ((_response$data$candid = response.data.candidates) === null || _response$data$candid === void 0 ? void 0 : (_response$data$candid2 = _response$data$candid[0]) === null || _response$data$candid2 === void 0 ? void 0 : (_response$data$candid3 = _response$data$candid2.content) === null || _response$data$candid3 === void 0 ? void 0 : (_response$data$candid4 = _response$data$candid3.parts) === null || _response$data$candid4 === void 0 ? void 0 : (_response$data$candid5 = _response$data$candid4[0]) === null || _response$data$candid5 === void 0 ? void 0 : _response$data$candid5.text) || \"\";\n\n    // Split the text into two parts:\n    // First part: change summary\n    // Second part: LaTeX\n    // Split LaTeX and summary using delimiter from prompt (e.g. ===CHANGES===)\n    const [latex, summaryRaw = \"\"] = text.split(\"===CHANGES===\");\n    console.log(\"Gemini API Response:\", text);\n    console.log(\"Changes Summary:\", changesSummary);\n    console.log(\"Updated LaTeX:\", updatedLatex);\n    return {\n      changesSummary: (changesSummary || \"\").trim(),\n      updatedLatex: (updatedLatex || \"\").trim(),\n      updatedLatex: latex.trim(),\n      changesSummary: summaryRaw.trim().split(\"\\n\").filter(Boolean)\n    };\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Gemini API Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    alert(\"Gemini API Error: \" + JSON.stringify(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message));\n    return {\n      updatedLatex: \"Error generating LaTeX.\",\n      changesSummary: \"Error generating summary.\"\n    };\n  }\n}","map":{"version":3,"names":["axios","GEMINI_API_URL","callGeminiAPI","prompt","apiKey","console","log","_response$data$candid","_response$data$candid2","_response$data$candid3","_response$data$candid4","_response$data$candid5","response","post","contents","role","parts","text","headers","data","candidates","content","latex","summaryRaw","split","changesSummary","updatedLatex","trim","filter","Boolean","error","_error$response","_error$response2","message","alert","JSON","stringify"],"sources":["/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/utils/apiHandler.js"],"sourcesContent":["import axios from \"axios\";\nconst GEMINI_API_URL =\n  \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent\";\n\nexport async function callGeminiAPI(prompt) {\n  const apiKey = \"AIzaSyB1mo0mYLvRkle-6OCLUFpS0rbaSdIHiHI\"; // Replace if needed\n  console.log(\"the api is called\");\n\n  try {\n    const response = await axios.post(\n      `${GEMINI_API_URL}?key=${apiKey}`,\n      {\n        contents: [\n          {\n            role: \"user\",\n            parts: [{ text: prompt }],\n          },\n        ],\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    const text = response.data.candidates?.[0]?.content?.parts?.[0]?.text || \"\";\n\n    // Split the text into two parts:\n    // First part: change summary\n    // Second part: LaTeX\n    // Split LaTeX and summary using delimiter from prompt (e.g. ===CHANGES===)\n    const [latex, summaryRaw = \"\"] = text.split(\"===CHANGES===\");\n    console.log(\"Gemini API Response:\", text);\n    console.log(\"Changes Summary:\", changesSummary);\n    console.log(\"Updated LaTeX:\", updatedLatex);\n\n    return {\n      changesSummary: (changesSummary || \"\").trim(),\n      updatedLatex: (updatedLatex || \"\").trim(),\n      updatedLatex: latex.trim(),\n      changesSummary: summaryRaw.trim().split(\"\\n\").filter(Boolean),\n    };\n  } catch (error) {\n    console.error(\"Gemini API Error:\", error.response?.data || error.message);\n    alert(\n      \"Gemini API Error: \" +\n        JSON.stringify(error.response?.data || error.message)\n    );\n    return {\n      updatedLatex: \"Error generating LaTeX.\",\n      changesSummary: \"Error generating summary.\",\n    };\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,cAAc,GAClB,0FAA0F;AAE5F,OAAO,eAAeC,aAAaA,CAACC,MAAM,EAAE;EAC1C,MAAMC,MAAM,GAAG,yCAAyC,CAAC,CAAC;EAC1DC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAEhC,IAAI;IAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAC/B,GAAGZ,cAAc,QAAQG,MAAM,EAAE,EACjC;MACEU,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,CAAC;UAAEC,IAAI,EAAEd;QAAO,CAAC;MAC1B,CAAC;IAEL,CAAC,EACD;MACEe,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAED,MAAMD,IAAI,GAAG,EAAAV,qBAAA,GAAAK,QAAQ,CAACO,IAAI,CAACC,UAAU,cAAAb,qBAAA,wBAAAC,sBAAA,GAAxBD,qBAAA,CAA2B,CAAC,CAAC,cAAAC,sBAAA,wBAAAC,sBAAA,GAA7BD,sBAAA,CAA+Ba,OAAO,cAAAZ,sBAAA,wBAAAC,sBAAA,GAAtCD,sBAAA,CAAwCO,KAAK,cAAAN,sBAAA,wBAAAC,sBAAA,GAA7CD,sBAAA,CAAgD,CAAC,CAAC,cAAAC,sBAAA,uBAAlDA,sBAAA,CAAoDM,IAAI,KAAI,EAAE;;IAE3E;IACA;IACA;IACA;IACA,MAAM,CAACK,KAAK,EAAEC,UAAU,GAAG,EAAE,CAAC,GAAGN,IAAI,CAACO,KAAK,CAAC,eAAe,CAAC;IAC5DnB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,IAAI,CAAC;IACzCZ,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmB,cAAc,CAAC;IAC/CpB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEoB,YAAY,CAAC;IAE3C,OAAO;MACLD,cAAc,EAAE,CAACA,cAAc,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC;MAC7CD,YAAY,EAAE,CAACA,YAAY,IAAI,EAAE,EAAEC,IAAI,CAAC,CAAC;MACzCD,YAAY,EAAEJ,KAAK,CAACK,IAAI,CAAC,CAAC;MAC1BF,cAAc,EAAEF,UAAU,CAACI,IAAI,CAAC,CAAC,CAACH,KAAK,CAAC,IAAI,CAAC,CAACI,MAAM,CAACC,OAAO;IAC9D,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,gBAAA;IACd3B,OAAO,CAACyB,KAAK,CAAC,mBAAmB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAAClB,QAAQ,cAAAmB,eAAA,uBAAdA,eAAA,CAAgBZ,IAAI,KAAIW,KAAK,CAACG,OAAO,CAAC;IACzEC,KAAK,CACH,oBAAoB,GAClBC,IAAI,CAACC,SAAS,CAAC,EAAAJ,gBAAA,GAAAF,KAAK,CAAClB,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIW,KAAK,CAACG,OAAO,CACxD,CAAC;IACD,OAAO;MACLP,YAAY,EAAE,yBAAyB;MACvCD,cAAc,EAAE;IAClB,CAAC;EACH;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}