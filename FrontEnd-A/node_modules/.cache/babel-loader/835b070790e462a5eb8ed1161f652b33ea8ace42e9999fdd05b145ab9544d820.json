{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/resuME/ResumeApp/Resume-FrontEnd/src/components/JDInput.js\",\n  _s = $RefreshSig$();\n// JDInput.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { buildGeminiPrompt, resumeTemplate, coverLetterTemplate, coldEmailTemplate, buildLinkedInMessagePrompt, buildCoverLetterUpdatePrompt, buildCompanyAndEmailPrompt, buildGeminiPromptForJD } from \"../utils/promptBuilder\";\nimport { callGeminiAPIforJD, callGeminiAPI, callGeminiAPIForLinkedInMessage, callGeminiAPIForCoverLetterUpdate, callGeminiAPIForCompanyAndEmail } from \"../utils/apiHandler\";\nimport \"../CSS/JDInput.css\";\nimport CoverLetterEditorModal from \"../components/CoverLetterEditorModal.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JDInput({\n  onJDUpdate\n}) {\n  _s();\n  // 🌐 Routing\n  const navigate = useNavigate();\n\n  // 🔐 Authentication check\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    if (isLoggedIn !== \"true\") {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  // State variables\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [companyName, setCompanyName] = useState(\"\");\n  const [summaryLatex, setSummaryLatex] = useState(\"\");\n  const [skillsLatex, setSkillsLatex] = useState(\"\");\n  const [metlifeLatex, setMetlifeLatex] = useState(\"\");\n  const [adonsLatex, setAdonsLatex] = useState(\"\");\n  const [changes, setChanges] = useState(\"\"); // Added changes state\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [coldEmail, setColdEmail] = useState(\"\");\n  const [FinalResumeLatex, setFinalResumeLatex] = useState(\"\");\n  const [linkedinMessage, setLinkedinMessage] = useState(\"\");\n  const [showModal, setShowModal] = useState(false); // Controls popup visibility\n  const [latexResume, setLatexResume] = useState(\"\"); // Stores pasted LaTeX resume\n  const [showEmailModal, setShowEmailModal] = useState(false); // Controls email modal visibility\n  const [emailSubject, setEmailSubject] = useState(\"\");\n  const [emailBody, setEmailBody] = useState(\"\");\n  const [emailSending, setEmailSending] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [jobResult, setJobResult] = useState(\"\");\n  const [showJobModal, setShowJobModal] = useState(false);\n  const [isEditorOpen, setEditorOpen] = useState(false);\n  // const [coverLetterContent, setCoverLetterContent] = useState(\n  //   `Your default content here...`\n  // );\n\n  // 📅 Format today's date\n  const todayDate = new Date().toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  useEffect(() => {\n    const subjectMatch = coldEmail.match(/Subject:\\s*(.*)/i);\n    setEmailSubject(subjectMatch ? subjectMatch[1].trim() : \"\");\n    setEmailBody(coldEmail.replace(/Subject:.*\\n?/i, \"\").trim());\n  }, [coldEmail]);\n\n  // Toast message function\n  const showToast = msg => {\n    setToastMsg(msg);\n    setTimeout(() => setToastMsg(\"\"), 3000); // toast disappears in 3 seconds\n  };\n\n  // 📥 Copyable Content Box Renderer\n  const renderBox = (title, content) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"8\",\n      value: content,\n      readOnly: true,\n      className: \"textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"copy-btn\",\n      onClick: () => {\n        navigator.clipboard.writeText(content);\n      },\n      children: \"Copy the text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n\n  // 💡 Feature Functions\n  const handleJD = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPromptForJD({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full\n    });\n    const result = await callGeminiAPIforJD(prompt);\n    setJobResult(result.result || \"\");\n    setLoading(false);\n    setShowJobModal(true);\n  };\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      coldEmailTemplate\n    });\n    const result = await callGeminiAPI(prompt);\n    setCompanyName(result.companyName || \"\");\n    setSummaryLatex(result.summaryLatex || \"\");\n    setSkillsLatex(result.skillsLatex || \"\");\n    setMetlifeLatex(result.metlifeLatex || \"\");\n    setAdonsLatex(result.adonsLatex || \"\");\n    setChanges(result.changes || \"\"); // Set changes from the result\n    setCoverLetter(result.coverLetter || \"\");\n    setColdEmail(result.coldEmail || \"\");\n    setFinalResumeLatex(result.FinalResumeLatex || \"\");\n    setLoading(false);\n  };\n  const handleLinkedInMessage = async () => {\n    if (!jobDesc.trim()) return;\n    console.log(\"🚀 ~ file: JDInput.js:88 ~ handleLinkedInMessage ~ jobDesc:\", jobDesc);\n    setLoading(true);\n    const prompt = buildLinkedInMessagePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full\n    });\n    const result = await callGeminiAPIForLinkedInMessage(prompt);\n    console.log(\"the result in jdinput file is \", result);\n    setLinkedinMessage(result.linkedinMessage || \"\");\n    setLoading(false);\n  };\n  const handleCoverLetterUpdate = async () => {\n    console.log(\"the handle cover letter update is called in jd input function\");\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    const prompt = buildCoverLetterUpdatePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      todayDate\n    });\n    console.log(\"the prompt in jd input file is \", prompt);\n    const {\n      updatedCoverLetter\n    } = await callGeminiAPIForCoverLetterUpdate(prompt);\n    console.log(\"the updated cover letter is \", updatedCoverLetter);\n    setLoading(false);\n    navigate(\"/cover-letter-update\", {\n      state: {\n        template: coverLetterTemplate,\n        updated: updatedCoverLetter\n      }\n    });\n  };\n  const handleCompanyNameExtraction = async () => {\n    const prompt = buildCompanyAndEmailPrompt(jobDesc);\n    const company = await callGeminiAPIForCompanyAndEmail(prompt);\n    console.log(\"🧾 Company Extracted:\", company);\n  };\n  const handleSaveToDB = async () => {\n    const payload = {\n      applyDate: new Date().toISOString().split(\"T\")[0],\n      companyName,\n      summaryLatex,\n      skillsLatex,\n      metlifeLatex,\n      adonsLatex,\n      changes,\n      coverLetter,\n      coldEmail,\n      finalResumeLatex: FinalResumeLatex,\n      jobDescription: jobDesc // Include job description in payload\n    };\n    try {\n      const response = await fetch(\"http://localhost:5001/save-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      console.log(\"✅ Backend Response:\", result);\n      if (response.status === 200) {\n        alert(\"✅ Saved to DB successfully!\");\n      } else if (response.status === 409) {\n        alert(\"⚠️ This data already exists in the database.\");\n      } else {\n        alert(`❌ Unexpected error: ${result.message || \"Unknown error\"}`);\n      }\n\n      // alert(\"✅ Saved to DB successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error saving to DB:\", error);\n      alert(\"❌ Failed to save to DB.\");\n    }\n  };\n  const handleSendEmail = async () => {\n    const to = document.querySelector(\".gmail-to\").value;\n    const subject = emailSubject;\n    const text = emailBody;\n    const fileInput = document.querySelector(\".gmail-attachment\");\n    let attachmentBase64 = \"\";\n    let attachmentName = \"\";\n    if (fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      attachmentName = file.name;\n      const reader = new FileReader();\n      reader.onload = async () => {\n        // Strip the base64 prefix (e.g., \"data:application/pdf;base64,...\")\n        attachmentBase64 = reader.result.split(\",\")[1];\n        try {\n          setEmailSending(true);\n          const res = await fetch(\"http://localhost:5001/send-email\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              to,\n              subject,\n              text,\n              attachmentName,\n              attachmentBase64\n            })\n          });\n          const data = await res.json();\n          if (res.ok) {\n            // alert(\"📨 Email sent successfully!\");\n            showToast(\"📨 Email sent successfully!\");\n            setShowEmailModal(false);\n          } else {\n            // alert(\"❌ Failed to send email: \" + data.message);\n            showToast(\"❌ Failed: \" + data.error);\n          }\n        } catch (err) {\n          showToast(\"❌ Network error: \" + err.message);\n        } finally {\n          setEmailSending(false); // ✅ stop spinner\n        }\n      };\n      reader.readAsDataURL(file); // Triggers reader.onload above\n    } else {\n      // No attachment, just send email\n      try {\n        setEmailSending(true);\n        const res = await fetch(\"http://localhost:5001/send-email\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            to,\n            subject,\n            text\n          }) // no attachment\n        });\n        const data = await res.json();\n        if (res.ok) {\n          showToast(\"📨 Email sent successfully!\");\n          // alert(\"📨 Email sent successfully!\");\n          setShowEmailModal(false);\n        } else {\n          showToast(\"❌ Failed: \" + data.message);\n        }\n      } catch (err) {\n        showToast(\"❌ Network error: \" + err.message);\n      } finally {\n        setEmailSending(false); // ✅ stop spinner\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jd-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ResuMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Resume Update | Cover Letter | Cold Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem(\"loggedIn\");\n          navigate(\"/login\");\n        },\n        children: \"\\uD83D\\uDEAA Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), toastMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-message\",\n      children: toastMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 20\n    }, this), emailSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea jd-input\",\n          rows: \"6\",\n          placeholder: \"Paste job description here...\",\n          value: jobDesc,\n          onChange: e => setJobDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJD,\n            disabled: loading,\n            children: loading ? \"Checking Job...\" : \"Job Matching/Unmatching\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerate,\n            disabled: loading,\n            children: loading ? \"Generating...\" : \"Generate Tailored Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"linkedin-btn\",\n            onClick: handleLinkedInMessage,\n            disabled: loading,\n            children: \"\\uD83D\\uDCAC Generate LinkedIn Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/ats-analysis\"),\n            children: \"\\uD83D\\uDD0D Compare Resume with JD (ATS Score)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCoverLetterUpdate,\n            disabled: loading,\n            children: \"\\u2709\\uFE0F Generate Cover Letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCompanyNameExtraction,\n            children: \"\\uD83E\\uDDFE Get Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveToDB,\n            disabled: loading,\n            children: \"\\uD83D\\uDCBE Save to Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), jobResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal job-analysis-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => setJobResult(\"\"),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83E\\uDDE0 Job Compatibility Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: jobResult.split(/\\*\\*(.*?)\\*\\*/g).map((chunk, index) => index % 2 === 1 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"highlight-heading\",\n                children: chunk\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: chunk\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), linkedinMessage && renderBox(\"LinkedIn Message to Recruiter\", linkedinMessage), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-grid\",\n          children: [renderBox(\"Summary\", summaryLatex), renderBox(\"Tech Skills\", skillsLatex), renderBox(\"Met Life Work Exp\", metlifeLatex), renderBox(\"Adons Work Exp\", adonsLatex)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), renderBox(\"Changes Made\", changes), renderBox(\"Final Resume\", FinalResumeLatex), renderBox(\"CoverLetter For Given Job\", coverLetter), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditorOpen(true),\n          children: \"Edit Cover Letter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this), renderBox(\"ColdMail For Given Job\", coldEmail), coldEmail && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-email-btn\",\n          onClick: () => setShowEmailModal(true),\n          children: \"Send Cold Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CoverLetterEditorModal, {\n      isOpen: isEditorOpen,\n      onClose: () => setEditorOpen(false),\n      content: coverLetterContent,\n      onChange: updatedText => setCoverLetterContent(updatedText)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmail-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmail-compose-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Paste Your Full LaTeX Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gmail-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Minimize\",\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Full screen\",\n              children: \"\\u29C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gmail-close\",\n              onClick: () => setShowModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"12\",\n          value: latexResume,\n          onChange: e => setLatexResume(e.target.value),\n          placeholder: \"Paste your full LaTeX resume code here...\",\n          className: \"gmail-body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: () => {\n              console.log(\"Submitted Resume:\", latexResume);\n              setShowModal(false);\n            },\n            children: \"Submit for Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), showEmailModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmail-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmail-compose-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gmail-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Minimize\",\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Full screen\",\n              children: \"\\u29C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gmail-close\",\n              onClick: () => setShowEmailModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"gmail-to\",\n            placeholder: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"gmail-subject\",\n            placeholder: \"Subject\",\n            value: emailSubject,\n            onChange: e => setEmailSubject(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"gmail-body\",\n            rows: \"10\",\n            value: emailBody,\n            onChange: e => setEmailBody(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"gmail-attachment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: handleSendEmail,\n            disabled: emailSending,\n            children: emailSending ? \"Sending...\" : \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_s(JDInput, \"fsB6ziBPQarxvjqpSaavJQWW+Qw=\", false, function () {\n  return [useNavigate];\n});\n_c = JDInput;\nexport default JDInput;\nvar _c;\n$RefreshReg$(_c, \"JDInput\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","buildGeminiPrompt","resumeTemplate","coverLetterTemplate","coldEmailTemplate","buildLinkedInMessagePrompt","buildCoverLetterUpdatePrompt","buildCompanyAndEmailPrompt","buildGeminiPromptForJD","callGeminiAPIforJD","callGeminiAPI","callGeminiAPIForLinkedInMessage","callGeminiAPIForCoverLetterUpdate","callGeminiAPIForCompanyAndEmail","CoverLetterEditorModal","jsxDEV","_jsxDEV","JDInput","onJDUpdate","_s","navigate","isLoggedIn","localStorage","getItem","jobDesc","setJobDesc","loading","setLoading","companyName","setCompanyName","summaryLatex","setSummaryLatex","skillsLatex","setSkillsLatex","metlifeLatex","setMetlifeLatex","adonsLatex","setAdonsLatex","changes","setChanges","coverLetter","setCoverLetter","coldEmail","setColdEmail","FinalResumeLatex","setFinalResumeLatex","linkedinMessage","setLinkedinMessage","showModal","setShowModal","latexResume","setLatexResume","showEmailModal","setShowEmailModal","emailSubject","setEmailSubject","emailBody","setEmailBody","emailSending","setEmailSending","toastMsg","setToastMsg","jobResult","setJobResult","showJobModal","setShowJobModal","isEditorOpen","setEditorOpen","todayDate","Date","toLocaleDateString","year","month","day","subjectMatch","match","trim","replace","showToast","msg","setTimeout","renderBox","title","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","onClick","navigator","clipboard","writeText","handleJD","prompt","jobDescription","full","result","handleGenerate","handleLinkedInMessage","console","log","handleCoverLetterUpdate","updatedCoverLetter","state","template","updated","handleCompanyNameExtraction","company","handleSaveToDB","payload","applyDate","toISOString","split","finalResumeLatex","response","fetch","method","headers","body","JSON","stringify","json","status","alert","message","error","handleSendEmail","to","document","querySelector","subject","text","fileInput","attachmentBase64","attachmentName","files","length","file","name","reader","FileReader","onload","res","data","ok","err","readAsDataURL","removeItem","placeholder","onChange","e","target","disabled","map","chunk","index","isOpen","onClose","coverLetterContent","updatedText","setCoverLetterContent","type","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/resuME/ResumeApp/Resume-FrontEnd/src/components/JDInput.js"],"sourcesContent":["// JDInput.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  buildGeminiPrompt,\n  resumeTemplate,\n  coverLetterTemplate,\n  coldEmailTemplate,\n  buildLinkedInMessagePrompt,\n  buildCoverLetterUpdatePrompt,\n  buildCompanyAndEmailPrompt,\n  buildGeminiPromptForJD,\n} from \"../utils/promptBuilder\";\nimport {\n  callGeminiAPIforJD,\n  callGeminiAPI,\n  callGeminiAPIForLinkedInMessage,\n  callGeminiAPIForCoverLetterUpdate,\n  callGeminiAPIForCompanyAndEmail,\n} from \"../utils/apiHandler\";\n\nimport \"../CSS/JDInput.css\";\nimport CoverLetterEditorModal from \"../components/CoverLetterEditorModal.js\";\n\nfunction JDInput({ onJDUpdate }) {\n  // 🌐 Routing\n  const navigate = useNavigate();\n\n  // 🔐 Authentication check\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    if (isLoggedIn !== \"true\") {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  // State variables\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [companyName, setCompanyName] = useState(\"\");\n  const [summaryLatex, setSummaryLatex] = useState(\"\");\n  const [skillsLatex, setSkillsLatex] = useState(\"\");\n  const [metlifeLatex, setMetlifeLatex] = useState(\"\");\n  const [adonsLatex, setAdonsLatex] = useState(\"\");\n  const [changes, setChanges] = useState(\"\"); // Added changes state\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [coldEmail, setColdEmail] = useState(\"\");\n  const [FinalResumeLatex, setFinalResumeLatex] = useState(\"\");\n  const [linkedinMessage, setLinkedinMessage] = useState(\"\");\n  const [showModal, setShowModal] = useState(false); // Controls popup visibility\n  const [latexResume, setLatexResume] = useState(\"\"); // Stores pasted LaTeX resume\n  const [showEmailModal, setShowEmailModal] = useState(false); // Controls email modal visibility\n  const [emailSubject, setEmailSubject] = useState(\"\");\n  const [emailBody, setEmailBody] = useState(\"\");\n  const [emailSending, setEmailSending] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [jobResult, setJobResult] = useState(\"\");\n  const [showJobModal, setShowJobModal] = useState(false);\n  const [isEditorOpen, setEditorOpen] = useState(false);\n  // const [coverLetterContent, setCoverLetterContent] = useState(\n  //   `Your default content here...`\n  // );\n\n  // 📅 Format today's date\n  const todayDate = new Date().toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  useEffect(() => {\n    const subjectMatch = coldEmail.match(/Subject:\\s*(.*)/i);\n    setEmailSubject(subjectMatch ? subjectMatch[1].trim() : \"\");\n    setEmailBody(coldEmail.replace(/Subject:.*\\n?/i, \"\").trim());\n  }, [coldEmail]);\n\n  // Toast message function\n  const showToast = (msg) => {\n    setToastMsg(msg);\n    setTimeout(() => setToastMsg(\"\"), 3000); // toast disappears in 3 seconds\n  };\n\n  // 📥 Copyable Content Box Renderer\n  const renderBox = (title, content) => (\n    <div className=\"content-box\">\n      <h3>{title}</h3>\n      <textarea rows=\"8\" value={content} readOnly className=\"textarea\" />\n      <button\n        className=\"copy-btn\"\n        onClick={() => {\n          navigator.clipboard.writeText(content);\n        }}\n      >\n        Copy the text\n      </button>\n    </div>\n  );\n\n  // 💡 Feature Functions\n  const handleJD = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPromptForJD({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n    });\n    const result = await callGeminiAPIforJD(prompt);\n    setJobResult(result.result || \"\");\n    setLoading(false);\n    setShowJobModal(true);\n  };\n\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      coldEmailTemplate,\n    });\n    const result = await callGeminiAPI(prompt);\n    setCompanyName(result.companyName || \"\");\n    setSummaryLatex(result.summaryLatex || \"\");\n    setSkillsLatex(result.skillsLatex || \"\");\n    setMetlifeLatex(result.metlifeLatex || \"\");\n    setAdonsLatex(result.adonsLatex || \"\");\n    setChanges(result.changes || \"\"); // Set changes from the result\n    setCoverLetter(result.coverLetter || \"\");\n    setColdEmail(result.coldEmail || \"\");\n    setFinalResumeLatex(result.FinalResumeLatex || \"\");\n    setLoading(false);\n  };\n\n  const handleLinkedInMessage = async () => {\n    if (!jobDesc.trim()) return;\n    console.log(\n      \"🚀 ~ file: JDInput.js:88 ~ handleLinkedInMessage ~ jobDesc:\",\n      jobDesc\n    );\n    setLoading(true);\n    const prompt = buildLinkedInMessagePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n    });\n    const result = await callGeminiAPIForLinkedInMessage(prompt);\n    console.log(\"the result in jdinput file is \", result);\n    setLinkedinMessage(result.linkedinMessage || \"\");\n    setLoading(false);\n  };\n\n  const handleCoverLetterUpdate = async () => {\n    console.log(\n      \"the handle cover letter update is called in jd input function\"\n    );\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n\n    const prompt = buildCoverLetterUpdatePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      todayDate,\n    });\n    console.log(\"the prompt in jd input file is \", prompt);\n\n    const { updatedCoverLetter } = await callGeminiAPIForCoverLetterUpdate(\n      prompt\n    );\n    console.log(\"the updated cover letter is \", updatedCoverLetter);\n\n    setLoading(false);\n    navigate(\"/cover-letter-update\", {\n      state: {\n        template: coverLetterTemplate,\n        updated: updatedCoverLetter,\n      },\n    });\n  };\n\n  const handleCompanyNameExtraction = async () => {\n    const prompt = buildCompanyAndEmailPrompt(jobDesc);\n    const company = await callGeminiAPIForCompanyAndEmail(prompt);\n    console.log(\"🧾 Company Extracted:\", company);\n  };\n\n  const handleSaveToDB = async () => {\n    const payload = {\n      applyDate: new Date().toISOString().split(\"T\")[0],\n      companyName,\n      summaryLatex,\n      skillsLatex,\n      metlifeLatex,\n      adonsLatex,\n      changes,\n      coverLetter,\n      coldEmail,\n      finalResumeLatex: FinalResumeLatex,\n      jobDescription: jobDesc, // Include job description in payload\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5001/save-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result = await response.json();\n      console.log(\"✅ Backend Response:\", result);\n      if (response.status === 200) {\n        alert(\"✅ Saved to DB successfully!\");\n      } else if (response.status === 409) {\n        alert(\"⚠️ This data already exists in the database.\");\n      } else {\n        alert(`❌ Unexpected error: ${result.message || \"Unknown error\"}`);\n      }\n\n      // alert(\"✅ Saved to DB successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error saving to DB:\", error);\n      alert(\"❌ Failed to save to DB.\");\n    }\n  };\n\n  const handleSendEmail = async () => {\n    const to = document.querySelector(\".gmail-to\").value;\n    const subject = emailSubject;\n    const text = emailBody;\n    const fileInput = document.querySelector(\".gmail-attachment\");\n\n    let attachmentBase64 = \"\";\n    let attachmentName = \"\";\n\n    if (fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      attachmentName = file.name;\n\n      const reader = new FileReader();\n      reader.onload = async () => {\n        // Strip the base64 prefix (e.g., \"data:application/pdf;base64,...\")\n        attachmentBase64 = reader.result.split(\",\")[1];\n\n        try {\n          setEmailSending(true);\n          const res = await fetch(\"http://localhost:5001/send-email\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              to,\n              subject,\n              text,\n              attachmentName,\n              attachmentBase64,\n            }),\n          });\n\n          const data = await res.json();\n          if (res.ok) {\n            // alert(\"📨 Email sent successfully!\");\n            showToast(\"📨 Email sent successfully!\");\n\n            setShowEmailModal(false);\n          } else {\n            // alert(\"❌ Failed to send email: \" + data.message);\n            showToast(\"❌ Failed: \" + data.error);\n          }\n        } catch (err) {\n          showToast(\"❌ Network error: \" + err.message);\n        } finally {\n          setEmailSending(false); // ✅ stop spinner\n        }\n      };\n      reader.readAsDataURL(file); // Triggers reader.onload above\n    } else {\n      // No attachment, just send email\n      try {\n        setEmailSending(true);\n        const res = await fetch(\"http://localhost:5001/send-email\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ to, subject, text }), // no attachment\n        });\n\n        const data = await res.json();\n        if (res.ok) {\n          showToast(\"📨 Email sent successfully!\");\n          // alert(\"📨 Email sent successfully!\");\n          setShowEmailModal(false);\n        } else {\n          showToast(\"❌ Failed: \" + data.message);\n        }\n      } catch (err) {\n        showToast(\"❌ Network error: \" + err.message);\n      } finally {\n        setEmailSending(false); // ✅ stop spinner\n      }\n    }\n  };\n  return (\n    <div className=\"jd-wrapper\">\n      <header className=\"header\">\n        <h1>ResuMe</h1>\n        <p>\n          <strong>Resume Update | Cover Letter | Cold Mail</strong>\n        </p>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"loggedIn\");\n            navigate(\"/login\");\n          }}\n        >\n          🚪 Logout\n        </button>\n      </header>\n\n      {/* ✅ Toast & Spinner */}\n      {toastMsg && <div className=\"toast-message\">{toastMsg}</div>}\n      {emailSending && <div className=\"spinner\"></div>}\n\n      <div className=\"main\">\n        <div className=\"left-panel\">\n          <h2>Job Description</h2>\n          <textarea\n            className=\"textarea jd-input\"\n            rows=\"6\"\n            placeholder=\"Paste job description here...\"\n            value={jobDesc}\n            onChange={(e) => setJobDesc(e.target.value)}\n          />\n          <div className=\"button-container\">\n            <button onClick={handleJD} disabled={loading}>\n              {loading ? \"Checking Job...\" : \"Job Matching/Unmatching\"}\n            </button>\n            <button onClick={handleGenerate} disabled={loading}>\n              {loading ? \"Generating...\" : \"Generate Tailored Content\"}\n            </button>\n            <button\n              className=\"linkedin-btn\"\n              onClick={handleLinkedInMessage}\n              disabled={loading}\n            >\n              💬 Generate LinkedIn Message\n            </button>\n            <button onClick={() => navigate(\"/ats-analysis\")}>\n              🔍 Compare Resume with JD (ATS Score)\n            </button>\n            <button onClick={handleCoverLetterUpdate} disabled={loading}>\n              ✉️ Generate Cover Letter\n            </button>\n            <button onClick={handleCompanyNameExtraction}>\n              🧾 Get Company Name\n            </button>\n            <button onClick={handleSaveToDB} disabled={loading}>\n              💾 Save to Database\n            </button>\n          </div>\n\n          {jobResult && (\n            <div className=\"overlay\">\n              <div className=\"modal job-analysis-modal\">\n                <button className=\"close-btn\" onClick={() => setJobResult(\"\")}>\n                  ×\n                </button>\n                <h2>🧠 Job Compatibility Analysis</h2>\n                <div className=\"modal-content\">\n                  {jobResult.split(/\\*\\*(.*?)\\*\\*/g).map((chunk, index) =>\n                    index % 2 === 1 ? (\n                      <h4 key={index} className=\"highlight-heading\">\n                        {chunk}\n                      </h4>\n                    ) : (\n                      <p key={index}>{chunk}</p>\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {linkedinMessage &&\n            renderBox(\"LinkedIn Message to Recruiter\", linkedinMessage)}\n\n          <div className=\"mini-grid\">\n            {renderBox(\"Summary\", summaryLatex)}\n            {renderBox(\"Tech Skills\", skillsLatex)}\n            {renderBox(\"Met Life Work Exp\", metlifeLatex)}\n            {renderBox(\"Adons Work Exp\", adonsLatex)}\n          </div>\n        </div>\n\n        <div className=\"right-panel\">\n          <h2>{companyName}</h2>\n          {renderBox(\"Changes Made\", changes)}\n          {renderBox(\"Final Resume\", FinalResumeLatex)}\n          {renderBox(\"CoverLetter For Given Job\", coverLetter)}\n          <button onClick={() => setEditorOpen(true)}>Edit Cover Letter</button>\n          {renderBox(\"ColdMail For Given Job\", coldEmail)}\n          {coldEmail && (\n            <button\n              className=\"send-email-btn\"\n              onClick={() => setShowEmailModal(true)}\n            >\n              Send Cold Email\n            </button>\n          )}\n        </div>\n      </div>\n      <CoverLetterEditorModal\n        isOpen={isEditorOpen}\n        onClose={() => setEditorOpen(false)}\n        content={coverLetterContent}\n        onChange={(updatedText) => setCoverLetterContent(updatedText)}\n      />\n      {/* 📄 Resume Paste Modal (LaTeX Resume Modal) */}\n      {showModal && (\n        <div className=\"gmail-overlay\">\n          <div className=\"gmail-compose-box\">\n            <div className=\"gmail-header\">\n              <span>Paste Your Full LaTeX Resume</span>\n              <div className=\"gmail-icons\">\n                <span title=\"Minimize\">—</span>\n                <span title=\"Full screen\">⧉</span>\n                <span\n                  className=\"gmail-close\"\n                  onClick={() => setShowModal(false)}\n                >\n                  ×\n                </span>\n              </div>\n            </div>\n            <textarea\n              rows=\"12\"\n              value={latexResume}\n              onChange={(e) => setLatexResume(e.target.value)}\n              placeholder=\"Paste your full LaTeX resume code here...\"\n              className=\"gmail-body\"\n            />\n            <div className=\"gmail-footer\">\n              <button\n                className=\"gmail-send\"\n                onClick={() => setShowModal(false)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"gmail-send\"\n                onClick={() => {\n                  console.log(\"Submitted Resume:\", latexResume);\n                  setShowModal(false);\n                }}\n              >\n                Submit for Comparison\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* 📧 Gmail Compose Cold Email Modal */}\n      {showEmailModal && (\n        <div className=\"gmail-overlay\">\n          <div className=\"gmail-compose-box\">\n            <div className=\"gmail-header\">\n              <span>New Message</span>\n              <div className=\"gmail-icons\">\n                <span title=\"Minimize\">—</span>\n                <span title=\"Full screen\">⧉</span>\n                <span\n                  className=\"gmail-close\"\n                  onClick={() => setShowEmailModal(false)}\n                >\n                  ×\n                </span>\n              </div>\n            </div>\n\n            <div className=\"gmail-fields\">\n              <input type=\"text\" className=\"gmail-to\" placeholder=\"To\" />\n              <input\n                type=\"text\"\n                className=\"gmail-subject\"\n                placeholder=\"Subject\"\n                value={emailSubject}\n                onChange={(e) => setEmailSubject(e.target.value)}\n              />\n              <textarea\n                className=\"gmail-body\"\n                rows=\"10\"\n                value={emailBody}\n                onChange={(e) => setEmailBody(e.target.value)}\n              />\n              <input type=\"file\" className=\"gmail-attachment\" />\n            </div>\n\n            <div className=\"gmail-footer\">\n              <button\n                className=\"gmail-send\"\n                onClick={handleSendEmail}\n                disabled={emailSending}\n              >\n                {emailSending ? \"Sending...\" : \"Send\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default JDInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}