{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/JDInput.js\",\n  _s = $RefreshSig$();\n// JDInput.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { buildGeminiPrompt, resumeTemplate, coverLetterTemplate, coldEmailTemplate, buildLinkedInMessagePrompt, buildCoverLetterUpdatePrompt, buildCompanyAndEmailPrompt, buildGeminiPromptForJD, buildFitForRolePrompt } from \"../utils/promptBuilder\";\nimport { callGeminiAPIforJD, callGeminiAPI, callGeminiAPIForLinkedInMessage, callGeminiAPIForCoverLetterUpdate, callGeminiAPIForCompanyAndEmail, callGeminiAPIForFitExplanation } from \"../utils/apiHandler\";\nimport { sanitizeLatexContent, sanitizeSkillsLatex } from \"../utils/latexSanitizer\";\nimport \"../CSS/JDInput.css\";\nimport { useResume } from \"../context/ResumeContext\"; // ✅ Add this\n// Add this import with your other imports\nimport ColdEmailSender from \"../components/ColdEmailSender\";\n\n// import { whyIFitService } from \"../services/api\";\n\n// Add these imports at the top of JDInput.js\nimport EmailStatsWidget from \"../components/EmailStatsWidget\";\nimport \"../CSS/EmailStatsWidget.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JDInput({\n  onJDUpdate\n}) {\n  _s();\n  // 🌐 Routing\n  const navigate = useNavigate();\n\n  // 🔐 Authentication check\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    if (isLoggedIn !== \"true\") {\n      navigate(\"/login\");\n    }\n  }, []);\n  const {\n    jobDesc,\n    setJobDesc,\n    summaryLatex,\n    setSummaryLatex,\n    skillsLatex,\n    setSkillsLatex,\n    metlifeLatex,\n    setMetlifeLatex,\n    adonsLatex,\n    setAdonsLatex,\n    companyName,\n    setCompanyName,\n    FinalResumeLatex,\n    setFinalResumeLatex,\n    changes,\n    setChanges,\n    coverLetter,\n    setCoverLetter,\n    coldEmail,\n    setColdEmail,\n    linkedinMessage,\n    setLinkedinMessage\n  } = useResume();\n  const [loading, setLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [latexResume, setLatexResume] = useState(\"\");\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [emailSubject, setEmailSubject] = useState(\"\");\n  const [emailBody, setEmailBody] = useState(\"\");\n  const [emailSending, setEmailSending] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [jobResult, setJobResult] = useState(\"\");\n  const [showJobModal, setShowJobModal] = useState(false);\n  const [isEditorOpen, setEditorOpen] = useState(false);\n  const [coverLetterContent, setCoverLetterContent] = useState(`Your default content here...`);\n  const [fitExplanation, setFitExplanation] = useState(\"\");\n  // Add these state variables in your JDInput component\n  const [emailStats, setEmailStats] = useState({});\n  const [emailReminders, setEmailReminders] = useState([]);\n  // Add this function to handle stats updates\n  const handleEmailStatsUpdate = data => {\n    setEmailStats(data.stats || {});\n    setEmailReminders(data.reminders || []);\n  };\n  const [jobCount, setJobCount] = useState(() => {\n    const saved = localStorage.getItem(\"jobCounter\");\n    return saved ? parseInt(saved) : 1;\n  });\n  const handleNextJob = () => {\n    const newCount = jobCount + 1;\n    localStorage.setItem(\"jobCounter\", newCount);\n    setJobCount(newCount);\n    window.location.reload(); // Refresh page to start over\n  };\n  const formattedCoverLetter = coverLetter.replace(/\\n\\n/g, \"<p>\").replace(/\\n/g, \"<br>\");\n\n  // 📅 Format today's date\n  const todayDate = new Date().toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  });\n  useEffect(() => {\n    const subjectMatch = coldEmail.match(/Subject:\\s*(.*)/i);\n    setEmailSubject(subjectMatch ? subjectMatch[1].trim() : \"\");\n    setEmailBody(coldEmail.replace(/Subject:.*\\n?/i, \"\").trim());\n  }, [coldEmail]);\n\n  // Toast message function\n  const showToast = msg => {\n    setToastMsg(msg);\n    setTimeout(() => setToastMsg(\"\"), 3000); // toast disappears in 3 seconds\n  };\n\n  // 📥 Copyable Content Box Renderer\n  const renderBox = (title, content) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"8\",\n      value: content,\n      readOnly: true,\n      className: \"textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"copy-btn\",\n      onClick: () => {\n        navigator.clipboard.writeText(content);\n      },\n      children: \"Copy the text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n\n  // 💡 Feature Functions\n  const handleJD = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPromptForJD({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full\n    });\n    const result = await callGeminiAPIforJD(prompt);\n    setJobResult(result.result || \"\");\n    setLoading(false);\n    setShowJobModal(true);\n  };\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      coldEmailTemplate\n    });\n    const result = await callGeminiAPI(prompt);\n    setCompanyName(result.companyName || \"\");\n    setSummaryLatex(sanitizeLatexContent(result.summaryLatex || \"\"));\n    setSkillsLatex(result.skillsLatex || \"\");\n    setMetlifeLatex(sanitizeLatexContent(result.metlifeLatex || \"\"));\n    setAdonsLatex(sanitizeLatexContent(result.adonsLatex || \"\"));\n    setChanges(result.changes || \"\"); // Set changes from the result\n    setCoverLetter(sanitizeLatexContent(result.coverLetter || \"\"));\n    setColdEmail(result.coldEmail || \"\");\n    setFinalResumeLatex(sanitizeLatexContent(result.FinalResumeLatex || \"\"));\n    setLoading(false);\n  };\n  const handleLinkedInMessage = async () => {\n    if (!jobDesc.trim()) return;\n    console.log(\"🚀 ~ file: JDInput.js:88 ~ handleLinkedInMessage ~ jobDesc:\", jobDesc);\n    setLoading(true);\n    const prompt = buildLinkedInMessagePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full\n    });\n    const result = await callGeminiAPIForLinkedInMessage(prompt);\n    console.log(\"the result in jdinput file is \", result);\n    setLinkedinMessage(result.linkedinMessage || \"\");\n    setLoading(false);\n  };\n  const handleCoverLetterUpdate = async () => {\n    console.log(\"the handle cover letter update is called in jd input function\");\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    const prompt = buildCoverLetterUpdatePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      todayDate\n    });\n    console.log(\"the prompt in jd input file is \", prompt);\n    const {\n      updatedCoverLetter\n    } = await callGeminiAPIForCoverLetterUpdate(prompt);\n    console.log(\"the updated cover letter is \", updatedCoverLetter);\n    setLoading(false);\n    navigate(\"/cover-letter-update\", {\n      state: {\n        template: coverLetterTemplate,\n        updated: updatedCoverLetter\n      }\n    });\n  };\n  const handleCompanyNameExtraction = async () => {\n    const prompt = buildCompanyAndEmailPrompt(jobDesc);\n    const company = await callGeminiAPIForCompanyAndEmail(prompt);\n    console.log(\"🧾 Company Extracted:\", company);\n  };\n  const handleSaveToDB = async () => {\n    const payload = {\n      applyDate: new Date().toISOString().split(\"T\")[0],\n      companyName,\n      summaryLatex,\n      skillsLatex,\n      metlifeLatex,\n      adonsLatex,\n      changes,\n      coverLetter,\n      coldEmail,\n      finalResumeLatex: FinalResumeLatex,\n      jobDescription: jobDesc // Include job description in payload\n    };\n    try {\n      const response = await fetch(\"http://localhost:5001/save-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n      console.log(\"✅ Backend Response:\", result);\n      if (response.status === 200) {\n        alert(\"✅ Saved to DB successfully!\");\n      } else if (response.status === 409) {\n        alert(\"⚠️ This data already exists in the database.\");\n      } else {\n        alert(`❌ Unexpected error: ${result.message || \"Unknown error\"}`);\n      }\n\n      // alert(\"✅ Saved to DB successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error saving to DB:\", error);\n      alert(\"❌ Failed to save to DB.\");\n    }\n  };\n  const handleSendEmail = async () => {\n    const to = document.querySelector(\".gmail-to\").value;\n    const subject = emailSubject;\n    const text = emailBody;\n    const fileInput = document.querySelector(\".gmail-attachment\");\n    let attachmentBase64 = \"\";\n    let attachmentName = \"\";\n    if (fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      attachmentName = file.name;\n      const reader = new FileReader();\n      reader.onload = async () => {\n        // Strip the base64 prefix (e.g., \"data:application/pdf;base64,...\")\n        attachmentBase64 = reader.result.split(\",\")[1];\n        try {\n          setEmailSending(true);\n          const res = await fetch(\"http://localhost:5001/send-email\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              to,\n              subject,\n              text,\n              attachmentName,\n              attachmentBase64\n            })\n          });\n          const data = await res.json();\n          if (res.ok) {\n            // alert(\"📨 Email sent successfully!\");\n            showToast(\"📨 Email sent successfully!\");\n            setShowEmailModal(false);\n          } else {\n            // alert(\"❌ Failed to send email: \" + data.message);\n            showToast(\"❌ Failed: \" + data.error);\n          }\n        } catch (err) {\n          showToast(\"❌ Network error: \" + err.message);\n        } finally {\n          setEmailSending(false); // ✅ stop spinner\n        }\n      };\n      reader.readAsDataURL(file); // Triggers reader.onload above\n    } else {\n      // No attachment, just send email\n      try {\n        setEmailSending(true);\n        const res = await fetch(\"http://localhost:5001/send-email\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            to,\n            subject,\n            text\n          }) // no attachment\n        });\n        const data = await res.json();\n        if (res.ok) {\n          showToast(\"📨 Email sent successfully!\");\n          // alert(\"📨 Email sent successfully!\");\n          setShowEmailModal(false);\n        } else {\n          showToast(\"❌ Failed: \" + data.message);\n        }\n      } catch (err) {\n        showToast(\"❌ Network error: \" + err.message);\n      } finally {\n        setEmailSending(false); // ✅ stop spinner\n      }\n    }\n  };\n  const handleGoToResumeGenerator = () => {\n    // Navigate to resume generation component with the generated data\n    navigate(\"/resume-generation\", {\n      state: {\n        resumeData: {\n          PROFESSIONAL_SUMMARY: summaryLatex,\n          TECHNICAL_SKILLS: skillsLatex,\n          METLIFE_BULLET_POINTS: metlifeLatex,\n          ADONS_BULLET_POINTS: adonsLatex\n        },\n        jobDescription: jobDesc,\n        companyName: companyName\n      }\n    });\n  };\n  const handleFitExplanation = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    const prompt = buildFitForRolePrompt({\n      jobDescription: jobDesc,\n      resumeLatex: FinalResumeLatex || resumeTemplate.full\n    });\n    const result = await callGeminiAPIForFitExplanation(prompt);\n    setFitExplanation(result.fitExplanation || \"\");\n    setLoading(false);\n  };\n\n  // Replace your handleWhyIFitGeneration function with this:\n  const handleWhyIFitGeneration = async () => {\n    if (!jobDesc.trim()) {\n      alert(\"Please enter a job description first\");\n      return;\n    }\n    if (!fitExplanation.trim()) {\n      alert(\"Please click 'Why I Fit This Role' button first to generate AI analysis\");\n      return;\n    }\n\n    // Navigate to the Why I Fit generation page with the data\n    navigate(\"/why-i-fit-generation\", {\n      state: {\n        whyIFitData: fitExplanation,\n        companyName: companyName,\n        jobDescription: jobDesc\n      }\n    });\n  };\n  const handleGmailManager = () => {\n    navigate(\"/gmail-manager\");\n  };\n  // / Add this function to refresh Gmail and update stats\n  const handleGmailRefresh = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8080/api/emails/fetch-gmail\", {\n        method: \"POST\"\n      });\n      const result = await response.json();\n      if (result.success) {\n        showToast(\"Gmail emails fetched successfully!\");\n        // Refresh the email stats widget\n        window.location.reload(); // Or trigger a re-render of EmailStatsWidget\n      } else {\n        showToast(\"Error fetching Gmail: \" + result.message);\n      }\n    } catch (error) {\n      showToast(\"Gmail fetch error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jd-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ResuMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Resume Update | Cover Letter | Cold Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem(\"loggedIn\");\n          navigate(\"/login\");\n        },\n        children: \"\\uD83D\\uDEAA Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), toastMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast-message\",\n      children: toastMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 20\n    }, this), emailSending && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Job Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"textarea jd-input\",\n          rows: \"6\",\n          placeholder: \"Paste job description here...\",\n          value: jobDesc,\n          onChange: e => setJobDesc(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleJD,\n            disabled: loading,\n            children: loading ? \"Checking Job...\" : \"Job Matching/Unmatching\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGenerate,\n            disabled: loading,\n            children: loading ? \"Generating...\" : \"Generate Tailored Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"linkedin-btn\",\n            onClick: handleLinkedInMessage,\n            disabled: loading,\n            children: \"\\uD83D\\uDCAC Generate LinkedIn Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(\"/ats-analysis\"),\n            children: \"\\uD83D\\uDD0D Compare Resume with JD (ATS Score)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCoverLetterUpdate,\n            disabled: loading,\n            children: \"\\u2709\\uFE0F Generate Cover Letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCompanyNameExtraction,\n            children: \"\\uD83E\\uDDFE Get Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSaveToDB,\n            disabled: loading,\n            children: \"\\uD83D\\uDCBE Save to Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), summaryLatex && skillsLatex && metlifeLatex && adonsLatex && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleGoToResumeGenerator,\n            className: \"resume-generator-btn\",\n            children: \"\\uD83C\\uDFAF Go to Resume Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleFitExplanation,\n            disabled: loading,\n            children: \"Why I Fit This Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this), jobResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal job-analysis-modal\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close-btn\",\n              onClick: () => setJobResult(\"\"),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\uD83E\\uDDE0 Job Compatibility Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-content\",\n              children: jobResult.split(/\\*\\*(.*?)\\*\\*/g).map((chunk, index) => index % 2 === 1 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"highlight-heading\",\n                children: chunk\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: chunk\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), linkedinMessage && renderBox(\"LinkedIn Message to Recruiter\", linkedinMessage), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-grid\",\n          children: [renderBox(\"Summary\", summaryLatex), renderBox(\"Tech Skills\", skillsLatex), renderBox(\"Met Life Work Exp\", metlifeLatex), renderBox(\"Adons Work Exp\", adonsLatex)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                marginRight: \"10px\",\n                fontWeight: \"bold\"\n              },\n              children: \"Company Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: companyName,\n              onChange: e => setCompanyName(e.target.value),\n              style: {\n                padding: \"6px 10px\",\n                borderRadius: \"4px\",\n                border: \"1px solid #ccc\",\n                fontSize: \"1rem\",\n                width: \"220px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"job-counter\",\n              children: [\"\\uD83E\\uDDFE Job #\", jobCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextJob,\n              children: \"\\u2795 Next Job\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                localStorage.removeItem(\"jobCounter\");\n                window.location.reload();\n              },\n              children: \"Reset Counter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"gmailManagerButton\",\n          onClick: handleGmailManager,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Gmail Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EmailStatsWidget, {\n          onStatsUpdate: handleEmailStatsUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this), renderBox(\"Changes Made\", changes), renderBox(\"Final Resume\", FinalResumeLatex), renderBox(\"CoverLetter For Given Job\", coverLetter), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (coverLetter) {\n              navigate(\"/cover-letter-generation\", {\n                state: {\n                  coverLetterData: coverLetter,\n                  companyName: companyName,\n                  jobDescription: jobDesc\n                }\n              });\n            } else {\n              alert(\"Please generate cover letter content first!\");\n            }\n          },\n          className: \"edit-cover-letter-btn\",\n          children: \"\\u270F\\uFE0F Edit & Generate Cover Letter PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), fitExplanation && renderBox(\"🧠 Why I Fit This Role\", fitExplanation), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleWhyIFitGeneration,\n          children: \"\\uD83D\\uDCC4 Edit & Generate Why I Fit Document\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 611,\n          columnNumber: 11\n        }, this), renderBox(\"ColdMail For Given Job\", coldEmail), coldEmail && /*#__PURE__*/_jsxDEV(ColdEmailSender, {\n          coldEmail: coldEmail,\n          companyName: companyName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmail-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmail-compose-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Paste Your Full LaTeX Resume\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gmail-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Minimize\",\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Full screen\",\n              children: \"\\u29C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gmail-close\",\n              onClick: () => setShowModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"12\",\n          value: latexResume,\n          onChange: e => setLatexResume(e.target.value),\n          placeholder: \"Paste your full LaTeX resume code here...\",\n          className: \"gmail-body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: () => setShowModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: () => {\n              console.log(\"Submitted Resume:\", latexResume);\n              setShowModal(false);\n            },\n            children: \"Submit for Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }, this), showEmailModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gmail-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gmail-compose-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"New Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gmail-icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Minimize\",\n              children: \"\\u2014\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Full screen\",\n              children: \"\\u29C9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"gmail-close\",\n              onClick: () => setShowEmailModal(false),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-fields\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"gmail-to\",\n            placeholder: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"gmail-subject\",\n            placeholder: \"Subject\",\n            value: emailSubject,\n            onChange: e => setEmailSubject(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"gmail-body\",\n            rows: \"10\",\n            value: emailBody,\n            onChange: e => setEmailBody(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"gmail-attachment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gmail-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"gmail-send\",\n            onClick: handleSendEmail,\n            disabled: emailSending,\n            children: emailSending ? \"Sending...\" : \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n_s(JDInput, \"COZC4VvGF3KJWo9gP+qZEansAxc=\", false, function () {\n  return [useNavigate, useResume];\n});\n_c = JDInput;\nexport default JDInput;\nvar _c;\n$RefreshReg$(_c, \"JDInput\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","buildGeminiPrompt","resumeTemplate","coverLetterTemplate","coldEmailTemplate","buildLinkedInMessagePrompt","buildCoverLetterUpdatePrompt","buildCompanyAndEmailPrompt","buildGeminiPromptForJD","buildFitForRolePrompt","callGeminiAPIforJD","callGeminiAPI","callGeminiAPIForLinkedInMessage","callGeminiAPIForCoverLetterUpdate","callGeminiAPIForCompanyAndEmail","callGeminiAPIForFitExplanation","sanitizeLatexContent","sanitizeSkillsLatex","useResume","ColdEmailSender","EmailStatsWidget","jsxDEV","_jsxDEV","JDInput","onJDUpdate","_s","navigate","isLoggedIn","localStorage","getItem","jobDesc","setJobDesc","summaryLatex","setSummaryLatex","skillsLatex","setSkillsLatex","metlifeLatex","setMetlifeLatex","adonsLatex","setAdonsLatex","companyName","setCompanyName","FinalResumeLatex","setFinalResumeLatex","changes","setChanges","coverLetter","setCoverLetter","coldEmail","setColdEmail","linkedinMessage","setLinkedinMessage","loading","setLoading","showModal","setShowModal","latexResume","setLatexResume","showEmailModal","setShowEmailModal","emailSubject","setEmailSubject","emailBody","setEmailBody","emailSending","setEmailSending","toastMsg","setToastMsg","jobResult","setJobResult","showJobModal","setShowJobModal","isEditorOpen","setEditorOpen","coverLetterContent","setCoverLetterContent","fitExplanation","setFitExplanation","emailStats","setEmailStats","emailReminders","setEmailReminders","handleEmailStatsUpdate","data","stats","reminders","jobCount","setJobCount","saved","parseInt","handleNextJob","newCount","setItem","window","location","reload","formattedCoverLetter","replace","todayDate","Date","toLocaleDateString","year","month","day","subjectMatch","match","trim","showToast","msg","setTimeout","renderBox","title","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","onClick","navigator","clipboard","writeText","handleJD","prompt","jobDescription","full","result","handleGenerate","handleLinkedInMessage","console","log","handleCoverLetterUpdate","updatedCoverLetter","state","template","updated","handleCompanyNameExtraction","company","handleSaveToDB","payload","applyDate","toISOString","split","finalResumeLatex","response","fetch","method","headers","body","JSON","stringify","json","status","alert","message","error","handleSendEmail","to","document","querySelector","subject","text","fileInput","attachmentBase64","attachmentName","files","length","file","name","reader","FileReader","onload","res","ok","err","readAsDataURL","handleGoToResumeGenerator","resumeData","PROFESSIONAL_SUMMARY","TECHNICAL_SKILLS","METLIFE_BULLET_POINTS","ADONS_BULLET_POINTS","handleFitExplanation","resumeLatex","handleWhyIFitGeneration","whyIFitData","handleGmailManager","handleGmailRefresh","success","removeItem","placeholder","onChange","e","target","disabled","map","chunk","index","style","display","alignItems","marginBottom","marginRight","fontWeight","type","padding","borderRadius","border","fontSize","width","onStatsUpdate","coverLetterData","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/JDInput.js"],"sourcesContent":["// JDInput.js\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  buildGeminiPrompt,\n  resumeTemplate,\n  coverLetterTemplate,\n  coldEmailTemplate,\n  buildLinkedInMessagePrompt,\n  buildCoverLetterUpdatePrompt,\n  buildCompanyAndEmailPrompt,\n  buildGeminiPromptForJD,\n  buildFitForRolePrompt,\n} from \"../utils/promptBuilder\";\nimport {\n  callGeminiAPIforJD,\n  callGeminiAPI,\n  callGeminiAPIForLinkedInMessage,\n  callGeminiAPIForCoverLetterUpdate,\n  callGeminiAPIForCompanyAndEmail,\n  callGeminiAPIForFitExplanation,\n} from \"../utils/apiHandler\";\nimport {\n  sanitizeLatexContent,\n  sanitizeSkillsLatex,\n} from \"../utils/latexSanitizer\";\nimport \"../CSS/JDInput.css\";\nimport { useResume } from \"../context/ResumeContext\"; // ✅ Add this\n// Add this import with your other imports\nimport ColdEmailSender from \"../components/ColdEmailSender\";\n\n// import { whyIFitService } from \"../services/api\";\n\n// Add these imports at the top of JDInput.js\nimport EmailStatsWidget from \"../components/EmailStatsWidget\";\nimport \"../CSS/EmailStatsWidget.css\";\n\nfunction JDInput({ onJDUpdate }) {\n  // 🌐 Routing\n  const navigate = useNavigate();\n\n  // 🔐 Authentication check\n  useEffect(() => {\n    const isLoggedIn = localStorage.getItem(\"loggedIn\");\n    if (isLoggedIn !== \"true\") {\n      navigate(\"/login\");\n    }\n  }, []);\n\n  const {\n    jobDesc,\n    setJobDesc,\n    summaryLatex,\n    setSummaryLatex,\n    skillsLatex,\n    setSkillsLatex,\n    metlifeLatex,\n    setMetlifeLatex,\n    adonsLatex,\n    setAdonsLatex,\n    companyName,\n    setCompanyName,\n    FinalResumeLatex,\n    setFinalResumeLatex,\n    changes,\n    setChanges,\n    coverLetter,\n    setCoverLetter,\n    coldEmail,\n    setColdEmail,\n    linkedinMessage,\n    setLinkedinMessage,\n  } = useResume();\n\n  const [loading, setLoading] = useState(false);\n\n  const [showModal, setShowModal] = useState(false);\n  const [latexResume, setLatexResume] = useState(\"\");\n  const [showEmailModal, setShowEmailModal] = useState(false);\n  const [emailSubject, setEmailSubject] = useState(\"\");\n  const [emailBody, setEmailBody] = useState(\"\");\n  const [emailSending, setEmailSending] = useState(false);\n  const [toastMsg, setToastMsg] = useState(\"\");\n  const [jobResult, setJobResult] = useState(\"\");\n  const [showJobModal, setShowJobModal] = useState(false);\n  const [isEditorOpen, setEditorOpen] = useState(false);\n  const [coverLetterContent, setCoverLetterContent] = useState(\n    `Your default content here...`\n  );\n  const [fitExplanation, setFitExplanation] = useState(\"\");\n  // Add these state variables in your JDInput component\n  const [emailStats, setEmailStats] = useState({});\n  const [emailReminders, setEmailReminders] = useState([]);\n  // Add this function to handle stats updates\n  const handleEmailStatsUpdate = (data) => {\n    setEmailStats(data.stats || {});\n    setEmailReminders(data.reminders || []);\n  };\n\n  const [jobCount, setJobCount] = useState(() => {\n    const saved = localStorage.getItem(\"jobCounter\");\n    return saved ? parseInt(saved) : 1;\n  });\n  const handleNextJob = () => {\n    const newCount = jobCount + 1;\n    localStorage.setItem(\"jobCounter\", newCount);\n    setJobCount(newCount);\n    window.location.reload(); // Refresh page to start over\n  };\n\n  const formattedCoverLetter = coverLetter\n    .replace(/\\n\\n/g, \"<p>\")\n    .replace(/\\n/g, \"<br>\");\n\n  // 📅 Format today's date\n  const todayDate = new Date().toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\",\n  });\n\n  useEffect(() => {\n    const subjectMatch = coldEmail.match(/Subject:\\s*(.*)/i);\n    setEmailSubject(subjectMatch ? subjectMatch[1].trim() : \"\");\n    setEmailBody(coldEmail.replace(/Subject:.*\\n?/i, \"\").trim());\n  }, [coldEmail]);\n\n  // Toast message function\n  const showToast = (msg) => {\n    setToastMsg(msg);\n    setTimeout(() => setToastMsg(\"\"), 3000); // toast disappears in 3 seconds\n  };\n\n  // 📥 Copyable Content Box Renderer\n  const renderBox = (title, content) => (\n    <div className=\"content-box\">\n      <h3>{title}</h3>\n      <textarea rows=\"8\" value={content} readOnly className=\"textarea\" />\n      <button\n        className=\"copy-btn\"\n        onClick={() => {\n          navigator.clipboard.writeText(content);\n        }}\n      >\n        Copy the text\n      </button>\n    </div>\n  );\n\n  // 💡 Feature Functions\n  const handleJD = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPromptForJD({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n    });\n    const result = await callGeminiAPIforJD(prompt);\n    setJobResult(result.result || \"\");\n    setLoading(false);\n    setShowJobModal(true);\n  };\n\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const prompt = buildGeminiPrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      coldEmailTemplate,\n    });\n    const result = await callGeminiAPI(prompt);\n    setCompanyName(result.companyName || \"\");\n\n    setSummaryLatex(sanitizeLatexContent(result.summaryLatex || \"\"));\n    setSkillsLatex(result.skillsLatex || \"\");\n    setMetlifeLatex(sanitizeLatexContent(result.metlifeLatex || \"\"));\n    setAdonsLatex(sanitizeLatexContent(result.adonsLatex || \"\"));\n    setChanges(result.changes || \"\"); // Set changes from the result\n    setCoverLetter(sanitizeLatexContent(result.coverLetter || \"\"));\n    setColdEmail(result.coldEmail || \"\");\n    setFinalResumeLatex(sanitizeLatexContent(result.FinalResumeLatex || \"\"));\n    setLoading(false);\n  };\n\n  const handleLinkedInMessage = async () => {\n    if (!jobDesc.trim()) return;\n    console.log(\n      \"🚀 ~ file: JDInput.js:88 ~ handleLinkedInMessage ~ jobDesc:\",\n      jobDesc\n    );\n    setLoading(true);\n    const prompt = buildLinkedInMessagePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n    });\n    const result = await callGeminiAPIForLinkedInMessage(prompt);\n    console.log(\"the result in jdinput file is \", result);\n    setLinkedinMessage(result.linkedinMessage || \"\");\n    setLoading(false);\n  };\n\n  const handleCoverLetterUpdate = async () => {\n    console.log(\n      \"the handle cover letter update is called in jd input function\"\n    );\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n\n    const prompt = buildCoverLetterUpdatePrompt({\n      jobDescription: jobDesc,\n      resumeTemplate: resumeTemplate.full,\n      coverLetterTemplate,\n      todayDate,\n    });\n    console.log(\"the prompt in jd input file is \", prompt);\n\n    const { updatedCoverLetter } = await callGeminiAPIForCoverLetterUpdate(\n      prompt\n    );\n    console.log(\"the updated cover letter is \", updatedCoverLetter);\n\n    setLoading(false);\n    navigate(\"/cover-letter-update\", {\n      state: {\n        template: coverLetterTemplate,\n        updated: updatedCoverLetter,\n      },\n    });\n  };\n\n  const handleCompanyNameExtraction = async () => {\n    const prompt = buildCompanyAndEmailPrompt(jobDesc);\n    const company = await callGeminiAPIForCompanyAndEmail(prompt);\n    console.log(\"🧾 Company Extracted:\", company);\n  };\n\n  const handleSaveToDB = async () => {\n    const payload = {\n      applyDate: new Date().toISOString().split(\"T\")[0],\n      companyName,\n      summaryLatex,\n      skillsLatex,\n      metlifeLatex,\n      adonsLatex,\n      changes,\n      coverLetter,\n      coldEmail,\n      finalResumeLatex: FinalResumeLatex,\n      jobDescription: jobDesc, // Include job description in payload\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5001/save-data\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const result = await response.json();\n      console.log(\"✅ Backend Response:\", result);\n      if (response.status === 200) {\n        alert(\"✅ Saved to DB successfully!\");\n      } else if (response.status === 409) {\n        alert(\"⚠️ This data already exists in the database.\");\n      } else {\n        alert(`❌ Unexpected error: ${result.message || \"Unknown error\"}`);\n      }\n\n      // alert(\"✅ Saved to DB successfully!\");\n    } catch (error) {\n      console.error(\"❌ Error saving to DB:\", error);\n      alert(\"❌ Failed to save to DB.\");\n    }\n  };\n\n  const handleSendEmail = async () => {\n    const to = document.querySelector(\".gmail-to\").value;\n    const subject = emailSubject;\n    const text = emailBody;\n    const fileInput = document.querySelector(\".gmail-attachment\");\n\n    let attachmentBase64 = \"\";\n    let attachmentName = \"\";\n\n    if (fileInput.files.length > 0) {\n      const file = fileInput.files[0];\n      attachmentName = file.name;\n\n      const reader = new FileReader();\n      reader.onload = async () => {\n        // Strip the base64 prefix (e.g., \"data:application/pdf;base64,...\")\n        attachmentBase64 = reader.result.split(\",\")[1];\n\n        try {\n          setEmailSending(true);\n          const res = await fetch(\"http://localhost:5001/send-email\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              to,\n              subject,\n              text,\n              attachmentName,\n              attachmentBase64,\n            }),\n          });\n\n          const data = await res.json();\n          if (res.ok) {\n            // alert(\"📨 Email sent successfully!\");\n            showToast(\"📨 Email sent successfully!\");\n\n            setShowEmailModal(false);\n          } else {\n            // alert(\"❌ Failed to send email: \" + data.message);\n            showToast(\"❌ Failed: \" + data.error);\n          }\n        } catch (err) {\n          showToast(\"❌ Network error: \" + err.message);\n        } finally {\n          setEmailSending(false); // ✅ stop spinner\n        }\n      };\n      reader.readAsDataURL(file); // Triggers reader.onload above\n    } else {\n      // No attachment, just send email\n      try {\n        setEmailSending(true);\n        const res = await fetch(\"http://localhost:5001/send-email\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ to, subject, text }), // no attachment\n        });\n\n        const data = await res.json();\n        if (res.ok) {\n          showToast(\"📨 Email sent successfully!\");\n          // alert(\"📨 Email sent successfully!\");\n          setShowEmailModal(false);\n        } else {\n          showToast(\"❌ Failed: \" + data.message);\n        }\n      } catch (err) {\n        showToast(\"❌ Network error: \" + err.message);\n      } finally {\n        setEmailSending(false); // ✅ stop spinner\n      }\n    }\n  };\n\n  const handleGoToResumeGenerator = () => {\n    // Navigate to resume generation component with the generated data\n    navigate(\"/resume-generation\", {\n      state: {\n        resumeData: {\n          PROFESSIONAL_SUMMARY: summaryLatex,\n          TECHNICAL_SKILLS: skillsLatex,\n          METLIFE_BULLET_POINTS: metlifeLatex,\n          ADONS_BULLET_POINTS: adonsLatex,\n        },\n        jobDescription: jobDesc,\n        companyName: companyName,\n      },\n    });\n  };\n\n  const handleFitExplanation = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    const prompt = buildFitForRolePrompt({\n      jobDescription: jobDesc,\n      resumeLatex: FinalResumeLatex || resumeTemplate.full,\n    });\n\n    const result = await callGeminiAPIForFitExplanation(prompt);\n    setFitExplanation(result.fitExplanation || \"\");\n    setLoading(false);\n  };\n\n  // Replace your handleWhyIFitGeneration function with this:\n  const handleWhyIFitGeneration = async () => {\n    if (!jobDesc.trim()) {\n      alert(\"Please enter a job description first\");\n      return;\n    }\n\n    if (!fitExplanation.trim()) {\n      alert(\n        \"Please click 'Why I Fit This Role' button first to generate AI analysis\"\n      );\n      return;\n    }\n\n    // Navigate to the Why I Fit generation page with the data\n    navigate(\"/why-i-fit-generation\", {\n      state: {\n        whyIFitData: fitExplanation,\n        companyName: companyName,\n        jobDescription: jobDesc,\n      },\n    });\n  };\n  const handleGmailManager = () => {\n    navigate(\"/gmail-manager\");\n  };\n  // / Add this function to refresh Gmail and update stats\n  const handleGmailRefresh = async () => {\n    try {\n      const response = await fetch(\n        \"http://localhost:8080/api/emails/fetch-gmail\",\n        {\n          method: \"POST\",\n        }\n      );\n      const result = await response.json();\n\n      if (result.success) {\n        showToast(\"Gmail emails fetched successfully!\");\n        // Refresh the email stats widget\n        window.location.reload(); // Or trigger a re-render of EmailStatsWidget\n      } else {\n        showToast(\"Error fetching Gmail: \" + result.message);\n      }\n    } catch (error) {\n      showToast(\"Gmail fetch error: \" + error.message);\n    }\n  };\n\n  return (\n    <div className=\"jd-wrapper\">\n      <header className=\"header\">\n        <h1>ResuMe</h1>\n        <p>\n          <strong>Resume Update | Cover Letter | Cold Mail</strong>\n        </p>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"loggedIn\");\n            navigate(\"/login\");\n          }}\n        >\n          🚪 Logout\n        </button>\n      </header>\n      {/* ✅ Toast & Spinner */}\n      {toastMsg && <div className=\"toast-message\">{toastMsg}</div>}\n      {emailSending && <div className=\"spinner\"></div>}\n      <div className=\"main\">\n        <div className=\"left-panel\">\n          <h2>Job Description</h2>\n          <textarea\n            className=\"textarea jd-input\"\n            rows=\"6\"\n            placeholder=\"Paste job description here...\"\n            value={jobDesc}\n            onChange={(e) => setJobDesc(e.target.value)}\n          />\n          <div className=\"button-container\">\n            <button onClick={handleJD} disabled={loading}>\n              {loading ? \"Checking Job...\" : \"Job Matching/Unmatching\"}\n            </button>\n            <button onClick={handleGenerate} disabled={loading}>\n              {loading ? \"Generating...\" : \"Generate Tailored Content\"}\n            </button>\n            <button\n              className=\"linkedin-btn\"\n              onClick={handleLinkedInMessage}\n              disabled={loading}\n            >\n              💬 Generate LinkedIn Message\n            </button>\n            <button onClick={() => navigate(\"/ats-analysis\")}>\n              🔍 Compare Resume with JD (ATS Score)\n            </button>\n            <button onClick={handleCoverLetterUpdate} disabled={loading}>\n              ✉️ Generate Cover Letter\n            </button>\n            <button onClick={handleCompanyNameExtraction}>\n              🧾 Get Company Name\n            </button>\n            <button onClick={handleSaveToDB} disabled={loading}>\n              💾 Save to Database\n            </button>\n            {summaryLatex && skillsLatex && metlifeLatex && adonsLatex && (\n              <button\n                onClick={handleGoToResumeGenerator}\n                className=\"resume-generator-btn\"\n              >\n                🎯 Go to Resume Generation\n              </button>\n            )}\n\n            <button onClick={handleFitExplanation} disabled={loading}>\n              Why I Fit This Role\n            </button>\n          </div>\n\n          {jobResult && (\n            <div className=\"overlay\">\n              <div className=\"modal job-analysis-modal\">\n                <button className=\"close-btn\" onClick={() => setJobResult(\"\")}>\n                  ×\n                </button>\n                <h2>🧠 Job Compatibility Analysis</h2>\n                <div className=\"modal-content\">\n                  {jobResult.split(/\\*\\*(.*?)\\*\\*/g).map((chunk, index) =>\n                    index % 2 === 1 ? (\n                      <h4 key={index} className=\"highlight-heading\">\n                        {chunk}\n                      </h4>\n                    ) : (\n                      <p key={index}>{chunk}</p>\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          )}\n\n          {linkedinMessage &&\n            renderBox(\"LinkedIn Message to Recruiter\", linkedinMessage)}\n\n          <div className=\"mini-grid\">\n            {renderBox(\"Summary\", summaryLatex)}\n            {renderBox(\"Tech Skills\", skillsLatex)}\n            {renderBox(\"Met Life Work Exp\", metlifeLatex)}\n            {renderBox(\"Adons Work Exp\", adonsLatex)}\n          </div>\n        </div>\n\n        <div className=\"right-panel\">\n          <div className=\"job-header\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <label style={{ marginRight: \"10px\", fontWeight: \"bold\" }}>\n                Company Name\n              </label>\n              <input\n                type=\"text\"\n                value={companyName}\n                onChange={(e) => setCompanyName(e.target.value)}\n                style={{\n                  padding: \"6px 10px\",\n                  borderRadius: \"4px\",\n                  border: \"1px solid #ccc\",\n                  fontSize: \"1rem\",\n                  width: \"220px\",\n                }}\n              />\n            </div>\n\n            <div>\n              <span className=\"job-counter\">🧾 Job #{jobCount}</span>\n              <button onClick={handleNextJob}>➕ Next Job</button>\n              <button\n                onClick={() => {\n                  localStorage.removeItem(\"jobCounter\");\n                  window.location.reload();\n                }}\n              >\n                Reset Counter\n              </button>\n            </div>\n          </div>\n          <button className=\"gmailManagerButton\" onClick={handleGmailManager}>\n            <h2>Gmail Manager</h2>\n          </button>\n          <EmailStatsWidget onStatsUpdate={handleEmailStatsUpdate} />\n\n          {renderBox(\"Changes Made\", changes)}\n          {renderBox(\"Final Resume\", FinalResumeLatex)}\n          {renderBox(\"CoverLetter For Given Job\", coverLetter)}\n\n          <button\n            onClick={() => {\n              if (coverLetter) {\n                navigate(\"/cover-letter-generation\", {\n                  state: {\n                    coverLetterData: coverLetter,\n                    companyName: companyName,\n                    jobDescription: jobDesc,\n                  },\n                });\n              } else {\n                alert(\"Please generate cover letter content first!\");\n              }\n            }}\n            className=\"edit-cover-letter-btn\"\n          >\n            ✏️ Edit & Generate Cover Letter PDF\n          </button>\n\n          {fitExplanation &&\n            renderBox(\"🧠 Why I Fit This Role\", fitExplanation)}\n\n          <button onClick={handleWhyIFitGeneration}>\n            📄 Edit & Generate Why I Fit Document\n          </button>\n\n          {renderBox(\"ColdMail For Given Job\", coldEmail)}\n          {coldEmail && (\n            <ColdEmailSender coldEmail={coldEmail} companyName={companyName} />\n          )}\n        </div>\n      </div>\n      {/* 📄 Resume Paste Modal (LaTeX Resume Modal) */}\n      {showModal && (\n        <div className=\"gmail-overlay\">\n          <div className=\"gmail-compose-box\">\n            <div className=\"gmail-header\">\n              <span>Paste Your Full LaTeX Resume</span>\n              <div className=\"gmail-icons\">\n                <span title=\"Minimize\">—</span>\n                <span title=\"Full screen\">⧉</span>\n                <span\n                  className=\"gmail-close\"\n                  onClick={() => setShowModal(false)}\n                >\n                  ×\n                </span>\n              </div>\n            </div>\n            <textarea\n              rows=\"12\"\n              value={latexResume}\n              onChange={(e) => setLatexResume(e.target.value)}\n              placeholder=\"Paste your full LaTeX resume code here...\"\n              className=\"gmail-body\"\n            />\n            <div className=\"gmail-footer\">\n              <button\n                className=\"gmail-send\"\n                onClick={() => setShowModal(false)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"gmail-send\"\n                onClick={() => {\n                  console.log(\"Submitted Resume:\", latexResume);\n                  setShowModal(false);\n                }}\n              >\n                Submit for Comparison\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* 📧 Gmail Compose Cold Email Modal */}\n      {showEmailModal && (\n        <div className=\"gmail-overlay\">\n          <div className=\"gmail-compose-box\">\n            <div className=\"gmail-header\">\n              <span>New Message</span>\n              <div className=\"gmail-icons\">\n                <span title=\"Minimize\">—</span>\n                <span title=\"Full screen\">⧉</span>\n                <span\n                  className=\"gmail-close\"\n                  onClick={() => setShowEmailModal(false)}\n                >\n                  ×\n                </span>\n              </div>\n            </div>\n\n            <div className=\"gmail-fields\">\n              <input type=\"text\" className=\"gmail-to\" placeholder=\"To\" />\n              <input\n                type=\"text\"\n                className=\"gmail-subject\"\n                placeholder=\"Subject\"\n                value={emailSubject}\n                onChange={(e) => setEmailSubject(e.target.value)}\n              />\n              <textarea\n                className=\"gmail-body\"\n                rows=\"10\"\n                value={emailBody}\n                onChange={(e) => setEmailBody(e.target.value)}\n              />\n              <input type=\"file\" className=\"gmail-attachment\" />\n            </div>\n\n            <div className=\"gmail-footer\">\n              <button\n                className=\"gmail-send\"\n                onClick={handleSendEmail}\n                disabled={emailSending}\n              >\n                {emailSending ? \"Sending...\" : \"Send\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default JDInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}