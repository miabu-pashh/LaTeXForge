{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/ColdEmailGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { coldEmailTemplate } from \"../utils/latexTemplates\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ColdEmailGenerator() {\n  _s();\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [emailText, setEmailText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleGenerateEmail = async () => {\n    if (!jobDesc.trim()) return;\n    const prompt = `\nYou are a job search assistant. Based on the job description below and the cold email template provided, write a professional cold email to a recruiter.\n\nUpdate only the line marked % JD_BASED_EMAIL_LINE to reflect relevant qualifications and interest in the role.\n\n--- Job Description ---\n${jobDesc}\n\n--- Cold Email Template ---\n${coldEmailTemplate}\n\nReturn only the final cold email in plain text.\n`;\n    setLoading(true);\n    const result = await callGeminiAPI(prompt);\n    setEmailText(result);\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generate Cold Email to HR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"80\",\n      placeholder: \"Paste job description here...\",\n      value: jobDesc,\n      onChange: e => setJobDesc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateEmail,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Cold Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), emailText && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"10\",\n        cols: \"100\",\n        value: emailText,\n        readOnly: true,\n        style: {\n          backgroundColor: \"#f5f5f5\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ColdEmailGenerator, \"lHplnmlnd488ocxY6B7S2qg4Htk=\");\n_c = ColdEmailGenerator;\nexport default ColdEmailGenerator;\nvar _c;\n$RefreshReg$(_c, \"ColdEmailGenerator\");","map":{"version":3,"names":["React","useState","coldEmailTemplate","callGeminiAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ColdEmailGenerator","_s","jobDesc","setJobDesc","emailText","setEmailText","loading","setLoading","handleGenerateEmail","trim","prompt","result","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","placeholder","value","onChange","e","target","onClick","disabled","readOnly","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/ColdEmailGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { coldEmailTemplate } from \"../utils/latexTemplates\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\n\nfunction ColdEmailGenerator() {\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [emailText, setEmailText] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleGenerateEmail = async () => {\n    if (!jobDesc.trim()) return;\n\n    const prompt = `\nYou are a job search assistant. Based on the job description below and the cold email template provided, write a professional cold email to a recruiter.\n\nUpdate only the line marked % JD_BASED_EMAIL_LINE to reflect relevant qualifications and interest in the role.\n\n--- Job Description ---\n${jobDesc}\n\n--- Cold Email Template ---\n${coldEmailTemplate}\n\nReturn only the final cold email in plain text.\n`;\n\n    setLoading(true);\n    const result = await callGeminiAPI(prompt);\n    setEmailText(result);\n    setLoading(false);\n  };\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h2>Generate Cold Email to HR</h2>\n      <textarea\n        rows=\"10\"\n        cols=\"80\"\n        placeholder=\"Paste job description here...\"\n        value={jobDesc}\n        onChange={(e) => setJobDesc(e.target.value)}\n      />\n      <br />\n      <button onClick={handleGenerateEmail} disabled={loading}>\n        {loading ? \"Generating...\" : \"Generate Cold Email\"}\n      </button>\n\n      {emailText && (\n        <>\n          <h3>Generated Email</h3>\n          <textarea\n            rows=\"10\"\n            cols=\"100\"\n            value={emailText}\n            readOnly\n            style={{ backgroundColor: \"#f5f5f5\" }}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ColdEmailGenerator;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpD,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,EAAE;IAErB,MAAMC,MAAM,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA,EAAER,OAAO;AACT;AACA;AACA,EAAER,iBAAiB;AACnB;AACA;AACA,CAAC;IAEGa,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMI,MAAM,GAAG,MAAMhB,aAAa,CAACe,MAAM,CAAC;IAC1CL,YAAY,CAACM,MAAM,CAAC;IACpBJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEV,OAAA;IAAKe,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BjB,OAAA;MAAAiB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCrB,OAAA;MACEsB,IAAI,EAAC,IAAI;MACTC,IAAI,EAAC,IAAI;MACTC,WAAW,EAAC,+BAA+B;MAC3CC,KAAK,EAAEpB,OAAQ;MACfqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNrB,OAAA;MAAQ6B,OAAO,EAAElB,mBAAoB;MAACmB,QAAQ,EAAErB,OAAQ;MAAAQ,QAAA,EACrDR,OAAO,GAAG,eAAe,GAAG;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAERd,SAAS,iBACRP,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrB,OAAA;QACEsB,IAAI,EAAC,IAAI;QACTC,IAAI,EAAC,KAAK;QACVE,KAAK,EAAElB,SAAU;QACjBwB,QAAQ;QACRhB,KAAK,EAAE;UAAEiB,eAAe,EAAE;QAAU;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC;IAAA,eACF,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjB,EAAA,CAzDQD,kBAAkB;AAAA8B,EAAA,GAAlB9B,kBAAkB;AA2D3B,eAAeA,kBAAkB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}