{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/ColdEmailModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { sendCustomEmails } from \"../services/coldEmailService\";\nimport \"../CSS/ColdEmailModal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColdEmailModal = ({\n  isOpen,\n  onClose,\n  coldEmail,\n  companyName\n}) => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [newContact, setNewContact] = useState({\n    name: \"\",\n    email: \"\",\n    title: \"\"\n  });\n  const [candidateInfo, setCandidateInfo] = useState({\n    candidateName: \"Mahaboob Pasha Mohammad\",\n    candidateEmail: \"mahaboobpashamohammad8@gmail.com\",\n    candidatePhone: \"3143056056\"\n  });\n  const [emailData, setEmailData] = useState({\n    subject: \"\",\n    body: \"\",\n    companyName: companyName || \"\",\n    hiringManagerName: \"Hiring Manager\"\n  });\n  const [attachments, setAttachments] = useState([]);\n  const [sending, setSending] = useState(false);\n\n  // Initialize email data when modal opens\n  useEffect(() => {\n    if (isOpen && coldEmail) {\n      var _coldEmail$match, _coldEmail$match$;\n      const emailSubject = ((_coldEmail$match = coldEmail.match(/Subject:\\s*(.*)/i)) === null || _coldEmail$match === void 0 ? void 0 : (_coldEmail$match$ = _coldEmail$match[1]) === null || _coldEmail$match$ === void 0 ? void 0 : _coldEmail$match$.trim()) || \"Job Application\";\n      const emailBody = coldEmail.replace(/Subject:.*\\n?/i, \"\").trim();\n      setEmailData({\n        subject: emailSubject,\n        body: emailBody,\n        companyName: companyName || \"\",\n        hiringManagerName: \"Hiring Manager\"\n      });\n    }\n  }, [isOpen, coldEmail, companyName]);\n  const addContact = () => {\n    if (newContact.name && newContact.email) {\n      const contact = {\n        name: newContact.title ? `${newContact.name} (${newContact.title})` : newContact.name,\n        email: newContact.email,\n        company: emailData.companyName\n      };\n      setContacts([...contacts, contact]);\n      setNewContact({\n        name: \"\",\n        email: \"\",\n        title: \"\"\n      });\n    }\n  };\n  const removeContact = index => {\n    setContacts(contacts.filter((_, i) => i !== index));\n  };\n  const handleFileAttachment = event => {\n    const files = Array.from(event.target.files);\n    const maxSize = 25 * 1024 * 1024; // 25MB limit\n    const allowedTypes = [\"application/pdf\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"text/plain\"];\n    const validFiles = files.filter(file => {\n      if (file.size > maxSize) {\n        alert(`File \"${file.name}\" is too large. Maximum size is 25MB.`);\n        return false;\n      }\n      if (!allowedTypes.includes(file.type)) {\n        alert(`File \"${file.name}\" type not supported. Please use PDF, DOC, DOCX, or TXT files.`);\n        return false;\n      }\n      return true;\n    });\n    validFiles.forEach(file => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64 = reader.result.split(\",\")[1];\n        setAttachments(prev => [...prev, {\n          name: file.name,\n          type: file.type,\n          size: file.size,\n          base64: base64\n        }]);\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n  const removeAttachment = index => {\n    setAttachments(attachments.filter((_, i) => i !== index));\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n  const personalizeContentForPreview = content => {\n    const firstContactName = contacts.length > 0 ? contacts[0].name.replace(/\\s*\\([^)]*\\)/g, \"\").trim() : emailData.hiringManagerName;\n    return content.replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName).replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName).replace(/\\[RECIPIENT_NAME\\]/g, firstContactName).replace(/\\{RECIPIENT_NAME\\}/g, firstContactName).replace(/\\[HIRING_MANAGER\\]/g, firstContactName).replace(/\\{HIRING_MANAGER\\}/g, firstContactName).replace(/\\[Hiring Manager's Name\\]/g, firstContactName).replace(/Hiring Manager's Name/g, firstContactName).replace(/\\[COMPANY_NAME\\]/g, emailData.companyName).replace(/\\{COMPANY_NAME\\}/g, emailData.companyName).replace(/\\[Company Name\\]/g, emailData.companyName).replace(/Company Name/g, emailData.companyName).replace(/\\[company\\s*name\\]/gi, emailData.companyName).replace(/\\[hiring\\s*manager\\]/gi, firstContactName).replace(/\\[recipient\\s*name\\]/gi, firstContactName);\n  };\n  const handleSendEmails = async () => {\n    if (contacts.length === 0) {\n      alert(\"Please add at least one HR contact.\");\n      return;\n    }\n    if (!emailData.companyName.trim()) {\n      alert(\"Please enter the company name.\");\n      return;\n    }\n    setSending(true);\n    try {\n      // Create personalized emails for each contact\n      const personalizedEmails = contacts.map(contact => {\n        // Extract just the name without title (remove parentheses content)\n        const contactName = contact.name.replace(/\\s*\\([^)]*\\)/g, \"\").trim();\n\n        // Personalize subject for this contact\n        const personalizedSubject = emailData.subject.replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName).replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName).replace(/\\[RECIPIENT_NAME\\]/g, contactName).replace(/\\{RECIPIENT_NAME\\}/g, contactName).replace(/\\[HIRING_MANAGER\\]/g, contactName).replace(/\\{HIRING_MANAGER\\}/g, contactName).replace(/\\[Hiring Manager's Name\\]/g, contactName).replace(/Hiring Manager's Name/g, contactName).replace(/\\[COMPANY_NAME\\]/g, emailData.companyName).replace(/\\{COMPANY_NAME\\}/g, emailData.companyName).replace(/\\[Company Name\\]/g, emailData.companyName).replace(/Company Name/g, emailData.companyName).replace(/\\[company\\s*name\\]/gi, emailData.companyName).replace(/\\[hiring\\s*manager\\]/gi, contactName).replace(/\\[recipient\\s*name\\]/gi, contactName);\n\n        // Personalize body for this contact\n        const personalizedBody = emailData.body.replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName).replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName).replace(/\\[RECIPIENT_NAME\\]/g, contactName).replace(/\\{RECIPIENT_NAME\\}/g, contactName).replace(/\\[HIRING_MANAGER\\]/g, contactName).replace(/\\{HIRING_MANAGER\\}/g, contactName).replace(/\\[Hiring Manager's Name\\]/g, contactName).replace(/Hiring Manager's Name/g, contactName).replace(/\\[COMPANY_NAME\\]/g, emailData.companyName).replace(/\\{COMPANY_NAME\\}/g, emailData.companyName).replace(/\\[Company Name\\]/g, emailData.companyName).replace(/Company Name/g, emailData.companyName).replace(/\\[company\\s*name\\]/gi, emailData.companyName).replace(/\\[hiring\\s*manager\\]/gi, contactName).replace(/\\[recipient\\s*name\\]/gi, contactName);\n        return {\n          contact: contact,\n          personalizedSubject: personalizedSubject,\n          personalizedBody: personalizedBody\n        };\n      });\n\n      // Send personalized emails\n      const response = await sendCustomEmails({\n        candidateName: candidateInfo.candidateName,\n        candidateEmail: candidateInfo.candidateEmail,\n        candidatePhone: candidateInfo.candidatePhone,\n        companyName: emailData.companyName,\n        personalizedEmails: personalizedEmails,\n        // Send personalized emails instead of template\n        attachments: attachments\n      });\n      if (response.data.status === \"success\") {\n        alert(`✅ Success! ${response.data.successCount} emails sent successfully out of ${response.data.totalEmails} total emails!`);\n        onClose();\n        setContacts([]);\n        setAttachments([]);\n      } else {\n        alert(`❌ ${response.data.message || \"Some emails failed to send. Check console for details.\"}`);\n      }\n    } catch (error) {\n      console.error(\"Send error:\", error);\n      if (error.response) {\n        alert(`❌ Backend error: ${error.response.data.message || \"Unknown error\"}`);\n      } else if (error.request) {\n        alert(\"❌ Cannot connect to backend. Make sure Spring Boot is running on port 8080.\");\n      } else {\n        alert(`❌ Error: ${error.message}`);\n      }\n    } finally {\n      setSending(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"modal-title\",\n          children: \"New Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Your Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Your Name\",\n                  value: candidateInfo.candidateName,\n                  onChange: e => setCandidateInfo({\n                    ...candidateInfo,\n                    candidateName: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"Your Email\",\n                  value: candidateInfo.candidateEmail,\n                  onChange: e => setCandidateInfo({\n                    ...candidateInfo,\n                    candidateEmail: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"tel\",\n                  placeholder: \"Your Phone\",\n                  value: candidateInfo.candidatePhone,\n                  onChange: e => setCandidateInfo({\n                    ...candidateInfo,\n                    candidatePhone: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Company Information\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-grid\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Company Name\",\n                  value: emailData.companyName,\n                  onChange: e => setEmailData({\n                    ...emailData,\n                    companyName: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Add HR Contacts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-grid contact-inputs\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"HR Name\",\n                  value: newContact.name,\n                  onChange: e => setNewContact({\n                    ...newContact,\n                    name: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"HR Email\",\n                  value: newContact.email,\n                  onChange: e => setNewContact({\n                    ...newContact,\n                    email: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Job Title (optional)\",\n                  value: newContact.title,\n                  onChange: e => setNewContact({\n                    ...newContact,\n                    title: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addContact,\n                disabled: !newContact.name || !newContact.email,\n                className: `modal-button success-button ${!newContact.name || !newContact.email ? \"disabled\" : \"\"}`,\n                children: \"Add Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), contacts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: [\"HR Contacts (\", contacts.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-list\",\n                children: contacts.map((contact, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"contact-name\",\n                      children: contact.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 376,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"contact-email\",\n                      children: contact.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeContact(index),\n                    className: \"remove-button\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Email Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"field-label\",\n                  children: \"Subject:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: emailData.subject,\n                  onChange: e => setEmailData({\n                    ...emailData,\n                    subject: e.target.value\n                  }),\n                  className: \"modal-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"field-label\",\n                  children: \"Body:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: emailData.body,\n                  onChange: e => setEmailData({\n                    ...emailData,\n                    body: e.target.value\n                  }),\n                  rows: \"10\",\n                  className: \"modal-textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tip\",\n                children: \"\\uD83D\\uDCA1 Use placeholders: [CANDIDATE_NAME], [RECIPIENT_NAME], [COMPANY_NAME], [HIRING_MANAGER]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Attachments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                multiple: true,\n                accept: \".pdf,.doc,.docx,.txt\",\n                onChange: handleFileAttachment,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-help\",\n                children: \"Supported: PDF, DOC, DOCX, TXT (Max 25MB each)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), attachments.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"attachment-title\",\n                  children: [\"Attached Files (\", attachments.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this), attachments.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"attachment-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"attachment-name\",\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 447,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"attachment-size\",\n                      children: formatFileSize(file.size)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => removeAttachment(index),\n                    className: \"remove-button\",\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"section-title\",\n                children: \"Preview (Sample)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-preview\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"To:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 21\n                  }, this), \" \", contacts.length > 0 ? contacts[0].email : \"HR Email\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-field\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Subject:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 21\n                  }, this), \" \", personalizeContentForPreview(emailData.subject)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-body\",\n                  children: personalizeContentForPreview(emailData.body)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 19\n                }, this), contacts.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-note\",\n                  children: \"Note: Each email will be personalized with the individual HR contact's name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"modal-button secondary-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendEmails,\n          disabled: sending || contacts.length === 0 || !emailData.companyName.trim(),\n          className: `modal-button primary-button ${contacts.length > 0 && emailData.companyName.trim() ? \"\" : \"disabled\"}`,\n          children: sending ? \"Sending...\" : `Send to ${contacts.length} Contact(s)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, this);\n};\n_s(ColdEmailModal, \"GKs1xLFaSDHqTJ/JYaBJ4EWIQ2U=\");\n_c = ColdEmailModal;\nexport default ColdEmailModal;\nvar _c;\n$RefreshReg$(_c, \"ColdEmailModal\");","map":{"version":3,"names":["React","useState","useEffect","sendCustomEmails","jsxDEV","_jsxDEV","ColdEmailModal","isOpen","onClose","coldEmail","companyName","_s","contacts","setContacts","newContact","setNewContact","name","email","title","candidateInfo","setCandidateInfo","candidateName","candidateEmail","candidatePhone","emailData","setEmailData","subject","body","hiringManagerName","attachments","setAttachments","sending","setSending","_coldEmail$match","_coldEmail$match$","emailSubject","match","trim","emailBody","replace","addContact","contact","company","removeContact","index","filter","_","i","handleFileAttachment","event","files","Array","from","target","maxSize","allowedTypes","validFiles","file","size","alert","includes","type","forEach","reader","FileReader","onload","base64","result","split","prev","readAsDataURL","removeAttachment","formatFileSize","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","personalizeContentForPreview","content","firstContactName","length","handleSendEmails","personalizedEmails","map","contactName","personalizedSubject","personalizedBody","response","data","status","successCount","totalEmails","message","error","console","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","value","onChange","e","disabled","rows","multiple","accept","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/ColdEmailModal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { sendCustomEmails } from \"../services/coldEmailService\";\nimport \"../CSS/ColdEmailModal.css\";\n\nconst ColdEmailModal = ({ isOpen, onClose, coldEmail, companyName }) => {\n  const [contacts, setContacts] = useState([]);\n  const [newContact, setNewContact] = useState({\n    name: \"\",\n    email: \"\",\n    title: \"\",\n  });\n  const [candidateInfo, setCandidateInfo] = useState({\n    candidateName: \"Mahaboob Pasha Mohammad\",\n    candidateEmail: \"mahaboobpashamohammad8@gmail.com\",\n    candidatePhone: \"3143056056\",\n  });\n  const [emailData, setEmailData] = useState({\n    subject: \"\",\n    body: \"\",\n    companyName: companyName || \"\",\n    hiringManagerName: \"Hiring Manager\",\n  });\n  const [attachments, setAttachments] = useState([]);\n  const [sending, setSending] = useState(false);\n\n  // Initialize email data when modal opens\n  useEffect(() => {\n    if (isOpen && coldEmail) {\n      const emailSubject =\n        coldEmail.match(/Subject:\\s*(.*)/i)?.[1]?.trim() || \"Job Application\";\n      const emailBody = coldEmail.replace(/Subject:.*\\n?/i, \"\").trim();\n\n      setEmailData({\n        subject: emailSubject,\n        body: emailBody,\n        companyName: companyName || \"\",\n        hiringManagerName: \"Hiring Manager\",\n      });\n    }\n  }, [isOpen, coldEmail, companyName]);\n\n  const addContact = () => {\n    if (newContact.name && newContact.email) {\n      const contact = {\n        name: newContact.title\n          ? `${newContact.name} (${newContact.title})`\n          : newContact.name,\n        email: newContact.email,\n        company: emailData.companyName,\n      };\n\n      setContacts([...contacts, contact]);\n      setNewContact({ name: \"\", email: \"\", title: \"\" });\n    }\n  };\n\n  const removeContact = (index) => {\n    setContacts(contacts.filter((_, i) => i !== index));\n  };\n\n  const handleFileAttachment = (event) => {\n    const files = Array.from(event.target.files);\n    const maxSize = 25 * 1024 * 1024; // 25MB limit\n    const allowedTypes = [\n      \"application/pdf\",\n      \"application/msword\",\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      \"text/plain\",\n    ];\n\n    const validFiles = files.filter((file) => {\n      if (file.size > maxSize) {\n        alert(`File \"${file.name}\" is too large. Maximum size is 25MB.`);\n        return false;\n      }\n      if (!allowedTypes.includes(file.type)) {\n        alert(\n          `File \"${file.name}\" type not supported. Please use PDF, DOC, DOCX, or TXT files.`\n        );\n        return false;\n      }\n      return true;\n    });\n\n    validFiles.forEach((file) => {\n      const reader = new FileReader();\n      reader.onload = () => {\n        const base64 = reader.result.split(\",\")[1];\n        setAttachments((prev) => [\n          ...prev,\n          {\n            name: file.name,\n            type: file.type,\n            size: file.size,\n            base64: base64,\n          },\n        ]);\n      };\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const removeAttachment = (index) => {\n    setAttachments(attachments.filter((_, i) => i !== index));\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return \"0 Bytes\";\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const personalizeContentForPreview = (content) => {\n    const firstContactName =\n      contacts.length > 0\n        ? contacts[0].name.replace(/\\s*\\([^)]*\\)/g, \"\").trim()\n        : emailData.hiringManagerName;\n\n    return content\n      .replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName)\n      .replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName)\n      .replace(/\\[RECIPIENT_NAME\\]/g, firstContactName)\n      .replace(/\\{RECIPIENT_NAME\\}/g, firstContactName)\n      .replace(/\\[HIRING_MANAGER\\]/g, firstContactName)\n      .replace(/\\{HIRING_MANAGER\\}/g, firstContactName)\n      .replace(/\\[Hiring Manager's Name\\]/g, firstContactName)\n      .replace(/Hiring Manager's Name/g, firstContactName)\n      .replace(/\\[COMPANY_NAME\\]/g, emailData.companyName)\n      .replace(/\\{COMPANY_NAME\\}/g, emailData.companyName)\n      .replace(/\\[Company Name\\]/g, emailData.companyName)\n      .replace(/Company Name/g, emailData.companyName)\n      .replace(/\\[company\\s*name\\]/gi, emailData.companyName)\n      .replace(/\\[hiring\\s*manager\\]/gi, firstContactName)\n      .replace(/\\[recipient\\s*name\\]/gi, firstContactName);\n  };\n\n  const handleSendEmails = async () => {\n    if (contacts.length === 0) {\n      alert(\"Please add at least one HR contact.\");\n      return;\n    }\n\n    if (!emailData.companyName.trim()) {\n      alert(\"Please enter the company name.\");\n      return;\n    }\n\n    setSending(true);\n    try {\n      // Create personalized emails for each contact\n      const personalizedEmails = contacts.map((contact) => {\n        // Extract just the name without title (remove parentheses content)\n        const contactName = contact.name.replace(/\\s*\\([^)]*\\)/g, \"\").trim();\n\n        // Personalize subject for this contact\n        const personalizedSubject = emailData.subject\n          .replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName)\n          .replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName)\n          .replace(/\\[RECIPIENT_NAME\\]/g, contactName)\n          .replace(/\\{RECIPIENT_NAME\\}/g, contactName)\n          .replace(/\\[HIRING_MANAGER\\]/g, contactName)\n          .replace(/\\{HIRING_MANAGER\\}/g, contactName)\n          .replace(/\\[Hiring Manager's Name\\]/g, contactName)\n          .replace(/Hiring Manager's Name/g, contactName)\n          .replace(/\\[COMPANY_NAME\\]/g, emailData.companyName)\n          .replace(/\\{COMPANY_NAME\\}/g, emailData.companyName)\n          .replace(/\\[Company Name\\]/g, emailData.companyName)\n          .replace(/Company Name/g, emailData.companyName)\n          .replace(/\\[company\\s*name\\]/gi, emailData.companyName)\n          .replace(/\\[hiring\\s*manager\\]/gi, contactName)\n          .replace(/\\[recipient\\s*name\\]/gi, contactName);\n\n        // Personalize body for this contact\n        const personalizedBody = emailData.body\n          .replace(/\\[CANDIDATE_NAME\\]/g, candidateInfo.candidateName)\n          .replace(/\\{CANDIDATE_NAME\\}/g, candidateInfo.candidateName)\n          .replace(/\\[RECIPIENT_NAME\\]/g, contactName)\n          .replace(/\\{RECIPIENT_NAME\\}/g, contactName)\n          .replace(/\\[HIRING_MANAGER\\]/g, contactName)\n          .replace(/\\{HIRING_MANAGER\\}/g, contactName)\n          .replace(/\\[Hiring Manager's Name\\]/g, contactName)\n          .replace(/Hiring Manager's Name/g, contactName)\n          .replace(/\\[COMPANY_NAME\\]/g, emailData.companyName)\n          .replace(/\\{COMPANY_NAME\\}/g, emailData.companyName)\n          .replace(/\\[Company Name\\]/g, emailData.companyName)\n          .replace(/Company Name/g, emailData.companyName)\n          .replace(/\\[company\\s*name\\]/gi, emailData.companyName)\n          .replace(/\\[hiring\\s*manager\\]/gi, contactName)\n          .replace(/\\[recipient\\s*name\\]/gi, contactName);\n\n        return {\n          contact: contact,\n          personalizedSubject: personalizedSubject,\n          personalizedBody: personalizedBody,\n        };\n      });\n\n      // Send personalized emails\n      const response = await sendCustomEmails({\n        candidateName: candidateInfo.candidateName,\n        candidateEmail: candidateInfo.candidateEmail,\n        candidatePhone: candidateInfo.candidatePhone,\n        companyName: emailData.companyName,\n        personalizedEmails: personalizedEmails, // Send personalized emails instead of template\n        attachments: attachments,\n      });\n\n      if (response.data.status === \"success\") {\n        alert(\n          `✅ Success! ${response.data.successCount} emails sent successfully out of ${response.data.totalEmails} total emails!`\n        );\n        onClose();\n        setContacts([]);\n        setAttachments([]);\n      } else {\n        alert(\n          `❌ ${\n            response.data.message ||\n            \"Some emails failed to send. Check console for details.\"\n          }`\n        );\n      }\n    } catch (error) {\n      console.error(\"Send error:\", error);\n\n      if (error.response) {\n        alert(\n          `❌ Backend error: ${error.response.data.message || \"Unknown error\"}`\n        );\n      } else if (error.request) {\n        alert(\n          \"❌ Cannot connect to backend. Make sure Spring Boot is running on port 8080.\"\n        );\n      } else {\n        alert(`❌ Error: ${error.message}`);\n      }\n    } finally {\n      setSending(false);\n    }\n  };\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        {/* Header */}\n        <div className=\"modal-header\">\n          <h2 className=\"modal-title\">New Message</h2>\n          <button onClick={onClose} className=\"close-button\">\n            ×\n          </button>\n        </div>\n\n        {/* Content */}\n        <div className=\"modal-content\">\n          <div className=\"modal-grid\">\n            {/* Left Column */}\n            <div>\n              {/* Candidate Info */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Your Information</h3>\n                <div className=\"input-grid\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Your Name\"\n                    value={candidateInfo.candidateName}\n                    onChange={(e) =>\n                      setCandidateInfo({\n                        ...candidateInfo,\n                        candidateName: e.target.value,\n                      })\n                    }\n                    className=\"modal-input\"\n                  />\n                  <input\n                    type=\"email\"\n                    placeholder=\"Your Email\"\n                    value={candidateInfo.candidateEmail}\n                    onChange={(e) =>\n                      setCandidateInfo({\n                        ...candidateInfo,\n                        candidateEmail: e.target.value,\n                      })\n                    }\n                    className=\"modal-input\"\n                  />\n                  <input\n                    type=\"tel\"\n                    placeholder=\"Your Phone\"\n                    value={candidateInfo.candidatePhone}\n                    onChange={(e) =>\n                      setCandidateInfo({\n                        ...candidateInfo,\n                        candidatePhone: e.target.value,\n                      })\n                    }\n                    className=\"modal-input\"\n                  />\n                </div>\n              </div>\n\n              {/* Company Info */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Company Information</h3>\n                <div className=\"input-grid\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Company Name\"\n                    value={emailData.companyName}\n                    onChange={(e) =>\n                      setEmailData({\n                        ...emailData,\n                        companyName: e.target.value,\n                      })\n                    }\n                    className=\"modal-input\"\n                  />\n                </div>\n              </div>\n\n              {/* Add HR Contacts */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Add HR Contacts</h3>\n                <div className=\"input-grid contact-inputs\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"HR Name\"\n                    value={newContact.name}\n                    onChange={(e) =>\n                      setNewContact({ ...newContact, name: e.target.value })\n                    }\n                    className=\"modal-input\"\n                  />\n                  <input\n                    type=\"email\"\n                    placeholder=\"HR Email\"\n                    value={newContact.email}\n                    onChange={(e) =>\n                      setNewContact({ ...newContact, email: e.target.value })\n                    }\n                    className=\"modal-input\"\n                  />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Job Title (optional)\"\n                    value={newContact.title}\n                    onChange={(e) =>\n                      setNewContact({ ...newContact, title: e.target.value })\n                    }\n                    className=\"modal-input\"\n                  />\n                </div>\n                <button\n                  onClick={addContact}\n                  disabled={!newContact.name || !newContact.email}\n                  className={`modal-button success-button ${\n                    !newContact.name || !newContact.email ? \"disabled\" : \"\"\n                  }`}\n                >\n                  Add Contact\n                </button>\n              </div>\n\n              {/* Contact List */}\n              {contacts.length > 0 && (\n                <div className=\"modal-section\">\n                  <h3 className=\"section-title\">\n                    HR Contacts ({contacts.length})\n                  </h3>\n                  <div className=\"contact-list\">\n                    {contacts.map((contact, index) => (\n                      <div key={index} className=\"contact-item\">\n                        <div>\n                          <div className=\"contact-name\">{contact.name}</div>\n                          <div className=\"contact-email\">{contact.email}</div>\n                        </div>\n                        <button\n                          onClick={() => removeContact(index)}\n                          className=\"remove-button\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Right Column */}\n            <div>\n              {/* Email Editor */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Email Content</h3>\n                <div className=\"email-field\">\n                  <label className=\"field-label\">Subject:</label>\n                  <input\n                    type=\"text\"\n                    value={emailData.subject}\n                    onChange={(e) =>\n                      setEmailData({ ...emailData, subject: e.target.value })\n                    }\n                    className=\"modal-input\"\n                  />\n                </div>\n                <div className=\"email-field\">\n                  <label className=\"field-label\">Body:</label>\n                  <textarea\n                    value={emailData.body}\n                    onChange={(e) =>\n                      setEmailData({ ...emailData, body: e.target.value })\n                    }\n                    rows=\"10\"\n                    className=\"modal-textarea\"\n                  />\n                </div>\n                <div className=\"tip\">\n                  💡 Use placeholders: [CANDIDATE_NAME], [RECIPIENT_NAME],\n                  [COMPANY_NAME], [HIRING_MANAGER]\n                </div>\n              </div>\n\n              {/* File Attachments */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Attachments</h3>\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\".pdf,.doc,.docx,.txt\"\n                  onChange={handleFileAttachment}\n                  className=\"file-input\"\n                />\n                <div className=\"file-help\">\n                  Supported: PDF, DOC, DOCX, TXT (Max 25MB each)\n                </div>\n\n                {attachments.length > 0 && (\n                  <div>\n                    <h4 className=\"attachment-title\">\n                      Attached Files ({attachments.length})\n                    </h4>\n                    {attachments.map((file, index) => (\n                      <div key={index} className=\"attachment-item\">\n                        <div>\n                          <div className=\"attachment-name\">{file.name}</div>\n                          <div className=\"attachment-size\">\n                            {formatFileSize(file.size)}\n                          </div>\n                        </div>\n                        <button\n                          onClick={() => removeAttachment(index)}\n                          className=\"remove-button\"\n                        >\n                          Remove\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n\n              {/* Preview */}\n              <div className=\"modal-section\">\n                <h3 className=\"section-title\">Preview (Sample)</h3>\n                <div className=\"email-preview\">\n                  <div className=\"preview-field\">\n                    <strong>To:</strong>{\" \"}\n                    {contacts.length > 0 ? contacts[0].email : \"HR Email\"}\n                  </div>\n                  <div className=\"preview-field\">\n                    <strong>Subject:</strong>{\" \"}\n                    {personalizeContentForPreview(emailData.subject)}\n                  </div>\n                  <div className=\"preview-body\">\n                    {personalizeContentForPreview(emailData.body)}\n                  </div>\n                  {contacts.length > 1 && (\n                    <div className=\"preview-note\">\n                      Note: Each email will be personalized with the individual\n                      HR contact's name\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"modal-footer\">\n          <button onClick={onClose} className=\"modal-button secondary-button\">\n            Cancel\n          </button>\n          <button\n            onClick={handleSendEmails}\n            disabled={\n              sending || contacts.length === 0 || !emailData.companyName.trim()\n            }\n            className={`modal-button primary-button ${\n              contacts.length > 0 && emailData.companyName.trim()\n                ? \"\"\n                : \"disabled\"\n            }`}\n          >\n            {sending ? \"Sending...\" : `Send to ${contacts.length} Contact(s)`}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ColdEmailModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}