{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/WhyIFitGeneration.js\",\n  _s = $RefreshSig$();\n// src/components/WhyIFitGeneration.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/WhyIFitGeneration.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction WhyIFitGeneration() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Get the data passed from JDInput\n  const {\n    whyIFitData,\n    companyName,\n    jobDescription\n  } = location.state || {};\n\n  // State for selected field\n  const [selectedField, setSelectedField] = useState(\"TARGET_COMPANY\");\n\n  // State for editable content\n  const [editableData, setEditableData] = useState({\n    TARGET_COMPANY: \"\",\n    TODAY_DATE: \"\",\n    CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n    CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n    PORTFOLIO_URL: \"https://miabu-pashh.github.io/Portfolio-maibu/\",\n    LINKEDIN_URL: \"https://www.linkedin.com/in/mohammad-mahaboob-pasha/\",\n    GITHUB_URL: \"https://github.com/miabu-pashh\",\n    CALENDLY_URL: \"https://calendly.com/mahaboobpashamohammad8/30min\",\n    WHY_I_FIT_CONTENT: \"\"\n  });\n\n  // State for PDF generation\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const fieldLabels = {\n    TARGET_COMPANY: \"Company Name\",\n    TODAY_DATE: \"Date\",\n    WHY_I_FIT_CONTENT: \"Why I Fit Content\"\n  };\n  // Update the useEffect to include all needed fields\n  useEffect(() => {\n    if (whyIFitData) {\n      setEditableData({\n        TARGET_COMPANY: companyName || \"\",\n        TODAY_DATE: new Date().toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        }),\n        WHY_I_FIT_CONTENT: whyIFitData,\n        // Add these back - they're needed for the API call even if not in fieldLabels\n        CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n        CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\"\n      });\n      setMessage(\"‚úÖ Why I Fit content loaded! Edit and generate PDF.\");\n    } else {\n      setMessage(\"‚ùå No Why I Fit data found. Please generate content first.\");\n    }\n  }, [whyIFitData, companyName]);\n\n  // Handle field change\n  const handleFieldChange = (field, value) => {\n    setEditableData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  // Replace your handleGeneratePDF function with this simpler version:\n  const handleGeneratePDF = async () => {\n    if (!editableData.WHY_I_FIT_CONTENT) {\n      setMessage(\"‚ùå Please add Why I Fit content before generating PDF\");\n      return;\n    }\n    setIsLoading(true);\n    setMessage(\"‚è≥ Generating your Why I Fit PDF...\");\n    try {\n      // First, get the LaTeX from the why-i-fit service (which already works)\n      const pdfUrl = \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\";\n      console.log(\"üß™ PDF URL being called:\", pdfUrl);\n      const pdfResponse = await axios.post(pdfUrl, {\n        FINAL_LATEX_CONTENT: latexResponse.data.data.finalLatexContent\n      });\n      const latexResponse = await axios.post(\"http://localhost:8080/api/why-i-fit/generate\", {\n        jobDescription: jobDescription,\n        companyName: editableData.TARGET_COMPANY,\n        candidateName: editableData.CANDIDATE_NAME,\n        candidateEmail: editableData.CANDIDATE_EMAIL,\n        geminiOutput: editableData.WHY_I_FIT_CONTENT\n      });\n      if (latexResponse.data.status === \"success\") {\n        console.log(\"‚úÖ Got LaTeX content, now generating PDF...\");\n        console.log(\"Sending PDF request to:\", \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\");\n\n        // Now send ONLY the LaTeX content to PDF generation\n        const pdfResponse = await axios.post(\"http://localhost:8080/api/resume/generate-why-i-fit-pdf\", {\n          FINAL_LATEX_CONTENT: latexResponse.data.data.finalLatexContent\n        }, {\n          responseType: \"blob\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n\n        // Create blob and URL for viewing\n        const blob = new Blob([pdfResponse.data], {\n          type: \"application/pdf\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        setPdfUrl(url);\n        setMessage(\"‚úÖ Why I Fit PDF generated successfully!\");\n      } else {\n        setMessage(\"‚ùå Error generating document: \" + latexResponse.data.message);\n      }\n    } catch (error) {\n      console.error(\"‚ùå Error generating PDF:\", error);\n      setMessage(\"‚ùå Error generating PDF. Please check the backend.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  // Download PDF\n  const handleDownloadPDF = () => {\n    if (pdfUrl) {\n      const link = document.createElement(\"a\");\n      link.href = pdfUrl;\n      link.download = `why-i-fit-${editableData.TARGET_COMPANY || \"document\"}.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      setMessage(\"üìÑ PDF downloaded successfully!\");\n    }\n  };\n\n  // Print PDF\n  const handlePrintPDF = () => {\n    if (pdfUrl) {\n      const printWindow = window.open(pdfUrl, \"_blank\");\n      printWindow.onload = () => {\n        printWindow.print();\n      };\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"wif-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ResuMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Why I Fit For This Role - Document Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem(\"loggedIn\");\n          navigate(\"/login\");\n        },\n        children: \"\\uD83D\\uDEAA Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"why-i-fit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wif-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Document Fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"field-list\",\n          children: [Object.keys(fieldLabels).map(field => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedField === field ? \"active\" : \"\",\n            onClick: () => setSelectedField(field),\n            children: fieldLabels[field]\n          }, field, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: handleGeneratePDF,\n            disabled: isLoading,\n            children: isLoading ? \"‚è≥ Generating...\" : \"MAKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: () => navigate(\"/jdinput\"),\n            children: \"HOME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wif-middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: fieldLabels[selectedField]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), selectedField === \"WHY_I_FIT_CONTENT\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editableData[selectedField] || \"\",\n          onChange: e => handleFieldChange(selectedField, e.target.value),\n          rows: 20,\n          placeholder: \"Edit your Why I Fit content here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editableData[selectedField] || \"\",\n          onChange: e => handleFieldChange(selectedField, e.target.value),\n          placeholder: `Enter ${fieldLabels[selectedField].toLowerCase()}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${message.includes(\"‚úÖ\") ? \"success\" : message.includes(\"‚ùå\") ? \"error\" : \"info\"}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wif-right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Why I Fit Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), pdfUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: pdfUrl,\n            title: \"Why I Fit PDF\",\n            frameBorder: \"0\",\n            width: \"100%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No document generated yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"preview-hint\",\n            children: \"Edit fields and click \\\"MAKE\\\" to generate PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating your Why I Fit PDF...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(WhyIFitGeneration, \"cW8glXfQymMaODoQ1MrX8WHQ/sg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = WhyIFitGeneration;\nexport default WhyIFitGeneration;\nvar _c;\n$RefreshReg$(_c, \"WhyIFitGeneration\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","WhyIFitGeneration","_s","location","navigate","whyIFitData","companyName","jobDescription","state","selectedField","setSelectedField","editableData","setEditableData","TARGET_COMPANY","TODAY_DATE","CANDIDATE_NAME","CANDIDATE_EMAIL","PORTFOLIO_URL","LINKEDIN_URL","GITHUB_URL","CALENDLY_URL","WHY_I_FIT_CONTENT","isLoading","setIsLoading","message","setMessage","pdfUrl","setPdfUrl","fieldLabels","Date","toLocaleDateString","year","month","day","handleFieldChange","field","value","prev","handleGeneratePDF","console","log","pdfResponse","post","FINAL_LATEX_CONTENT","latexResponse","data","finalLatexContent","candidateName","candidateEmail","geminiOutput","status","responseType","headers","blob","Blob","type","url","window","URL","createObjectURL","error","handleDownloadPDF","link","document","createElement","href","download","body","appendChild","click","removeChild","handlePrintPDF","printWindow","open","onload","print","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localStorage","removeItem","Object","keys","map","disabled","onChange","e","target","rows","placeholder","toLowerCase","includes","src","title","frameBorder","width","height","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/WhyIFitGeneration.js"],"sourcesContent":["// src/components/WhyIFitGeneration.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/WhyIFitGeneration.css\";\n\nfunction WhyIFitGeneration() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // Get the data passed from JDInput\n  const { whyIFitData, companyName, jobDescription } = location.state || {};\n\n  // State for selected field\n  const [selectedField, setSelectedField] = useState(\"TARGET_COMPANY\");\n\n  // State for editable content\n  const [editableData, setEditableData] = useState({\n    TARGET_COMPANY: \"\",\n    TODAY_DATE: \"\",\n    CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n    CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n    PORTFOLIO_URL: \"https://miabu-pashh.github.io/Portfolio-maibu/\",\n    LINKEDIN_URL: \"https://www.linkedin.com/in/mohammad-mahaboob-pasha/\",\n    GITHUB_URL: \"https://github.com/miabu-pashh\",\n    CALENDLY_URL: \"https://calendly.com/mahaboobpashamohammad8/30min\",\n    WHY_I_FIT_CONTENT: \"\",\n  });\n\n  // State for PDF generation\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [pdfUrl, setPdfUrl] = useState(null);\n\n  const fieldLabels = {\n    TARGET_COMPANY: \"Company Name\",\n    TODAY_DATE: \"Date\",\n    WHY_I_FIT_CONTENT: \"Why I Fit Content\",\n  };\n  // Update the useEffect to include all needed fields\n  useEffect(() => {\n    if (whyIFitData) {\n      setEditableData({\n        TARGET_COMPANY: companyName || \"\",\n        TODAY_DATE: new Date().toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        }),\n        WHY_I_FIT_CONTENT: whyIFitData,\n        // Add these back - they're needed for the API call even if not in fieldLabels\n        CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n        CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n      });\n\n      setMessage(\"‚úÖ Why I Fit content loaded! Edit and generate PDF.\");\n    } else {\n      setMessage(\"‚ùå No Why I Fit data found. Please generate content first.\");\n    }\n  }, [whyIFitData, companyName]);\n\n  // Handle field change\n  const handleFieldChange = (field, value) => {\n    setEditableData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  // Replace your handleGeneratePDF function with this simpler version:\n  const handleGeneratePDF = async () => {\n    if (!editableData.WHY_I_FIT_CONTENT) {\n      setMessage(\"‚ùå Please add Why I Fit content before generating PDF\");\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage(\"‚è≥ Generating your Why I Fit PDF...\");\n\n    try {\n      // First, get the LaTeX from the why-i-fit service (which already works)\n      const pdfUrl = \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\";\n      console.log(\"üß™ PDF URL being called:\", pdfUrl);\n\n      const pdfResponse = await axios.post(pdfUrl, {\n        FINAL_LATEX_CONTENT: latexResponse.data.data.finalLatexContent,\n      });\n      const latexResponse = await axios.post(\n        \"http://localhost:8080/api/why-i-fit/generate\",\n        {\n          jobDescription: jobDescription,\n          companyName: editableData.TARGET_COMPANY,\n          candidateName: editableData.CANDIDATE_NAME,\n          candidateEmail: editableData.CANDIDATE_EMAIL,\n          geminiOutput: editableData.WHY_I_FIT_CONTENT,\n        }\n      );\n\n      if (latexResponse.data.status === \"success\") {\n        console.log(\"‚úÖ Got LaTeX content, now generating PDF...\");\n        console.log(\n          \"Sending PDF request to:\",\n          \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\"\n        );\n\n        // Now send ONLY the LaTeX content to PDF generation\n        const pdfResponse = await axios.post(\n          \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\",\n          {\n            FINAL_LATEX_CONTENT: latexResponse.data.data.finalLatexContent,\n          },\n          {\n            responseType: \"blob\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Create blob and URL for viewing\n        const blob = new Blob([pdfResponse.data], { type: \"application/pdf\" });\n        const url = window.URL.createObjectURL(blob);\n\n        setPdfUrl(url);\n        setMessage(\"‚úÖ Why I Fit PDF generated successfully!\");\n      } else {\n        setMessage(\n          \"‚ùå Error generating document: \" + latexResponse.data.message\n        );\n      }\n    } catch (error) {\n      console.error(\"‚ùå Error generating PDF:\", error);\n      setMessage(\"‚ùå Error generating PDF. Please check the backend.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  // Download PDF\n  const handleDownloadPDF = () => {\n    if (pdfUrl) {\n      const link = document.createElement(\"a\");\n      link.href = pdfUrl;\n      link.download = `why-i-fit-${\n        editableData.TARGET_COMPANY || \"document\"\n      }.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      setMessage(\"üìÑ PDF downloaded successfully!\");\n    }\n  };\n\n  // Print PDF\n  const handlePrintPDF = () => {\n    if (pdfUrl) {\n      const printWindow = window.open(pdfUrl, \"_blank\");\n      printWindow.onload = () => {\n        printWindow.print();\n      };\n    }\n  };\n\n  return (\n    <div>\n      {/* Header - Same as Cover Letter */}\n      <header className=\"wif-header\">\n        <h1>ResuMe</h1>\n        <p>\n          <strong>Why I Fit For This Role - Document Generator</strong>\n        </p>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"loggedIn\");\n            navigate(\"/login\");\n          }}\n        >\n          üö™ Logout\n        </button>\n      </header>\n\n      <div className=\"why-i-fit-container\">\n        {/* Left Panel - Field Selection */}\n        <div className=\"wif-left-panel\">\n          <h2>Document Fields</h2>\n          <ul className=\"field-list\">\n            {Object.keys(fieldLabels).map((field) => (\n              <li\n                key={field}\n                className={selectedField === field ? \"active\" : \"\"}\n                onClick={() => setSelectedField(field)}\n              >\n                {fieldLabels[field]}\n              </li>\n            ))}\n            <button\n              className=\"generate-btn\"\n              onClick={handleGeneratePDF}\n              disabled={isLoading}\n            >\n              {isLoading ? \"‚è≥ Generating...\" : \"MAKE\"}\n            </button>\n            <button\n              className=\"generate-btn\"\n              onClick={() => navigate(\"/jdinput\")}\n            >\n              HOME\n            </button>\n          </ul>\n        </div>\n\n        {/* Middle Panel - Editor */}\n        <div className=\"wif-middle-panel\">\n          <h2>{fieldLabels[selectedField]}</h2>\n          {selectedField === \"WHY_I_FIT_CONTENT\" ? (\n            <textarea\n              value={editableData[selectedField] || \"\"}\n              onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n              rows={20}\n              placeholder=\"Edit your Why I Fit content here...\"\n            />\n          ) : (\n            <input\n              type=\"text\"\n              value={editableData[selectedField] || \"\"}\n              onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n              placeholder={`Enter ${fieldLabels[\n                selectedField\n              ].toLowerCase()}...`}\n            />\n          )}\n\n          {message && (\n            <div\n              className={`status ${\n                message.includes(\"‚úÖ\")\n                  ? \"success\"\n                  : message.includes(\"‚ùå\")\n                  ? \"error\"\n                  : \"info\"\n              }`}\n            >\n              {message}\n            </div>\n          )}\n        </div>\n\n        {/* Right Panel - PDF Preview */}\n        <div className=\"wif-right-panel\">\n          <h2>Why I Fit Preview</h2>\n          {pdfUrl ? (\n            <>\n              <iframe\n                src={pdfUrl}\n                title=\"Why I Fit PDF\"\n                frameBorder=\"0\"\n                width=\"100%\"\n                height=\"100%\"\n              />\n            </>\n          ) : (\n            <div className=\"no-preview\">\n              <p>No document generated yet</p>\n              <p className=\"preview-hint\">\n                Edit fields and click \"MAKE\" to generate PDF\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Loading Overlay */}\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\" />\n          <p>Generating your Why I Fit PDF...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WhyIFitGeneration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}