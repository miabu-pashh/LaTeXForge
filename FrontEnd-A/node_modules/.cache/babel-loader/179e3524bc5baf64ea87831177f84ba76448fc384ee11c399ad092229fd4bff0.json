{"ast":null,"code":"// googleDocsHelper.js\nimport { gapi } from \"gapi-script\";\n\n// üëá Replace these with your actual credentials\nconst CLIENT_ID = \"738387978108-jvdrd54d7iov6r1602290mk0k2pdj8qm.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyAc7tP11lunnGDDcsSnlFDIlhGW5d278fs\";\nconst SCOPES = \"https://www.googleapis.com/auth/documents https://www.googleapis.com/auth/drive.file\";\nexport const initGapiClient = () => {\n  return new Promise((resolve, reject) => {\n    gapi.load(\"client:auth2\", async () => {\n      try {\n        await gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          discoveryDocs: [\"https://docs.googleapis.com/$discovery/rest?version=v1\"],\n          scope: SCOPES\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  });\n};\nexport const signInAndCreateDoc = async coverLetterContent => {\n  try {\n    await gapi.auth2.getAuthInstance().signIn();\n    const response = await gapi.client.docs.documents.create({\n      title: \"Generated Cover Letter\"\n    });\n    const documentId = response.result.documentId;\n\n    // Replace body with cover letter\n    await gapi.client.docs.documents.batchUpdate({\n      documentId,\n      requests: [{\n        insertText: {\n          location: {\n            index: 1\n          },\n          text: coverLetterContent.replace(/\\n/g, \"\\n\\n\")\n        }\n      }]\n    });\n\n    // Open in new tab\n    window.open(`https://docs.google.com/document/d/${documentId}/edit`, \"_blank\");\n  } catch (err) {\n    console.error(\"‚ùå Google Docs creation error:\", err);\n    alert(\"Google Docs integration failed. Check console for details.\");\n  }\n};","map":{"version":3,"names":["gapi","CLIENT_ID","API_KEY","SCOPES","initGapiClient","Promise","resolve","reject","load","client","init","apiKey","clientId","discoveryDocs","scope","error","signInAndCreateDoc","coverLetterContent","auth2","getAuthInstance","signIn","response","docs","documents","create","title","documentId","result","batchUpdate","requests","insertText","location","index","text","replace","window","open","err","console","alert"],"sources":["/Users/maibupash/Desktop/MastersProjects/resuME/ResumeApp/Resume-FrontEnd/src/utils/googleDocsHelper.js"],"sourcesContent":["// googleDocsHelper.js\nimport { gapi } from \"gapi-script\";\n\n// üëá Replace these with your actual credentials\nconst CLIENT_ID =\n  \"738387978108-jvdrd54d7iov6r1602290mk0k2pdj8qm.apps.googleusercontent.com\";\nconst API_KEY = \"AIzaSyAc7tP11lunnGDDcsSnlFDIlhGW5d278fs\";\nconst SCOPES =\n  \"https://www.googleapis.com/auth/documents https://www.googleapis.com/auth/drive.file\";\n\nexport const initGapiClient = () => {\n  return new Promise((resolve, reject) => {\n    gapi.load(\"client:auth2\", async () => {\n      try {\n        await gapi.client.init({\n          apiKey: API_KEY,\n          clientId: CLIENT_ID,\n          discoveryDocs: [\n            \"https://docs.googleapis.com/$discovery/rest?version=v1\",\n          ],\n          scope: SCOPES,\n        });\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  });\n};\n\nexport const signInAndCreateDoc = async (coverLetterContent) => {\n  try {\n    await gapi.auth2.getAuthInstance().signIn();\n\n    const response = await gapi.client.docs.documents.create({\n      title: \"Generated Cover Letter\",\n    });\n\n    const documentId = response.result.documentId;\n\n    // Replace body with cover letter\n    await gapi.client.docs.documents.batchUpdate({\n      documentId,\n      requests: [\n        {\n          insertText: {\n            location: { index: 1 },\n            text: coverLetterContent.replace(/\\n/g, \"\\n\\n\"),\n          },\n        },\n      ],\n    });\n\n    // Open in new tab\n    window.open(\n      `https://docs.google.com/document/d/${documentId}/edit`,\n      \"_blank\"\n    );\n  } catch (err) {\n    console.error(\"‚ùå Google Docs creation error:\", err);\n    alert(\"Google Docs integration failed. Check console for details.\");\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,aAAa;;AAElC;AACA,MAAMC,SAAS,GACb,0EAA0E;AAC5E,MAAMC,OAAO,GAAG,yCAAyC;AACzD,MAAMC,MAAM,GACV,sFAAsF;AAExF,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCP,IAAI,CAACQ,IAAI,CAAC,cAAc,EAAE,YAAY;MACpC,IAAI;QACF,MAAMR,IAAI,CAACS,MAAM,CAACC,IAAI,CAAC;UACrBC,MAAM,EAAET,OAAO;UACfU,QAAQ,EAAEX,SAAS;UACnBY,aAAa,EAAE,CACb,wDAAwD,CACzD;UACDC,KAAK,EAAEX;QACT,CAAC,CAAC;QACFG,OAAO,CAAC,CAAC;MACX,CAAC,CAAC,OAAOS,KAAK,EAAE;QACdR,MAAM,CAACQ,KAAK,CAAC;MACf;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,kBAAkB,IAAK;EAC9D,IAAI;IACF,MAAMjB,IAAI,CAACkB,KAAK,CAACC,eAAe,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3C,MAAMC,QAAQ,GAAG,MAAMrB,IAAI,CAACS,MAAM,CAACa,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC;MACvDC,KAAK,EAAE;IACT,CAAC,CAAC;IAEF,MAAMC,UAAU,GAAGL,QAAQ,CAACM,MAAM,CAACD,UAAU;;IAE7C;IACA,MAAM1B,IAAI,CAACS,MAAM,CAACa,IAAI,CAACC,SAAS,CAACK,WAAW,CAAC;MAC3CF,UAAU;MACVG,QAAQ,EAAE,CACR;QACEC,UAAU,EAAE;UACVC,QAAQ,EAAE;YAAEC,KAAK,EAAE;UAAE,CAAC;UACtBC,IAAI,EAAEhB,kBAAkB,CAACiB,OAAO,CAAC,KAAK,EAAE,MAAM;QAChD;MACF,CAAC;IAEL,CAAC,CAAC;;IAEF;IACAC,MAAM,CAACC,IAAI,CACT,sCAAsCV,UAAU,OAAO,EACvD,QACF,CAAC;EACH,CAAC,CAAC,OAAOW,GAAG,EAAE;IACZC,OAAO,CAACvB,KAAK,CAAC,+BAA+B,EAAEsB,GAAG,CAAC;IACnDE,KAAK,CAAC,4DAA4D,CAAC;EACrE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}