{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/ResumeGeneration.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../CSS/ResumeGeneration.css\";\n// import { useResume } from \"../context/ResumeContext\"; // ‚úÖ new line\n\n// function ResumeGeneration() {\n//   const navigate = useNavigate();\n\n//   const location = useLocation();\n//   const { resumeData, companyName } = location.state || {};\n\n//   const [selectedField, setSelectedField] = useState(\"PROFESSIONAL_SUMMARY\");\n//   const [editableData, setEditableData] = useState(resumeData || {});\n//   const [pdfUrl, setPdfUrl] = useState(null);\n//   const [message, setMessage] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const fieldLabels = {\n//     PROFESSIONAL_SUMMARY: \"Professional Summary\",\n//     TECHNICAL_SKILLS: \"Technical Skills\",\n//     METLIFE_BULLET_POINTS: \"MetLife Experience\",\n//     ADONS_BULLET_POINTS: \"Adons Experience\",\n//   };\n\n//   const handleFieldChange = (field, value) => {\n//     setEditableData((prev) => ({\n//       ...prev,\n//       [field]: value,\n//     }));\n//   };\n\n//   const handleGeneratePDF = async () => {\n//     try {\n//       setIsLoading(true);\n//       setMessage(\"‚è≥ Generating PDF...\");\n//       const response = await axios.post(\n//         \"http://localhost:8080/api/resume/generate\",\n//         editableData,\n//         { responseType: \"blob\" }\n//       );\n//       const blob = new Blob([response.data], { type: \"application/pdf\" });\n//       const url = URL.createObjectURL(blob);\n//       setPdfUrl(url);\n//       setMessage(\"‚úÖ PDF generated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error generating PDF:\", error);\n//       setMessage(\"‚ùå Failed to generate PDF.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleDownloadPDF = () => {\n//     if (pdfUrl) {\n//       const link = document.createElement(\"a\");\n//       link.href = pdfUrl;\n//       link.download = `${companyName || \"resume\"}.pdf`;\n//       document.body.appendChild(link);\n//       link.click();\n//       document.body.removeChild(link);\n//     }\n//   };\n\n//   const handlePrintPDF = () => {\n//     if (pdfUrl) {\n//       const printWindow = window.open(pdfUrl);\n//       printWindow.onload = () => printWindow.print();\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <header className=\"rheader\">\n//         <h1>ResuMe</h1>\n//         <p>\n//           <strong>Resume Update | Cover Letter | Cold Mail</strong>\n//         </p>\n//         <button\n//           onClick={() => {\n//             localStorage.removeItem(\"loggedIn\");\n//             navigate(\"/login\");\n//           }}\n//         >\n//           üö™ Logout\n//         </button>\n//       </header>\n\n//       <div className=\"resume-generation-container\">\n//         <div className=\"rleft-panel\">\n//           <h2>Resume Fields</h2>\n//           <ul className=\"field-list\">\n//             {Object.keys(fieldLabels).map((field) => (\n//               <li\n//                 key={field}\n//                 className={selectedField === field ? \"active\" : \"\"}\n//                 onClick={() => setSelectedField(field)}\n//               >\n//                 {fieldLabels[field]}\n//               </li>\n//             ))}\n//             <button\n//               className=\"generate-btn\"\n//               onClick={handleGeneratePDF}\n//               disabled={isLoading}\n//             >\n//               {isLoading ? \"‚è≥ Generating...\" : \" MAKE\"}\n//             </button>\n//             <button\n//               className=\"generate-btn\"\n//               onClick={() => navigate(\"/jdinput\")}\n//             >\n//               HOME\n//             </button>\n//           </ul>\n//         </div>\n\n//         <div className=\"rmiddle-panel\">\n//           <h2>{fieldLabels[selectedField]}</h2>\n//           <textarea\n//             value={editableData[selectedField] || \"\"}\n//             onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n//             rows={20}\n//             placeholder=\"Edit the LaTeX content here...\"\n//           />\n//           {/* <div className=\"editor-actions\">\n//           <button onClick={handleGeneratePDF}>üéØ Regenerate PDF</button>\n//           <button onClick={handleDownloadPDF} disabled={!pdfUrl}>\n//             üíæ Download\n//           </button>\n//           <button onClick={handlePrintPDF} disabled={!pdfUrl}>\n//             üñ®Ô∏è Print\n//           </button>\n//         </div> */}\n//           {message && (\n//             <div\n//               className={`status ${\n//                 message.includes(\"‚úÖ\") ? \"success\" : \"error\"\n//               }`}\n//             >\n//               {message}\n//             </div>\n//           )}\n//         </div>\n\n//         <div className=\"rright-panel\">\n//           <h2>Resume Preview</h2>\n//           {pdfUrl ? (\n//             <iframe\n//               src={pdfUrl}\n//               title=\"Resume PDF\"\n//               frameBorder=\"0\"\n//               width=\"100%\"\n//               height=\"100%\"\n//             />\n//           ) : (\n//             <p className=\"no-preview\">No resume generated yet</p>\n//           )}\n//         </div>\n\n//         {isLoading && (\n//           <div className=\"loading-overlay\">\n//             <div className=\"loading-spinner\" />\n//             <p>Generating your resume PDF...</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResumeGeneration;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/ResumeGeneration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResumeGeneration() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    resumeData,\n    companyName\n  } = location.state || {};\n  const [selectedField, setSelectedField] = useState(\"PROFESSIONAL_SUMMARY\");\n\n  // üÜï Add COMPANY_NAME into editable fields\n  const [editableData, setEditableData] = useState({\n    ...resumeData,\n    COMPANY_NAME: companyName || \"\" // make editable\n  });\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const fieldLabels = {\n    COMPANY_NAME: \"Company Name\",\n    // üÜï New field\n    PROFESSIONAL_SUMMARY: \"Professional Summary\",\n    TECHNICAL_SKILLS: \"Technical Skills\",\n    METLIFE_BULLET_POINTS: \"MetLife Experience\",\n    ADONS_BULLET_POINTS: \"Adons Experience\"\n  };\n  const handleFieldChange = (field, value) => {\n    setEditableData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleGeneratePDF = async () => {\n    try {\n      setIsLoading(true);\n      setMessage(\"‚è≥ Generating PDF...\");\n      const response = await axios.post(\"http://localhost:8080/api/resume/generate\", editableData, {\n        responseType: \"blob\"\n      });\n      const blob = new Blob([response.data], {\n        type: \"application/pdf\"\n      });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setMessage(\"‚úÖ PDF generated successfully!\");\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      setMessage(\"‚ùå Failed to generate PDF.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleDownloadPDF = () => {\n    if (pdfUrl) {\n      const link = document.createElement(\"a\");\n      link.href = pdfUrl;\n      const name = editableData.COMPANY_NAME || \"resume\";\n      link.download = `Resume${name}.pdf`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  const handlePrintPDF = () => {\n    if (pdfUrl) {\n      const printWindow = window.open(pdfUrl);\n      printWindow.onload = () => printWindow.print();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"rheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ResuMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Resume Update | Cover Letter | Cold Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem(\"loggedIn\");\n          navigate(\"/login\");\n        },\n        children: \"\\uD83D\\uDEAA Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"resume-generation-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rleft-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resume Fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"field-list\",\n          children: [Object.keys(fieldLabels).map(field => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedField === field ? \"active\" : \"\",\n            onClick: () => setSelectedField(field),\n            children: fieldLabels[field]\n          }, field, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: handleGeneratePDF,\n            disabled: isLoading,\n            children: isLoading ? \"‚è≥ Generating...\" : \" MAKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: () => navigate(\"/jdinput\"),\n            children: \"HOME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rmiddle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: fieldLabels[selectedField]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editableData[selectedField] || \"\",\n          onChange: e => handleFieldChange(selectedField, e.target.value),\n          rows: 20,\n          placeholder: \"Edit the LaTeX content here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${message.includes(\"‚úÖ\") ? \"success\" : \"error\"}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rright-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resume-preview-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Resume Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), pdfUrl && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownloadPDF,\n            className: \"action-btn\",\n            children: \"\\uD83D\\uDCBE Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), pdfUrl ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: pdfUrl,\n          title: \"Resume PDF\",\n          frameBorder: \"0\",\n          width: \"100%\",\n          height: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-preview\",\n          children: \"No resume generated yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating your resume PDF...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n}\n_s(ResumeGeneration, \"4sbMkg04aduZqk+Je0J89gpn0tc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ResumeGeneration;\nexport default ResumeGeneration;\nvar _c;\n$RefreshReg$(_c, \"ResumeGeneration\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","ResumeGeneration","_s","navigate","location","resumeData","companyName","state","selectedField","setSelectedField","editableData","setEditableData","COMPANY_NAME","pdfUrl","setPdfUrl","message","setMessage","isLoading","setIsLoading","fieldLabels","PROFESSIONAL_SUMMARY","TECHNICAL_SKILLS","METLIFE_BULLET_POINTS","ADONS_BULLET_POINTS","handleFieldChange","field","value","prev","handleGeneratePDF","response","post","responseType","blob","Blob","data","type","url","URL","createObjectURL","error","console","handleDownloadPDF","link","document","createElement","href","name","download","body","appendChild","click","removeChild","handlePrintPDF","printWindow","window","open","onload","print","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localStorage","removeItem","Object","keys","map","disabled","onChange","e","target","rows","placeholder","includes","src","title","frameBorder","width","height","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/ResumeGeneration.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useLocation, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../CSS/ResumeGeneration.css\";\n// import { useResume } from \"../context/ResumeContext\"; // ‚úÖ new line\n\n// function ResumeGeneration() {\n//   const navigate = useNavigate();\n\n//   const location = useLocation();\n//   const { resumeData, companyName } = location.state || {};\n\n//   const [selectedField, setSelectedField] = useState(\"PROFESSIONAL_SUMMARY\");\n//   const [editableData, setEditableData] = useState(resumeData || {});\n//   const [pdfUrl, setPdfUrl] = useState(null);\n//   const [message, setMessage] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n\n//   const fieldLabels = {\n//     PROFESSIONAL_SUMMARY: \"Professional Summary\",\n//     TECHNICAL_SKILLS: \"Technical Skills\",\n//     METLIFE_BULLET_POINTS: \"MetLife Experience\",\n//     ADONS_BULLET_POINTS: \"Adons Experience\",\n//   };\n\n//   const handleFieldChange = (field, value) => {\n//     setEditableData((prev) => ({\n//       ...prev,\n//       [field]: value,\n//     }));\n//   };\n\n//   const handleGeneratePDF = async () => {\n//     try {\n//       setIsLoading(true);\n//       setMessage(\"‚è≥ Generating PDF...\");\n//       const response = await axios.post(\n//         \"http://localhost:8080/api/resume/generate\",\n//         editableData,\n//         { responseType: \"blob\" }\n//       );\n//       const blob = new Blob([response.data], { type: \"application/pdf\" });\n//       const url = URL.createObjectURL(blob);\n//       setPdfUrl(url);\n//       setMessage(\"‚úÖ PDF generated successfully!\");\n//     } catch (error) {\n//       console.error(\"Error generating PDF:\", error);\n//       setMessage(\"‚ùå Failed to generate PDF.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleDownloadPDF = () => {\n//     if (pdfUrl) {\n//       const link = document.createElement(\"a\");\n//       link.href = pdfUrl;\n//       link.download = `${companyName || \"resume\"}.pdf`;\n//       document.body.appendChild(link);\n//       link.click();\n//       document.body.removeChild(link);\n//     }\n//   };\n\n//   const handlePrintPDF = () => {\n//     if (pdfUrl) {\n//       const printWindow = window.open(pdfUrl);\n//       printWindow.onload = () => printWindow.print();\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <header className=\"rheader\">\n//         <h1>ResuMe</h1>\n//         <p>\n//           <strong>Resume Update | Cover Letter | Cold Mail</strong>\n//         </p>\n//         <button\n//           onClick={() => {\n//             localStorage.removeItem(\"loggedIn\");\n//             navigate(\"/login\");\n//           }}\n//         >\n//           üö™ Logout\n//         </button>\n//       </header>\n\n//       <div className=\"resume-generation-container\">\n//         <div className=\"rleft-panel\">\n//           <h2>Resume Fields</h2>\n//           <ul className=\"field-list\">\n//             {Object.keys(fieldLabels).map((field) => (\n//               <li\n//                 key={field}\n//                 className={selectedField === field ? \"active\" : \"\"}\n//                 onClick={() => setSelectedField(field)}\n//               >\n//                 {fieldLabels[field]}\n//               </li>\n//             ))}\n//             <button\n//               className=\"generate-btn\"\n//               onClick={handleGeneratePDF}\n//               disabled={isLoading}\n//             >\n//               {isLoading ? \"‚è≥ Generating...\" : \" MAKE\"}\n//             </button>\n//             <button\n//               className=\"generate-btn\"\n//               onClick={() => navigate(\"/jdinput\")}\n//             >\n//               HOME\n//             </button>\n//           </ul>\n//         </div>\n\n//         <div className=\"rmiddle-panel\">\n//           <h2>{fieldLabels[selectedField]}</h2>\n//           <textarea\n//             value={editableData[selectedField] || \"\"}\n//             onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n//             rows={20}\n//             placeholder=\"Edit the LaTeX content here...\"\n//           />\n//           {/* <div className=\"editor-actions\">\n//           <button onClick={handleGeneratePDF}>üéØ Regenerate PDF</button>\n//           <button onClick={handleDownloadPDF} disabled={!pdfUrl}>\n//             üíæ Download\n//           </button>\n//           <button onClick={handlePrintPDF} disabled={!pdfUrl}>\n//             üñ®Ô∏è Print\n//           </button>\n//         </div> */}\n//           {message && (\n//             <div\n//               className={`status ${\n//                 message.includes(\"‚úÖ\") ? \"success\" : \"error\"\n//               }`}\n//             >\n//               {message}\n//             </div>\n//           )}\n//         </div>\n\n//         <div className=\"rright-panel\">\n//           <h2>Resume Preview</h2>\n//           {pdfUrl ? (\n//             <iframe\n//               src={pdfUrl}\n//               title=\"Resume PDF\"\n//               frameBorder=\"0\"\n//               width=\"100%\"\n//               height=\"100%\"\n//             />\n//           ) : (\n//             <p className=\"no-preview\">No resume generated yet</p>\n//           )}\n//         </div>\n\n//         {isLoading && (\n//           <div className=\"loading-overlay\">\n//             <div className=\"loading-spinner\" />\n//             <p>Generating your resume PDF...</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ResumeGeneration;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/ResumeGeneration.css\";\n\nfunction ResumeGeneration() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { resumeData, companyName } = location.state || {};\n\n  const [selectedField, setSelectedField] = useState(\"PROFESSIONAL_SUMMARY\");\n\n  // üÜï Add COMPANY_NAME into editable fields\n  const [editableData, setEditableData] = useState({\n    ...resumeData,\n    COMPANY_NAME: companyName || \"\", // make editable\n  });\n\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fieldLabels = {\n    COMPANY_NAME: \"Company Name\", // üÜï New field\n    PROFESSIONAL_SUMMARY: \"Professional Summary\",\n    TECHNICAL_SKILLS: \"Technical Skills\",\n    METLIFE_BULLET_POINTS: \"MetLife Experience\",\n    ADONS_BULLET_POINTS: \"Adons Experience\",\n  };\n\n  const handleFieldChange = (field, value) => {\n    setEditableData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleGeneratePDF = async () => {\n    try {\n      setIsLoading(true);\n      setMessage(\"‚è≥ Generating PDF...\");\n\n      const response = await axios.post(\n        \"http://localhost:8080/api/resume/generate\",\n        editableData,\n        { responseType: \"blob\" }\n      );\n\n      const blob = new Blob([response.data], { type: \"application/pdf\" });\n      const url = URL.createObjectURL(blob);\n      setPdfUrl(url);\n      setMessage(\"‚úÖ PDF generated successfully!\");\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      setMessage(\"‚ùå Failed to generate PDF.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDownloadPDF = () => {\n    if (pdfUrl) {\n      const link = document.createElement(\"a\");\n      link.href = pdfUrl;\n\n      const name = editableData.COMPANY_NAME || \"resume\";\n      link.download = `Resume${name}.pdf`;\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n\n  const handlePrintPDF = () => {\n    if (pdfUrl) {\n      const printWindow = window.open(pdfUrl);\n      printWindow.onload = () => printWindow.print();\n    }\n  };\n\n  return (\n    <div>\n      <header className=\"rheader\">\n        <h1>ResuMe</h1>\n        <p>\n          <strong>Resume Update | Cover Letter | Cold Mail</strong>\n        </p>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"loggedIn\");\n            navigate(\"/login\");\n          }}\n        >\n          üö™ Logout\n        </button>\n      </header>\n\n      <div className=\"resume-generation-container\">\n        {/* Left */}\n        <div className=\"rleft-panel\">\n          <h2>Resume Fields</h2>\n          <ul className=\"field-list\">\n            {Object.keys(fieldLabels).map((field) => (\n              <li\n                key={field}\n                className={selectedField === field ? \"active\" : \"\"}\n                onClick={() => setSelectedField(field)}\n              >\n                {fieldLabels[field]}\n              </li>\n            ))}\n            <button\n              className=\"generate-btn\"\n              onClick={handleGeneratePDF}\n              disabled={isLoading}\n            >\n              {isLoading ? \"‚è≥ Generating...\" : \" MAKE\"}\n            </button>\n            <button\n              className=\"generate-btn\"\n              onClick={() => navigate(\"/jdinput\")}\n            >\n              HOME\n            </button>\n          </ul>\n        </div>\n\n        {/* Middle */}\n        <div className=\"rmiddle-panel\">\n          <h2>{fieldLabels[selectedField]}</h2>\n          <textarea\n            value={editableData[selectedField] || \"\"}\n            onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n            rows={20}\n            placeholder=\"Edit the LaTeX content here...\"\n          />\n          {message && (\n            <div\n              className={`status ${\n                message.includes(\"‚úÖ\") ? \"success\" : \"error\"\n              }`}\n            >\n              {message}\n            </div>\n          )}\n        </div>\n\n        {/* Right */}\n        <div className=\"rright-panel\">\n          <div className=\"resume-preview-header\">\n            <h2>Resume Preview</h2>\n            {pdfUrl && (\n              <button onClick={handleDownloadPDF} className=\"action-btn\">\n                üíæ Download\n              </button>\n            )}\n          </div>\n\n          {pdfUrl ? (\n            <iframe\n              src={pdfUrl}\n              title=\"Resume PDF\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          ) : (\n            <p className=\"no-preview\">No resume generated yet</p>\n          )}\n        </div>\n      </div>\n\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\" />\n          <p>Generating your resume PDF...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ResumeGeneration;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,UAAU;IAAEC;EAAY,CAAC,GAAGF,QAAQ,CAACG,KAAK,IAAI,CAAC,CAAC;EAExD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,G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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}