{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/JDInput.js\",\n  _s = $RefreshSig$();\n// JDInput.js\nimport React, { useState } from \"react\";\nimport { resumeTemplate } from \"../utils/latexTemplates\";\nimport { buildResumePrompt, buildCoverLetterPrompt, buildColdEmailPrompt } from \"../utils/promptBuilder\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JDInput({\n  onJDUpdate\n}) {\n  _s();\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [summaryLatex, setSummaryLatex] = useState(\"\");\n  const [skillsLatex, setSkillsLatex] = useState(\"\");\n  const [metlifeLatex, setMetlifeLatex] = useState(\"\");\n  const [adonsLatex, setAdonsLatex] = useState(\"\");\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [coldEmail, setColdEmail] = useState(\"\");\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n    const resumePrompt = buildResumePrompt({\n      jobDescription: jobDesc\n    });\n    const coverPrompt = buildCoverLetterPrompt({\n      jobDescription: jobDesc,\n      resumeSummary: resumeTemplate.full\n    });\n    const coldPrompt = buildColdEmailPrompt({\n      jobDescription: jobDesc,\n      resumeSummary: resumeTemplate.full\n    });\n    const [resumeData, coverLetterText, coldEmailText] = await Promise.all([callGeminiAPI(resumePrompt), callGeminiAPI(coverPrompt), callGeminiAPI(coldPrompt)]);\n    setSummaryLatex(resumeData.summaryLatex || \"\");\n    setSkillsLatex(resumeData.skillsLatex || \"\");\n    setMetlifeLatex(resumeData.metlifeLatex || \"\");\n    setAdonsLatex(resumeData.adonsLatex || \"\");\n    setCoverLetter(coverLetterText);\n    setColdEmail(coldEmailText);\n    setLoading(false);\n  };\n  const renderTextBox = (title, content) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      value: content,\n      readOnly: true,\n      style: {\n        width: \"100%\",\n        background: \"#f9f9f9\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Paste Job Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"8\",\n      cols: \"100\",\n      placeholder: \"Paste job description here...\",\n      value: jobDesc,\n      onChange: e => setJobDesc(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerate,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Tailored Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), renderTextBox(\"üìå Updated Summary Section (LaTeX)\", summaryLatex), renderTextBox(\"‚öôÔ∏è Updated Technical Skills Section (LaTeX)\", skillsLatex), renderTextBox(\"üè¢ MetLife Experience (LaTeX)\", metlifeLatex), renderTextBox(\"üè¢ Adons Soft Tech Experience (LaTeX)\", adonsLatex), renderTextBox(\"‚úâÔ∏è Cover Letter\", coverLetter), renderTextBox(\"üì® Cold Email\", coldEmail)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(JDInput, \"0SLf66/KC10s8zim3gsRtSNPHgM=\");\n_c = JDInput;\nexport default JDInput;\nvar _c;\n$RefreshReg$(_c, \"JDInput\");","map":{"version":3,"names":["React","useState","resumeTemplate","buildResumePrompt","buildCoverLetterPrompt","buildColdEmailPrompt","callGeminiAPI","jsxDEV","_jsxDEV","JDInput","onJDUpdate","_s","jobDesc","setJobDesc","loading","setLoading","summaryLatex","setSummaryLatex","skillsLatex","setSkillsLatex","metlifeLatex","setMetlifeLatex","adonsLatex","setAdonsLatex","coverLetter","setCoverLetter","coldEmail","setColdEmail","handleGenerate","trim","resumePrompt","jobDescription","coverPrompt","resumeSummary","full","coldPrompt","resumeData","coverLetterText","coldEmailText","Promise","all","renderTextBox","title","content","style","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","width","background","padding","cols","placeholder","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/JDInput.js"],"sourcesContent":["// JDInput.js\nimport React, { useState } from \"react\";\nimport { resumeTemplate } from \"../utils/latexTemplates\";\nimport {\n  buildResumePrompt,\n  buildCoverLetterPrompt,\n  buildColdEmailPrompt,\n} from \"../utils/promptBuilder\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\n\nfunction JDInput({ onJDUpdate }) {\n  const [jobDesc, setJobDesc] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [summaryLatex, setSummaryLatex] = useState(\"\");\n  const [skillsLatex, setSkillsLatex] = useState(\"\");\n  const [metlifeLatex, setMetlifeLatex] = useState(\"\");\n  const [adonsLatex, setAdonsLatex] = useState(\"\");\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [coldEmail, setColdEmail] = useState(\"\");\n\n  const handleGenerate = async () => {\n    if (!jobDesc.trim()) return;\n    setLoading(true);\n    if (onJDUpdate) onJDUpdate(jobDesc);\n\n    const resumePrompt = buildResumePrompt({ jobDescription: jobDesc });\n    const coverPrompt = buildCoverLetterPrompt({\n      jobDescription: jobDesc,\n      resumeSummary: resumeTemplate.full,\n    });\n    const coldPrompt = buildColdEmailPrompt({\n      jobDescription: jobDesc,\n      resumeSummary: resumeTemplate.full,\n    });\n\n    const [resumeData, coverLetterText, coldEmailText] = await Promise.all([\n      callGeminiAPI(resumePrompt),\n      callGeminiAPI(coverPrompt),\n      callGeminiAPI(coldPrompt),\n    ]);\n\n    setSummaryLatex(resumeData.summaryLatex || \"\");\n    setSkillsLatex(resumeData.skillsLatex || \"\");\n    setMetlifeLatex(resumeData.metlifeLatex || \"\");\n    setAdonsLatex(resumeData.adonsLatex || \"\");\n    setCoverLetter(coverLetterText);\n    setColdEmail(coldEmailText);\n    setLoading(false);\n  };\n\n  const renderTextBox = (title, content) => (\n    <div style={{ marginBottom: \"2rem\" }}>\n      <h3>{title}</h3>\n      <textarea\n        rows=\"10\"\n        value={content}\n        readOnly\n        style={{ width: \"100%\", background: \"#f9f9f9\" }}\n      />\n    </div>\n  );\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n      <h2>Paste Job Description</h2>\n      <textarea\n        rows=\"8\"\n        cols=\"100\"\n        placeholder=\"Paste job description here...\"\n        value={jobDesc}\n        onChange={(e) => setJobDesc(e.target.value)}\n      />\n      <br />\n      <button onClick={handleGenerate} disabled={loading}>\n        {loading ? \"Generating...\" : \"Generate Tailored Content\"}\n      </button>\n\n      {renderTextBox(\"üìå Updated Summary Section (LaTeX)\", summaryLatex)}\n      {renderTextBox(\n        \"‚öôÔ∏è Updated Technical Skills Section (LaTeX)\",\n        skillsLatex\n      )}\n      {renderTextBox(\"üè¢ MetLife Experience (LaTeX)\", metlifeLatex)}\n      {renderTextBox(\"üè¢ Adons Soft Tech Experience (LaTeX)\", adonsLatex)}\n      {renderTextBox(\"‚úâÔ∏è Cover Letter\", coverLetter)}\n      {renderTextBox(\"üì® Cold Email\", coldEmail)}\n    </div>\n  );\n}\n\nexport default JDInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}