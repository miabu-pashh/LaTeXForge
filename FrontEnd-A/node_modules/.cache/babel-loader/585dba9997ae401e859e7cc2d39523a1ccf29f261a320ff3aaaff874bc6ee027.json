{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/CoverLetter.js\",\n  _s = $RefreshSig$();\n// CoverLetter.js\nimport React, { useState, useEffect } from \"react\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\nimport { buildCoverLetterPrompt } from \"../utils/promptBuilder\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_SUMMARY = `Software Engineer with 4+ years of experience in Java Full Stack Development (Spring Boot, React/Angular), cloud deployment (AWS), and building scalable enterprise systems across BFSI, Healthcare, and eCommerce sectors.`;\nfunction CoverLetter({\n  jobDescription\n}) {\n  _s();\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (!jobDescription.trim()) return;\n    setLoading(true);\n    const prompt = buildCoverLetterPrompt({\n      jobDescription,\n      resumeSummary: DEFAULT_SUMMARY\n    });\n    callGeminiAPI(prompt).then(result => {\n      setCoverLetter(result);\n      setLoading(false);\n    });\n  }, [jobDescription]);\n  const handleCopy = () => {\n    navigator.clipboard.writeText(coverLetter);\n    alert(\"Cover letter copied to clipboard!\");\n  };\n  const handleDownload = () => {\n    const blob = new Blob([coverLetter], {\n      type: \"text/plain\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"cover_letter.txt\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Generated Cover Letter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Generating cover letter...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"18\",\n        value: coverLetter,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCopy,\n          children: \"Copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownload,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(CoverLetter, \"j2YtCGu01S/Zi4Jyj7iHPXTDtZY=\");\n_c = CoverLetter;\nexport default CoverLetter;\nvar _c;\n$RefreshReg$(_c, \"CoverLetter\");","map":{"version":3,"names":["React","useState","useEffect","callGeminiAPI","buildCoverLetterPrompt","jsxDEV","_jsxDEV","Fragment","_Fragment","DEFAULT_SUMMARY","CoverLetter","jobDescription","_s","coverLetter","setCoverLetter","loading","setLoading","trim","prompt","resumeSummary","then","result","handleCopy","navigator","clipboard","writeText","alert","handleDownload","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","value","readOnly","onClick","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/ResumeApp/resume-tailor/src/components/CoverLetter.js"],"sourcesContent":["// CoverLetter.js\nimport React, { useState, useEffect } from \"react\";\nimport { callGeminiAPI } from \"../utils/apiHandler\";\nimport { buildCoverLetterPrompt } from \"../utils/promptBuilder\";\n\nconst DEFAULT_SUMMARY = `Software Engineer with 4+ years of experience in Java Full Stack Development (Spring Boot, React/Angular), cloud deployment (AWS), and building scalable enterprise systems across BFSI, Healthcare, and eCommerce sectors.`;\n\nfunction CoverLetter({ jobDescription }) {\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!jobDescription.trim()) return;\n    setLoading(true);\n    const prompt = buildCoverLetterPrompt({\n      jobDescription,\n      resumeSummary: DEFAULT_SUMMARY,\n    });\n    callGeminiAPI(prompt).then((result) => {\n      setCoverLetter(result);\n      setLoading(false);\n    });\n  }, [jobDescription]);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(coverLetter);\n    alert(\"Cover letter copied to clipboard!\");\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([coverLetter], { type: \"text/plain\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"cover_letter.txt\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"card\">\n      <h2>Generated Cover Letter</h2>\n      {loading ? (\n        <p>Generating cover letter...</p>\n      ) : (\n        <>\n          <textarea rows=\"18\" value={coverLetter} readOnly />\n          <div className=\"button-row\">\n            <button onClick={handleCopy}>Copy</button>\n            <button onClick={handleDownload}>Download</button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default CoverLetter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}