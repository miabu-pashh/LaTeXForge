{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/EmailManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Mail, Calendar, Clock, AlertCircle, CheckCircle, Search, Plus, ArrowLeft } from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../c/EmailManagerDashboard.css\";\n\n// API service for backend communication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailService = {\n  async getStats() {\n    const response = await fetch(\"http://localhost:8080/api/emails/stats\");\n    return response.json();\n  },\n  async getEmails(page = 0, size = 20, category = null) {\n    let url = `http://localhost:8080/api/emails?page=${page}&size=${size}`;\n    if (category) url += `&category=${category}`;\n    const response = await fetch(url);\n    return response.json();\n  },\n  async getCategories() {\n    const response = await fetch(\"http://localhost:8080/api/emails/categories\");\n    return response.json();\n  },\n  async getPendingReminders() {\n    const response = await fetch(\"http://localhost:8080/api/reminders/pending\");\n    return response.json();\n  },\n  async getUpcomingReminders() {\n    const response = await fetch(\"http://localhost:8080/api/reminders/upcoming\");\n    return response.json();\n  },\n  async fetchGmailEmails() {\n    const response = await fetch(\"http://localhost:8080/api/emails/fetch-gmail\", {\n      method: \"POST\"\n    });\n    return response.json();\n  }\n};\nconst EmailManagerDashboard = () => {\n  _s();\n  var _stats$emailsByCatego, _stats$emailsByCatego2;\n  const navigate = useNavigate();\n  const [stats, setStats] = useState({});\n  const [emails, setEmails] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [fetchingGmail, setFetchingGmail] = useState(false);\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n  const sortEmailsByDate = emailList => {\n    return [...emailList].sort((a, b) => {\n      const dateA = new Date(a.receivedDate);\n      const dateB = new Date(b.receivedDate);\n      return dateB - dateA; // Newest first\n    });\n  };\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      const [statsData, emailsData, categoriesData, remindersData] = await Promise.all([emailService.getStats(), emailService.getEmails(), emailService.getCategories(), emailService.getUpcomingReminders()]);\n      setStats(statsData || {});\n      const sortedEmails = sortEmailsByDate(emailsData.content || []);\n      setEmails(sortedEmails);\n      // Ensure categories is always an array\n      setCategories(Array.isArray(categoriesData) ? categoriesData : []);\n      setReminders(Array.isArray(remindersData) ? remindersData : []);\n    } catch (error) {\n      console.error(\"Error loading dashboard data:\", error);\n      setStats({});\n      setEmails([]);\n      setCategories([]);\n      setReminders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCategoryFilter = async category => {\n    setSelectedCategory(category);\n    try {\n      const emailsData = await emailService.getEmails(0, 20, category || null);\n      const sortedEmails = sortEmailsByDate(emailsData.content || []);\n      setEmails(sortedEmails);\n    } catch (error) {\n      console.error(\"Error filtering emails:\", error);\n      setEmails([]);\n    }\n  };\n  const fetchGmailEmails = async () => {\n    try {\n      setFetchingGmail(true);\n      const result = await emailService.fetchGmailEmails();\n      console.log(\"Gmail fetch result:\", result);\n      if (result.success) {\n        alert(\"Gmail emails fetched successfully!\");\n      } else {\n        alert(\"Error fetching Gmail emails: \" + result.message);\n      }\n      loadDashboardData();\n    } catch (error) {\n      console.error(\"Gmail fetch error:\", error);\n      alert(\"Error connecting to Gmail: \" + error.message);\n    } finally {\n      setFetchingGmail(false);\n    }\n  };\n  const getCategoryClassName = category => {\n    const categoryMap = {\n      INTERVIEW: \"category-interview\",\n      ASSESSMENT: \"category-assessment\",\n      JOB_APPLICATION: \"category-job-application\",\n      FOLLOW_UP: \"category-follow-up\",\n      OFFER: \"category-offer\",\n      REJECTION: \"category-rejection\",\n      GENERAL: \"category-general\",\n      SPAM: \"category-spam\"\n    };\n    return categoryMap[category] || \"category-general\";\n  };\n  const getPriorityClassName = priority => {\n    const priorityMap = {\n      HIGH: \"priority-high\",\n      MEDIUM: \"priority-medium\",\n      LOW: \"priority-low\"\n    };\n    return priorityMap[priority] || \"priority-medium\";\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"No date\";\n    try {\n      return new Date(dateString).toLocaleDateString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      });\n    } catch (error) {\n      return \"Invalid date\";\n    }\n  };\n  const formatCategoryName = category => {\n    return category ? category.replace(/_/g, \" \") : \"Unknown\";\n  };\n\n  // Filter emails based on search term\n  const filteredEmails = emails.filter(email => {\n    var _email$subject, _email$sender, _email$content;\n    if (!searchTerm) return true;\n    const searchLower = searchTerm.toLowerCase();\n    return ((_email$subject = email.subject) === null || _email$subject === void 0 ? void 0 : _email$subject.toLowerCase().includes(searchLower)) || ((_email$sender = email.sender) === null || _email$sender === void 0 ? void 0 : _email$sender.toLowerCase().includes(searchLower)) || ((_email$content = email.content) === null || _email$content === void 0 ? void 0 : _email$content.toLowerCase().includes(searchLower));\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  }\n  const totalEmails = Object.values(stats.emailsByCategory || {}).reduce((a, b) => a + b, 0);\n  const totalReminders = Object.values(stats.pendingReminders || {}).reduce((a, b) => a + b, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-main-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"email-nav-back\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"email-nav-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), \"Back to Resume Manager\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-header-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-header-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-header-title\",\n            children: [/*#__PURE__*/_jsxDEV(Mail, {\n              className: \"email-header-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"email-header-text\",\n              children: \"Email Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-header-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: fetchGmailEmails,\n              disabled: fetchingGmail,\n              className: `email-btn ${fetchingGmail ? \"\" : \"email-btn-success\"}`,\n              children: [/*#__PURE__*/_jsxDEV(Mail, {\n                className: \"email-btn-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), fetchingGmail ? \"Fetching...\" : \"Fetch Gmail\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"email-btn email-btn-primary\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"email-btn-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), \"Add Email\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"email-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-info-banner\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          className: \"email-info-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-info-text\",\n          children: [\"Showing emails from the last 7 days \\u2022 Total: \", emails.length, \" emails\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-stats-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(Mail, {\n            className: \"email-stat-icon blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Emails\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: totalEmails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"email-stat-icon green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Interviews\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ((_stats$emailsByCatego = stats.emailsByCategory) === null || _stats$emailsByCatego === void 0 ? void 0 : _stats$emailsByCatego.INTERVIEW) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"email-stat-icon yellow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pending Reminders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: totalReminders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            className: \"email-stat-icon red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-stat-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Assessments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ((_stats$emailsByCatego2 = stats.emailsByCategory) === null || _stats$emailsByCatego2 === void 0 ? void 0 : _stats$emailsByCatego2.ASSESSMENT) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-main-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-list-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-list-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"email-list-title\",\n              children: \"Recent Emails\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-list-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-search-container\",\n                children: [/*#__PURE__*/_jsxDEV(Search, {\n                  className: \"email-search-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Search emails...\",\n                  value: searchTerm,\n                  onChange: e => setSearchTerm(e.target.value),\n                  className: \"email-search-input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: selectedCategory,\n                onChange: e => handleCategoryFilter(e.target.value),\n                className: \"email-category-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"All Categories\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: formatCategoryName(category)\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-list\",\n            children: filteredEmails.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-empty-state\",\n              children: [/*#__PURE__*/_jsxDEV(Mail, {\n                className: \"email-empty-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"email-empty-title\",\n                children: \"No emails found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"email-empty-text\",\n                children: searchTerm ? \"Try adjusting your search terms or filters\" : \"Get started by clicking 'Fetch Gmail' to import your emails\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this) : filteredEmails.map(email => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-item-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"email-item-main\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"email-item-tags\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `email-category-tag ${getCategoryClassName(email.category)}`,\n                      children: formatCategoryName(email.category)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `email-priority ${getPriorityClassName(email.priority)}`,\n                      children: email.priority || \"No Priority\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 27\n                    }, this), !email.read && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"email-unread-indicator\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 357,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"email-subject\",\n                    children: email.subject || \"No Subject\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"email-sender\",\n                    children: [\"From: \", email.sender || \"Unknown Sender\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"email-preview\",\n                    children: email.content ? email.content.substring(0, 100) + \"...\" : \"No content\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"email-date\",\n                  children: formatDate(email.receivedDate)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this)\n            }, email.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-sidebar-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-sidebar-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"email-sidebar-title\",\n                children: \"Upcoming Reminders\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-sidebar-content\",\n              children: reminders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-empty-state\",\n                children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n                  className: \"email-empty-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"email-empty-text\",\n                  children: \"No upcoming reminders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-reminders-list\",\n                children: reminders.slice(0, 5).map(reminder => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"email-reminder-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"email-reminder-title\",\n                    children: reminder.title || \"No Title\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"email-reminder-date\",\n                    children: formatDate(reminder.eventDateTime)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"email-reminder-type\",\n                    children: formatCategoryName(reminder.type)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 25\n                  }, this)]\n                }, reminder.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"email-sidebar-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-sidebar-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"email-sidebar-title\",\n                children: \"Email Categories\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"email-sidebar-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"email-categories-list\",\n                children: Object.entries(stats.emailsByCategory || {}).map(([category, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"email-category-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `email-category-tag ${getCategoryClassName(category)}`,\n                    children: formatCategoryName(category)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"email-category-count\",\n                    children: count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 25\n                  }, this)]\n                }, category, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailManagerDashboard, \"dt+7oWBEihDyTPb3yDKtupRQ6UM=\", false, function () {\n  return [useNavigate];\n});\n_c = EmailManagerDashboard;\nexport default EmailManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmailManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Mail","Calendar","Clock","AlertCircle","CheckCircle","Search","Plus","ArrowLeft","useNavigate","jsxDEV","_jsxDEV","emailService","getStats","response","fetch","json","getEmails","page","size","category","url","getCategories","getPendingReminders","getUpcomingReminders","fetchGmailEmails","method","EmailManagerDashboard","_s","_stats$emailsByCatego","_stats$emailsByCatego2","navigate","stats","setStats","emails","setEmails","categories","setCategories","reminders","setReminders","selectedCategory","setSelectedCategory","searchTerm","setSearchTerm","loading","setLoading","fetchingGmail","setFetchingGmail","loadDashboardData","sortEmailsByDate","emailList","sort","a","b","dateA","Date","receivedDate","dateB","statsData","emailsData","categoriesData","remindersData","Promise","all","sortedEmails","content","Array","isArray","error","console","handleCategoryFilter","result","log","success","alert","message","getCategoryClassName","categoryMap","INTERVIEW","ASSESSMENT","JOB_APPLICATION","FOLLOW_UP","OFFER","REJECTION","GENERAL","SPAM","getPriorityClassName","priority","priorityMap","HIGH","MEDIUM","LOW","formatDate","dateString","toLocaleDateString","month","day","hour","minute","formatCategoryName","replace","filteredEmails","filter","email","_email$subject","_email$sender","_email$content","searchLower","toLowerCase","subject","includes","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalEmails","Object","values","emailsByCategory","reduce","totalReminders","pendingReminders","onClick","disabled","length","type","placeholder","value","onChange","e","target","map","read","substring","id","slice","reminder","title","eventDateTime","entries","count","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/EmailManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Mail,\n  Calendar,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  Search,\n  Plus,\n  ArrowLeft,\n} from \"lucide-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../c/EmailManagerDashboard.css\";\n\n// API service for backend communication\nconst emailService = {\n  async getStats() {\n    const response = await fetch(\"http://localhost:8080/api/emails/stats\");\n    return response.json();\n  },\n\n  async getEmails(page = 0, size = 20, category = null) {\n    let url = `http://localhost:8080/api/emails?page=${page}&size=${size}`;\n    if (category) url += `&category=${category}`;\n    const response = await fetch(url);\n    return response.json();\n  },\n\n  async getCategories() {\n    const response = await fetch(\"http://localhost:8080/api/emails/categories\");\n    return response.json();\n  },\n\n  async getPendingReminders() {\n    const response = await fetch(\"http://localhost:8080/api/reminders/pending\");\n    return response.json();\n  },\n\n  async getUpcomingReminders() {\n    const response = await fetch(\n      \"http://localhost:8080/api/reminders/upcoming\"\n    );\n    return response.json();\n  },\n\n  async fetchGmailEmails() {\n    const response = await fetch(\n      \"http://localhost:8080/api/emails/fetch-gmail\",\n      {\n        method: \"POST\",\n      }\n    );\n    return response.json();\n  },\n};\n\nconst EmailManagerDashboard = () => {\n  const navigate = useNavigate();\n  const [stats, setStats] = useState({});\n  const [emails, setEmails] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [reminders, setReminders] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [fetchingGmail, setFetchingGmail] = useState(false);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const sortEmailsByDate = (emailList) => {\n    return [...emailList].sort((a, b) => {\n      const dateA = new Date(a.receivedDate);\n      const dateB = new Date(b.receivedDate);\n      return dateB - dateA; // Newest first\n    });\n  };\n\n  const loadDashboardData = async () => {\n    try {\n      setLoading(true);\n      const [statsData, emailsData, categoriesData, remindersData] =\n        await Promise.all([\n          emailService.getStats(),\n          emailService.getEmails(),\n          emailService.getCategories(),\n          emailService.getUpcomingReminders(),\n        ]);\n\n      setStats(statsData || {});\n      const sortedEmails = sortEmailsByDate(emailsData.content || []);\n      setEmails(sortedEmails);\n      // Ensure categories is always an array\n      setCategories(Array.isArray(categoriesData) ? categoriesData : []);\n      setReminders(Array.isArray(remindersData) ? remindersData : []);\n    } catch (error) {\n      console.error(\"Error loading dashboard data:\", error);\n      setStats({});\n      setEmails([]);\n      setCategories([]);\n      setReminders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCategoryFilter = async (category) => {\n    setSelectedCategory(category);\n    try {\n      const emailsData = await emailService.getEmails(0, 20, category || null);\n      const sortedEmails = sortEmailsByDate(emailsData.content || []);\n      setEmails(sortedEmails);\n    } catch (error) {\n      console.error(\"Error filtering emails:\", error);\n      setEmails([]);\n    }\n  };\n\n  const fetchGmailEmails = async () => {\n    try {\n      setFetchingGmail(true);\n      const result = await emailService.fetchGmailEmails();\n      console.log(\"Gmail fetch result:\", result);\n\n      if (result.success) {\n        alert(\"Gmail emails fetched successfully!\");\n      } else {\n        alert(\"Error fetching Gmail emails: \" + result.message);\n      }\n\n      loadDashboardData();\n    } catch (error) {\n      console.error(\"Gmail fetch error:\", error);\n      alert(\"Error connecting to Gmail: \" + error.message);\n    } finally {\n      setFetchingGmail(false);\n    }\n  };\n\n  const getCategoryClassName = (category) => {\n    const categoryMap = {\n      INTERVIEW: \"category-interview\",\n      ASSESSMENT: \"category-assessment\",\n      JOB_APPLICATION: \"category-job-application\",\n      FOLLOW_UP: \"category-follow-up\",\n      OFFER: \"category-offer\",\n      REJECTION: \"category-rejection\",\n      GENERAL: \"category-general\",\n      SPAM: \"category-spam\",\n    };\n    return categoryMap[category] || \"category-general\";\n  };\n\n  const getPriorityClassName = (priority) => {\n    const priorityMap = {\n      HIGH: \"priority-high\",\n      MEDIUM: \"priority-medium\",\n      LOW: \"priority-low\",\n    };\n    return priorityMap[priority] || \"priority-medium\";\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return \"No date\";\n    try {\n      return new Date(dateString).toLocaleDateString(\"en-US\", {\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    } catch (error) {\n      return \"Invalid date\";\n    }\n  };\n\n  const formatCategoryName = (category) => {\n    return category ? category.replace(/_/g, \" \") : \"Unknown\";\n  };\n\n  // Filter emails based on search term\n  const filteredEmails = emails.filter((email) => {\n    if (!searchTerm) return true;\n    const searchLower = searchTerm.toLowerCase();\n    return (\n      email.subject?.toLowerCase().includes(searchLower) ||\n      email.sender?.toLowerCase().includes(searchLower) ||\n      email.content?.toLowerCase().includes(searchLower)\n    );\n  });\n\n  if (loading) {\n    return (\n      <div className=\"email-loading\">\n        <div className=\"email-spinner\"></div>\n      </div>\n    );\n  }\n\n  const totalEmails = Object.values(stats.emailsByCategory || {}).reduce(\n    (a, b) => a + b,\n    0\n  );\n  const totalReminders = Object.values(stats.pendingReminders || {}).reduce(\n    (a, b) => a + b,\n    0\n  );\n\n  return (\n    <div className=\"email-dashboard\">\n      {/* Navigation Back */}\n      <div className=\"email-main-container\">\n        <button onClick={() => navigate(-1)} className=\"email-nav-back\">\n          <ArrowLeft className=\"email-nav-icon\" />\n          Back to Resume Manager\n        </button>\n      </div>\n\n      {/* Header */}\n      <div className=\"email-header\">\n        <div className=\"email-header-container\">\n          <div className=\"email-header-content\">\n            <div className=\"email-header-title\">\n              <Mail className=\"email-header-icon\" />\n              <h1 className=\"email-header-text\">Email Manager</h1>\n            </div>\n            <div className=\"email-header-buttons\">\n              <button\n                onClick={fetchGmailEmails}\n                disabled={fetchingGmail}\n                className={`email-btn ${\n                  fetchingGmail ? \"\" : \"email-btn-success\"\n                }`}\n              >\n                <Mail className=\"email-btn-icon\" />\n                {fetchingGmail ? \"Fetching...\" : \"Fetch Gmail\"}\n              </button>\n              <button className=\"email-btn email-btn-primary\">\n                <Plus className=\"email-btn-icon\" />\n                Add Email\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"email-main-container\">\n        {/* Info Banner */}\n        <div className=\"email-info-banner\">\n          <Calendar className=\"email-info-icon\" />\n          <span className=\"email-info-text\">\n            Showing emails from the last 7 days • Total: {emails.length} emails\n          </span>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"email-stats-grid\">\n          <div className=\"email-stat-card\">\n            <Mail className=\"email-stat-icon blue\" />\n            <div className=\"email-stat-content\">\n              <h3>Total Emails</h3>\n              <p>{totalEmails}</p>\n            </div>\n          </div>\n\n          <div className=\"email-stat-card\">\n            <Calendar className=\"email-stat-icon green\" />\n            <div className=\"email-stat-content\">\n              <h3>Interviews</h3>\n              <p>{stats.emailsByCategory?.INTERVIEW || 0}</p>\n            </div>\n          </div>\n\n          <div className=\"email-stat-card\">\n            <Clock className=\"email-stat-icon yellow\" />\n            <div className=\"email-stat-content\">\n              <h3>Pending Reminders</h3>\n              <p>{totalReminders}</p>\n            </div>\n          </div>\n\n          <div className=\"email-stat-card\">\n            <AlertCircle className=\"email-stat-icon red\" />\n            <div className=\"email-stat-content\">\n              <h3>Assessments</h3>\n              <p>{stats.emailsByCategory?.ASSESSMENT || 0}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Content Layout */}\n        <div className=\"email-main-layout\">\n          {/* Email List */}\n          <div className=\"email-list-container\">\n            <div className=\"email-list-header\">\n              <h2 className=\"email-list-title\">Recent Emails</h2>\n              <div className=\"email-list-controls\">\n                <div className=\"email-search-container\">\n                  <Search className=\"email-search-icon\" />\n                  <input\n                    type=\"text\"\n                    placeholder=\"Search emails...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"email-search-input\"\n                  />\n                </div>\n\n                <select\n                  value={selectedCategory}\n                  onChange={(e) => handleCategoryFilter(e.target.value)}\n                  className=\"email-category-select\"\n                >\n                  <option value=\"\">All Categories</option>\n                  {categories.map((category) => (\n                    <option key={category} value={category}>\n                      {formatCategoryName(category)}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"email-list\">\n              {filteredEmails.length === 0 ? (\n                <div className=\"email-empty-state\">\n                  <Mail className=\"email-empty-icon\" />\n                  <h3 className=\"email-empty-title\">No emails found</h3>\n                  <p className=\"email-empty-text\">\n                    {searchTerm\n                      ? \"Try adjusting your search terms or filters\"\n                      : \"Get started by clicking 'Fetch Gmail' to import your emails\"}\n                  </p>\n                </div>\n              ) : (\n                filteredEmails.map((email) => (\n                  <div key={email.id} className=\"email-item\">\n                    <div className=\"email-item-content\">\n                      <div className=\"email-item-main\">\n                        <div className=\"email-item-tags\">\n                          <span\n                            className={`email-category-tag ${getCategoryClassName(\n                              email.category\n                            )}`}\n                          >\n                            {formatCategoryName(email.category)}\n                          </span>\n                          <span\n                            className={`email-priority ${getPriorityClassName(\n                              email.priority\n                            )}`}\n                          >\n                            {email.priority || \"No Priority\"}\n                          </span>\n                          {!email.read && (\n                            <span className=\"email-unread-indicator\"></span>\n                          )}\n                        </div>\n                        <p className=\"email-subject\">\n                          {email.subject || \"No Subject\"}\n                        </p>\n                        <p className=\"email-sender\">\n                          From: {email.sender || \"Unknown Sender\"}\n                        </p>\n                        <p className=\"email-preview\">\n                          {email.content\n                            ? email.content.substring(0, 100) + \"...\"\n                            : \"No content\"}\n                        </p>\n                      </div>\n                      <div className=\"email-date\">\n                        {formatDate(email.receivedDate)}\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"email-sidebar\">\n            {/* Reminders Section */}\n            <div className=\"email-sidebar-section\">\n              <div className=\"email-sidebar-header\">\n                <h2 className=\"email-sidebar-title\">Upcoming Reminders</h2>\n              </div>\n              <div className=\"email-sidebar-content\">\n                {reminders.length === 0 ? (\n                  <div className=\"email-empty-state\">\n                    <CheckCircle className=\"email-empty-icon\" />\n                    <p className=\"email-empty-text\">No upcoming reminders</p>\n                  </div>\n                ) : (\n                  <div className=\"email-reminders-list\">\n                    {reminders.slice(0, 5).map((reminder) => (\n                      <div key={reminder.id} className=\"email-reminder-item\">\n                        <p className=\"email-reminder-title\">\n                          {reminder.title || \"No Title\"}\n                        </p>\n                        <p className=\"email-reminder-date\">\n                          {formatDate(reminder.eventDateTime)}\n                        </p>\n                        <span className=\"email-reminder-type\">\n                          {formatCategoryName(reminder.type)}\n                        </span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Categories Section */}\n            <div className=\"email-sidebar-section\">\n              <div className=\"email-sidebar-header\">\n                <h2 className=\"email-sidebar-title\">Email Categories</h2>\n              </div>\n              <div className=\"email-sidebar-content\">\n                <div className=\"email-categories-list\">\n                  {Object.entries(stats.emailsByCategory || {}).map(\n                    ([category, count]) => (\n                      <div key={category} className=\"email-category-item\">\n                        <span\n                          className={`email-category-tag ${getCategoryClassName(\n                            category\n                          )}`}\n                        >\n                          {formatCategoryName(category)}\n                        </span>\n                        <span className=\"email-category-count\">{count}</span>\n                      </div>\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmailManagerDashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,WAAW,EACXC,WAAW,EACXC,MAAM,EACNC,IAAI,EACJC,SAAS,QACJ,cAAc;AACrB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gCAAgC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnB,MAAMC,QAAQA,CAAA,EAAG;IACf,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;IACtE,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,SAASA,CAACC,IAAI,GAAG,CAAC,EAAEC,IAAI,GAAG,EAAE,EAAEC,QAAQ,GAAG,IAAI,EAAE;IACpD,IAAIC,GAAG,GAAG,yCAAyCH,IAAI,SAASC,IAAI,EAAE;IACtE,IAAIC,QAAQ,EAAEC,GAAG,IAAI,aAAaD,QAAQ,EAAE;IAC5C,MAAMN,QAAQ,GAAG,MAAMC,KAAK,CAACM,GAAG,CAAC;IACjC,OAAOP,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMM,aAAaA,CAAA,EAAG;IACpB,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;IAC3E,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMO,mBAAmBA,CAAA,EAAG;IAC1B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,CAAC;IAC3E,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMQ,oBAAoBA,CAAA,EAAG;IAC3B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CACF,CAAC;IACD,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMS,gBAAgBA,CAAA,EAAG;IACvB,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8CAA8C,EAC9C;MACEW,MAAM,EAAE;IACV,CACF,CAAC;IACD,OAAOZ,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB;AACF,CAAC;AAED,MAAMW,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAClC,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuC,SAAS,EAAEC,YAAY,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC+C,aAAa,EAAEC,gBAAgB,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACdgD,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC,OAAO,CAAC,GAAGA,SAAS,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnC,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAACH,CAAC,CAACI,YAAY,CAAC;MACtC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAACF,CAAC,CAACG,YAAY,CAAC;MACtC,OAAOC,KAAK,GAAGH,KAAK,CAAC,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMN,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACFH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM,CAACa,SAAS,EAAEC,UAAU,EAAEC,cAAc,EAAEC,aAAa,CAAC,GAC1D,MAAMC,OAAO,CAACC,GAAG,CAAC,CAChBnD,YAAY,CAACC,QAAQ,CAAC,CAAC,EACvBD,YAAY,CAACK,SAAS,CAAC,CAAC,EACxBL,YAAY,CAACU,aAAa,CAAC,CAAC,EAC5BV,YAAY,CAACY,oBAAoB,CAAC,CAAC,CACpC,CAAC;MAEJS,QAAQ,CAACyB,SAAS,IAAI,CAAC,CAAC,CAAC;MACzB,MAAMM,YAAY,GAAGf,gBAAgB,CAACU,UAAU,CAACM,OAAO,IAAI,EAAE,CAAC;MAC/D9B,SAAS,CAAC6B,YAAY,CAAC;MACvB;MACA3B,aAAa,CAAC6B,KAAK,CAACC,OAAO,CAACP,cAAc,CAAC,GAAGA,cAAc,GAAG,EAAE,CAAC;MAClErB,YAAY,CAAC2B,KAAK,CAACC,OAAO,CAACN,aAAa,CAAC,GAAGA,aAAa,GAAG,EAAE,CAAC;IACjE,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDnC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACZE,SAAS,CAAC,EAAE,CAAC;MACbE,aAAa,CAAC,EAAE,CAAC;MACjBE,YAAY,CAAC,EAAE,CAAC;IAClB,CAAC,SAAS;MACRM,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyB,oBAAoB,GAAG,MAAOlD,QAAQ,IAAK;IAC/CqB,mBAAmB,CAACrB,QAAQ,CAAC;IAC7B,IAAI;MACF,MAAMuC,UAAU,GAAG,MAAM/C,YAAY,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,EAAEG,QAAQ,IAAI,IAAI,CAAC;MACxE,MAAM4C,YAAY,GAAGf,gBAAgB,CAACU,UAAU,CAACM,OAAO,IAAI,EAAE,CAAC;MAC/D9B,SAAS,CAAC6B,YAAY,CAAC;IACzB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CjC,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAED,MAAMV,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACFsB,gBAAgB,CAAC,IAAI,CAAC;MACtB,MAAMwB,MAAM,GAAG,MAAM3D,YAAY,CAACa,gBAAgB,CAAC,CAAC;MACpD4C,OAAO,CAACG,GAAG,CAAC,qBAAqB,EAAED,MAAM,CAAC;MAE1C,IAAIA,MAAM,CAACE,OAAO,EAAE;QAClBC,KAAK,CAAC,oCAAoC,CAAC;MAC7C,CAAC,MAAM;QACLA,KAAK,CAAC,+BAA+B,GAAGH,MAAM,CAACI,OAAO,CAAC;MACzD;MAEA3B,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CM,KAAK,CAAC,6BAA6B,GAAGN,KAAK,CAACO,OAAO,CAAC;IACtD,CAAC,SAAS;MACR5B,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC;EAED,MAAM6B,oBAAoB,GAAIxD,QAAQ,IAAK;IACzC,MAAMyD,WAAW,GAAG;MAClBC,SAAS,EAAE,oBAAoB;MAC/BC,UAAU,EAAE,qBAAqB;MACjCC,eAAe,EAAE,0BAA0B;MAC3CC,SAAS,EAAE,oBAAoB;MAC/BC,KAAK,EAAE,gBAAgB;MACvBC,SAAS,EAAE,oBAAoB;MAC/BC,OAAO,EAAE,kBAAkB;MAC3BC,IAAI,EAAE;IACR,CAAC;IACD,OAAOR,WAAW,CAACzD,QAAQ,CAAC,IAAI,kBAAkB;EACpD,CAAC;EAED,MAAMkE,oBAAoB,GAAIC,QAAQ,IAAK;IACzC,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,eAAe;MACrBC,MAAM,EAAE,iBAAiB;MACzBC,GAAG,EAAE;IACP,CAAC;IACD,OAAOH,WAAW,CAACD,QAAQ,CAAC,IAAI,iBAAiB;EACnD,CAAC;EAED,MAAMK,UAAU,GAAIC,UAAU,IAAK;IACjC,IAAI,CAACA,UAAU,EAAE,OAAO,SAAS;IACjC,IAAI;MACF,OAAO,IAAItC,IAAI,CAACsC,UAAU,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QACtDC,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACd,OAAO,cAAc;IACvB;EACF,CAAC;EAED,MAAM+B,kBAAkB,GAAI/E,QAAQ,IAAK;IACvC,OAAOA,QAAQ,GAAGA,QAAQ,CAACgF,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,SAAS;EAC3D,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGnE,MAAM,CAACoE,MAAM,CAAEC,KAAK,IAAK;IAAA,IAAAC,cAAA,EAAAC,aAAA,EAAAC,cAAA;IAC9C,IAAI,CAAChE,UAAU,EAAE,OAAO,IAAI;IAC5B,MAAMiE,WAAW,GAAGjE,UAAU,CAACkE,WAAW,CAAC,CAAC;IAC5C,OACE,EAAAJ,cAAA,GAAAD,KAAK,CAACM,OAAO,cAAAL,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CAAC,OAAAF,aAAA,GAClDF,KAAK,CAACQ,MAAM,cAAAN,aAAA,uBAAZA,aAAA,CAAcG,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CAAC,OAAAD,cAAA,GACjDH,KAAK,CAACtC,OAAO,cAAAyC,cAAA,uBAAbA,cAAA,CAAeE,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACH,WAAW,CAAC;EAEtD,CAAC,CAAC;EAEF,IAAI/D,OAAO,EAAE;IACX,oBACEjC,OAAA;MAAKqG,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BtG,OAAA;QAAKqG,SAAS,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEV;EAEA,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAACxF,KAAK,CAACyF,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CACpE,CAACtE,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EACf,CACF,CAAC;EACD,MAAMsE,cAAc,GAAGJ,MAAM,CAACC,MAAM,CAACxF,KAAK,CAAC4F,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAACF,MAAM,CACvE,CAACtE,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EACf,CACF,CAAC;EAED,oBACE1C,OAAA;IAAKqG,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAE9BtG,OAAA;MAAKqG,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCtG,OAAA;QAAQkH,OAAO,EAAEA,CAAA,KAAM9F,QAAQ,CAAC,CAAC,CAAC,CAAE;QAACiF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7DtG,OAAA,CAACH,SAAS;UAACwG,SAAS,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,0BAE1C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN1G,OAAA;MAAKqG,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BtG,OAAA;QAAKqG,SAAS,EAAC,wBAAwB;QAAAC,QAAA,eACrCtG,OAAA;UAAKqG,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnCtG,OAAA;YAAKqG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCtG,OAAA,CAACV,IAAI;cAAC+G,SAAS,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACtC1G,OAAA;cAAIqG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACN1G,OAAA;YAAKqG,SAAS,EAAC,sBAAsB;YAAAC,QAAA,gBACnCtG,OAAA;cACEkH,OAAO,EAAEpG,gBAAiB;cAC1BqG,QAAQ,EAAEhF,aAAc;cACxBkE,SAAS,EAAE,aACTlE,aAAa,GAAG,EAAE,GAAG,mBAAmB,EACvC;cAAAmE,QAAA,gBAEHtG,OAAA,CAACV,IAAI;gBAAC+G,SAAS,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,EAClCvE,aAAa,GAAG,aAAa,GAAG,aAAa;YAAA;cAAAoE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACT1G,OAAA;cAAQqG,SAAS,EAAC,6BAA6B;cAAAC,QAAA,gBAC7CtG,OAAA,CAACJ,IAAI;gBAACyG,SAAS,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,aAErC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN1G,OAAA;MAAKqG,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBAEnCtG,OAAA;QAAKqG,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCtG,OAAA,CAACT,QAAQ;UAAC8G,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxC1G,OAAA;UAAMqG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAAC,oDACa,EAAC/E,MAAM,CAAC6F,MAAM,EAAC,SAC9D;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BtG,OAAA;UAAKqG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BtG,OAAA,CAACV,IAAI;YAAC+G,SAAS,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzC1G,OAAA;YAAKqG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCtG,OAAA;cAAAsG,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB1G,OAAA;cAAAsG,QAAA,EAAIK;YAAW;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN1G,OAAA;UAAKqG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BtG,OAAA,CAACT,QAAQ;YAAC8G,SAAS,EAAC;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9C1G,OAAA;YAAKqG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCtG,OAAA;cAAAsG,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB1G,OAAA;cAAAsG,QAAA,EAAI,EAAApF,qBAAA,GAAAG,KAAK,CAACyF,gBAAgB,cAAA5F,qBAAA,uBAAtBA,qBAAA,CAAwBiD,SAAS,KAAI;YAAC;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN1G,OAAA;UAAKqG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BtG,OAAA,CAACR,KAAK;YAAC6G,SAAS,EAAC;UAAwB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5C1G,OAAA;YAAKqG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCtG,OAAA;cAAAsG,QAAA,EAAI;YAAiB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1B1G,OAAA;cAAAsG,QAAA,EAAIU;YAAc;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN1G,OAAA;UAAKqG,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BtG,OAAA,CAACP,WAAW;YAAC4G,SAAS,EAAC;UAAqB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/C1G,OAAA;YAAKqG,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCtG,OAAA;cAAAsG,QAAA,EAAI;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpB1G,OAAA;cAAAsG,QAAA,EAAI,EAAAnF,sBAAA,GAAAE,KAAK,CAACyF,gBAAgB,cAAA3F,sBAAA,uBAAtBA,sBAAA,CAAwBiD,UAAU,KAAI;YAAC;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN1G,OAAA;QAAKqG,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAEhCtG,OAAA;UAAKqG,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnCtG,OAAA;YAAKqG,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChCtG,OAAA;cAAIqG,SAAS,EAAC,kBAAkB;cAAAC,QAAA,EAAC;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnD1G,OAAA;cAAKqG,SAAS,EAAC,qBAAqB;cAAAC,QAAA,gBAClCtG,OAAA;gBAAKqG,SAAS,EAAC,wBAAwB;gBAAAC,QAAA,gBACrCtG,OAAA,CAACL,MAAM;kBAAC0G,SAAS,EAAC;gBAAmB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACxC1G,OAAA;kBACEqH,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAC,kBAAkB;kBAC9BC,KAAK,EAAExF,UAAW;kBAClByF,QAAQ,EAAGC,CAAC,IAAKzF,aAAa,CAACyF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;kBAC/ClB,SAAS,EAAC;gBAAoB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC/B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eAEN1G,OAAA;gBACEuH,KAAK,EAAE1F,gBAAiB;gBACxB2F,QAAQ,EAAGC,CAAC,IAAK9D,oBAAoB,CAAC8D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;gBACtDlB,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,gBAEjCtG,OAAA;kBAAQuH,KAAK,EAAC,EAAE;kBAAAjB,QAAA,EAAC;gBAAc;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACvCjF,UAAU,CAACkG,GAAG,CAAElH,QAAQ,iBACvBT,OAAA;kBAAuBuH,KAAK,EAAE9G,QAAS;kBAAA6F,QAAA,EACpCd,kBAAkB,CAAC/E,QAAQ;gBAAC,GADlBA,QAAQ;kBAAA8F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEb,CACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEN1G,OAAA;YAAKqG,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBZ,cAAc,CAAC0B,MAAM,KAAK,CAAC,gBAC1BpH,OAAA;cAAKqG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCtG,OAAA,CAACV,IAAI;gBAAC+G,SAAS,EAAC;cAAkB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrC1G,OAAA;gBAAIqG,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtD1G,OAAA;gBAAGqG,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC5BvE,UAAU,GACP,4CAA4C,GAC5C;cAA6D;gBAAAwE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CAAC,GAENhB,cAAc,CAACiC,GAAG,CAAE/B,KAAK,iBACvB5F,OAAA;cAAoBqG,SAAS,EAAC,YAAY;cAAAC,QAAA,eACxCtG,OAAA;gBAAKqG,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjCtG,OAAA;kBAAKqG,SAAS,EAAC,iBAAiB;kBAAAC,QAAA,gBAC9BtG,OAAA;oBAAKqG,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,gBAC9BtG,OAAA;sBACEqG,SAAS,EAAE,sBAAsBpC,oBAAoB,CACnD2B,KAAK,CAACnF,QACR,CAAC,EAAG;sBAAA6F,QAAA,EAEHd,kBAAkB,CAACI,KAAK,CAACnF,QAAQ;oBAAC;sBAAA8F,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC/B,CAAC,eACP1G,OAAA;sBACEqG,SAAS,EAAE,kBAAkB1B,oBAAoB,CAC/CiB,KAAK,CAAChB,QACR,CAAC,EAAG;sBAAA0B,QAAA,EAEHV,KAAK,CAAChB,QAAQ,IAAI;oBAAa;sBAAA2B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5B,CAAC,EACN,CAACd,KAAK,CAACgC,IAAI,iBACV5H,OAAA;sBAAMqG,SAAS,EAAC;oBAAwB;sBAAAE,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAO,CAChD;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACE,CAAC,eACN1G,OAAA;oBAAGqG,SAAS,EAAC,eAAe;oBAAAC,QAAA,EACzBV,KAAK,CAACM,OAAO,IAAI;kBAAY;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC7B,CAAC,eACJ1G,OAAA;oBAAGqG,SAAS,EAAC,cAAc;oBAAAC,QAAA,GAAC,QACpB,EAACV,KAAK,CAACQ,MAAM,IAAI,gBAAgB;kBAAA;oBAAAG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtC,CAAC,eACJ1G,OAAA;oBAAGqG,SAAS,EAAC,eAAe;oBAAAC,QAAA,EACzBV,KAAK,CAACtC,OAAO,GACVsC,KAAK,CAACtC,OAAO,CAACuE,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,GACvC;kBAAY;oBAAAtB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACf,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC,eACN1G,OAAA;kBAAKqG,SAAS,EAAC,YAAY;kBAAAC,QAAA,EACxBrB,UAAU,CAACW,KAAK,CAAC/C,YAAY;gBAAC;kBAAA0D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GArCEd,KAAK,CAACkC,EAAE;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsCb,CACN;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGN1G,OAAA;UAAKqG,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAE5BtG,OAAA;YAAKqG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpCtG,OAAA;cAAKqG,SAAS,EAAC,sBAAsB;cAAAC,QAAA,eACnCtG,OAAA;gBAAIqG,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAC;cAAkB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,eACN1G,OAAA;cAAKqG,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EACnC3E,SAAS,CAACyF,MAAM,KAAK,CAAC,gBACrBpH,OAAA;gBAAKqG,SAAS,EAAC,mBAAmB;gBAAAC,QAAA,gBAChCtG,OAAA,CAACN,WAAW;kBAAC2G,SAAS,EAAC;gBAAkB;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC5C1G,OAAA;kBAAGqG,SAAS,EAAC,kBAAkB;kBAAAC,QAAA,EAAC;gBAAqB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtD,CAAC,gBAEN1G,OAAA;gBAAKqG,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAClC3E,SAAS,CAACoG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACJ,GAAG,CAAEK,QAAQ,iBAClChI,OAAA;kBAAuBqG,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBACpDtG,OAAA;oBAAGqG,SAAS,EAAC,sBAAsB;oBAAAC,QAAA,EAChC0B,QAAQ,CAACC,KAAK,IAAI;kBAAU;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC5B,CAAC,eACJ1G,OAAA;oBAAGqG,SAAS,EAAC,qBAAqB;oBAAAC,QAAA,EAC/BrB,UAAU,CAAC+C,QAAQ,CAACE,aAAa;kBAAC;oBAAA3B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAClC,CAAC,eACJ1G,OAAA;oBAAMqG,SAAS,EAAC,qBAAqB;oBAAAC,QAAA,EAClCd,kBAAkB,CAACwC,QAAQ,CAACX,IAAI;kBAAC;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC9B,CAAC;gBAAA,GATCsB,QAAQ,CAACF,EAAE;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAUhB,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC;YACN;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGN1G,OAAA;YAAKqG,SAAS,EAAC,uBAAuB;YAAAC,QAAA,gBACpCtG,OAAA;cAAKqG,SAAS,EAAC,sBAAsB;cAAAC,QAAA,eACnCtG,OAAA;gBAAIqG,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD,CAAC,eACN1G,OAAA;cAAKqG,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eACpCtG,OAAA;gBAAKqG,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EACnCM,MAAM,CAACuB,OAAO,CAAC9G,KAAK,CAACyF,gBAAgB,IAAI,CAAC,CAAC,CAAC,CAACa,GAAG,CAC/C,CAAC,CAAClH,QAAQ,EAAE2H,KAAK,CAAC,kBAChBpI,OAAA;kBAAoBqG,SAAS,EAAC,qBAAqB;kBAAAC,QAAA,gBACjDtG,OAAA;oBACEqG,SAAS,EAAE,sBAAsBpC,oBAAoB,CACnDxD,QACF,CAAC,EAAG;oBAAA6F,QAAA,EAEHd,kBAAkB,CAAC/E,QAAQ;kBAAC;oBAAA8F,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzB,CAAC,eACP1G,OAAA;oBAAMqG,SAAS,EAAC,sBAAsB;oBAAAC,QAAA,EAAE8B;kBAAK;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA,GAR7CjG,QAAQ;kBAAA8F,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OASb,CAET;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzF,EAAA,CAnYID,qBAAqB;EAAA,QACRlB,WAAW;AAAA;AAAAuI,EAAA,GADxBrH,qBAAqB;AAqY3B,eAAeA,qBAAqB;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}