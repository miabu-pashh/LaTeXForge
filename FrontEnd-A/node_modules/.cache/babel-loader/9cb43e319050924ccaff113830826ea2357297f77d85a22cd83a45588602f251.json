{"ast":null,"code":"var _jsxFileName = \"/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/WhyIFitGeneration.js\",\n  _s = $RefreshSig$();\n// src/components/WhyIFitGeneration.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/CoverLetterGeneration.css\"; // ✅ Reusing same CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WhyIFitGeneration() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    whyIFitData,\n    companyName,\n    jobDescription\n  } = location.state || {};\n  const [selectedField, setSelectedField] = useState(\"TARGET_COMPANY\");\n  const [editableData, setEditableData] = useState({\n    TARGET_COMPANY: \"\",\n    TODAY_DATE: \"\",\n    CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n    CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n    WHY_I_FIT_CONTENT: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [pdfUrl, setPdfUrl] = useState(null);\n  const fieldLabels = {\n    TARGET_COMPANY: \"Company Name\",\n    TODAY_DATE: \"Date\",\n    WHY_I_FIT_CONTENT: \"Why I Fit Content\"\n  };\n  useEffect(() => {\n    if (whyIFitData) {\n      setEditableData({\n        TARGET_COMPANY: companyName || \"\",\n        TODAY_DATE: new Date().toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\"\n        }),\n        CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n        CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n        WHY_I_FIT_CONTENT: whyIFitData\n      });\n      setMessage(\"✅ Why I Fit content loaded! Edit and generate PDF.\");\n    } else {\n      setMessage(\"❌ No Why I Fit data found. Please generate content first.\");\n    }\n  }, [whyIFitData, companyName]);\n  const handleFieldChange = (field, value) => {\n    setEditableData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleGeneratePDF = async () => {\n    if (!editableData.WHY_I_FIT_CONTENT) {\n      setMessage(\"❌ Please add Why I Fit content before generating PDF\");\n      return;\n    }\n    setIsLoading(true);\n    setMessage(\"⏳ Generating your Why I Fit PDF...\");\n    try {\n      var _latexResponse$data, _latexResponse$data$d;\n      const latexResponse = await axios.post(\"http://localhost:8080/api/why-i-fit/generate\", {\n        jobDescription,\n        companyName: editableData.TARGET_COMPANY,\n        candidateName: editableData.CANDIDATE_NAME,\n        candidateEmail: editableData.CANDIDATE_EMAIL,\n        geminiOutput: editableData.WHY_I_FIT_CONTENT\n      });\n      const latexContent = latexResponse === null || latexResponse === void 0 ? void 0 : (_latexResponse$data = latexResponse.data) === null || _latexResponse$data === void 0 ? void 0 : (_latexResponse$data$d = _latexResponse$data.data) === null || _latexResponse$data$d === void 0 ? void 0 : _latexResponse$data$d.finalLatexContent;\n      if (latexResponse.data.status === \"success\" && latexContent) {\n        const pdfResponse = await axios.post(\"http://localhost:8080/api/resume/generate-why-i-fit-pdf\", {\n          FINAL_LATEX_CONTENT: latexContent\n        }, {\n          responseType: \"blob\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const blob = new Blob([pdfResponse.data], {\n          type: \"application/pdf\"\n        });\n        const url = window.URL.createObjectURL(blob);\n        setPdfUrl(url);\n        setMessage(\"✅ Why I Fit PDF generated successfully!\");\n      } else {\n        setMessage(\"❌ Error generating LaTeX document\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error generating PDF:\", error);\n      setMessage(\"❌ Error generating PDF. Please check the backend.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"cl-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ResuMe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Why I Fit For This Role - Document Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem(\"loggedIn\");\n          navigate(\"/login\");\n        },\n        children: \"\\uD83D\\uDEAA Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-letter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cl-left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Why I Fit Fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"field-list\",\n          children: [Object.keys(fieldLabels).map(field => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: selectedField === field ? \"active\" : \"\",\n            onClick: () => setSelectedField(field),\n            children: fieldLabels[field]\n          }, field, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: handleGeneratePDF,\n            disabled: isLoading,\n            children: isLoading ? \"⏳ Generating...\" : \"MAKE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"generate-btn\",\n            onClick: () => navigate(\"/jdinput\"),\n            children: \"HOME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cl-middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: fieldLabels[selectedField]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), selectedField === \"WHY_I_FIT_CONTENT\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editableData[selectedField] || \"\",\n          onChange: e => handleFieldChange(selectedField, e.target.value),\n          rows: 20,\n          placeholder: \"Edit your Why I Fit content here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editableData[selectedField] || \"\",\n          onChange: e => handleFieldChange(selectedField, e.target.value),\n          placeholder: `Enter ${fieldLabels[selectedField].toLowerCase()}...`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${message.includes(\"✅\") ? \"success\" : message.includes(\"❌\") ? \"error\" : \"info\"}`,\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cl-right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Why I Fit Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), pdfUrl ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: pdfUrl,\n          title: \"Why I Fit PDF\",\n          frameBorder: \"0\",\n          width: \"100%\",\n          height: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No document generated yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"preview-hint\",\n            children: \"Edit fields and click \\\"MAKE\\\" to generate PDF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating your Why I Fit PDF...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(WhyIFitGeneration, \"o65Dk+CuGUr7RKi2TlEG7Ozett8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = WhyIFitGeneration;\nexport default WhyIFitGeneration;\nvar _c;\n$RefreshReg$(_c, \"WhyIFitGeneration\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","axios","jsxDEV","_jsxDEV","WhyIFitGeneration","_s","location","navigate","whyIFitData","companyName","jobDescription","state","selectedField","setSelectedField","editableData","setEditableData","TARGET_COMPANY","TODAY_DATE","CANDIDATE_NAME","CANDIDATE_EMAIL","WHY_I_FIT_CONTENT","isLoading","setIsLoading","message","setMessage","pdfUrl","setPdfUrl","fieldLabels","Date","toLocaleDateString","year","month","day","handleFieldChange","field","value","prev","handleGeneratePDF","_latexResponse$data","_latexResponse$data$d","latexResponse","post","candidateName","candidateEmail","geminiOutput","latexContent","data","finalLatexContent","status","pdfResponse","FINAL_LATEX_CONTENT","responseType","headers","blob","Blob","type","url","window","URL","createObjectURL","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localStorage","removeItem","Object","keys","map","disabled","onChange","e","target","rows","placeholder","toLowerCase","includes","src","title","frameBorder","width","height","_c","$RefreshReg$"],"sources":["/Users/maibupash/Desktop/MastersProjects/LaTeXForge/FrontEnd-A/src/components/WhyIFitGeneration.js"],"sourcesContent":["// src/components/WhyIFitGeneration.js\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../CSS/CoverLetterGeneration.css\"; // ✅ Reusing same CSS\n\nfunction WhyIFitGeneration() {\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { whyIFitData, companyName, jobDescription } = location.state || {};\n\n  const [selectedField, setSelectedField] = useState(\"TARGET_COMPANY\");\n\n  const [editableData, setEditableData] = useState({\n    TARGET_COMPANY: \"\",\n    TODAY_DATE: \"\",\n    CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n    CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n    WHY_I_FIT_CONTENT: \"\",\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [pdfUrl, setPdfUrl] = useState(null);\n\n  const fieldLabels = {\n    TARGET_COMPANY: \"Company Name\",\n    TODAY_DATE: \"Date\",\n    WHY_I_FIT_CONTENT: \"Why I Fit Content\",\n  };\n\n  useEffect(() => {\n    if (whyIFitData) {\n      setEditableData({\n        TARGET_COMPANY: companyName || \"\",\n        TODAY_DATE: new Date().toLocaleDateString(\"en-US\", {\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n        }),\n        CANDIDATE_NAME: \"Mahaboob Pasha Mohammad\",\n        CANDIDATE_EMAIL: \"mahaboobpashamohammad8@gmail.com\",\n        WHY_I_FIT_CONTENT: whyIFitData,\n      });\n      setMessage(\"✅ Why I Fit content loaded! Edit and generate PDF.\");\n    } else {\n      setMessage(\"❌ No Why I Fit data found. Please generate content first.\");\n    }\n  }, [whyIFitData, companyName]);\n\n  const handleFieldChange = (field, value) => {\n    setEditableData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleGeneratePDF = async () => {\n    if (!editableData.WHY_I_FIT_CONTENT) {\n      setMessage(\"❌ Please add Why I Fit content before generating PDF\");\n      return;\n    }\n\n    setIsLoading(true);\n    setMessage(\"⏳ Generating your Why I Fit PDF...\");\n\n    try {\n      const latexResponse = await axios.post(\n        \"http://localhost:8080/api/why-i-fit/generate\",\n        {\n          jobDescription,\n          companyName: editableData.TARGET_COMPANY,\n          candidateName: editableData.CANDIDATE_NAME,\n          candidateEmail: editableData.CANDIDATE_EMAIL,\n          geminiOutput: editableData.WHY_I_FIT_CONTENT,\n        }\n      );\n\n      const latexContent = latexResponse?.data?.data?.finalLatexContent;\n\n      if (latexResponse.data.status === \"success\" && latexContent) {\n        const pdfResponse = await axios.post(\n          \"http://localhost:8080/api/resume/generate-why-i-fit-pdf\",\n          {\n            FINAL_LATEX_CONTENT: latexContent,\n          },\n          {\n            responseType: \"blob\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        const blob = new Blob([pdfResponse.data], { type: \"application/pdf\" });\n        const url = window.URL.createObjectURL(blob);\n        setPdfUrl(url);\n        setMessage(\"✅ Why I Fit PDF generated successfully!\");\n      } else {\n        setMessage(\"❌ Error generating LaTeX document\");\n      }\n    } catch (error) {\n      console.error(\"❌ Error generating PDF:\", error);\n      setMessage(\"❌ Error generating PDF. Please check the backend.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {/* Header (shared layout) */}\n      <header className=\"cl-header\">\n        <h1>ResuMe</h1>\n        <p>\n          <strong>Why I Fit For This Role - Document Generator</strong>\n        </p>\n        <button\n          onClick={() => {\n            localStorage.removeItem(\"loggedIn\");\n            navigate(\"/login\");\n          }}\n        >\n          🚪 Logout\n        </button>\n      </header>\n\n      <div className=\"cover-letter-container\">\n        {/* Left Panel */}\n        <div className=\"cl-left-panel\">\n          <h2>Why I Fit Fields</h2>\n          <ul className=\"field-list\">\n            {Object.keys(fieldLabels).map((field) => (\n              <li\n                key={field}\n                className={selectedField === field ? \"active\" : \"\"}\n                onClick={() => setSelectedField(field)}\n              >\n                {fieldLabels[field]}\n              </li>\n            ))}\n            <button\n              className=\"generate-btn\"\n              onClick={handleGeneratePDF}\n              disabled={isLoading}\n            >\n              {isLoading ? \"⏳ Generating...\" : \"MAKE\"}\n            </button>\n            <button\n              className=\"generate-btn\"\n              onClick={() => navigate(\"/jdinput\")}\n            >\n              HOME\n            </button>\n          </ul>\n        </div>\n\n        {/* Middle Panel */}\n        <div className=\"cl-middle-panel\">\n          <h2>{fieldLabels[selectedField]}</h2>\n          {selectedField === \"WHY_I_FIT_CONTENT\" ? (\n            <textarea\n              value={editableData[selectedField] || \"\"}\n              onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n              rows={20}\n              placeholder=\"Edit your Why I Fit content here...\"\n            />\n          ) : (\n            <input\n              type=\"text\"\n              value={editableData[selectedField] || \"\"}\n              onChange={(e) => handleFieldChange(selectedField, e.target.value)}\n              placeholder={`Enter ${fieldLabels[\n                selectedField\n              ].toLowerCase()}...`}\n            />\n          )}\n          {message && (\n            <div\n              className={`status ${\n                message.includes(\"✅\")\n                  ? \"success\"\n                  : message.includes(\"❌\")\n                  ? \"error\"\n                  : \"info\"\n              }`}\n            >\n              {message}\n            </div>\n          )}\n        </div>\n\n        {/* Right Panel */}\n        <div className=\"cl-right-panel\">\n          <h2>Why I Fit Preview</h2>\n          {pdfUrl ? (\n            <iframe\n              src={pdfUrl}\n              title=\"Why I Fit PDF\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          ) : (\n            <div className=\"no-preview\">\n              <p>No document generated yet</p>\n              <p className=\"preview-hint\">\n                Edit fields and click \"MAKE\" to generate PDF\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Loading Overlay */}\n      {isLoading && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\" />\n          <p>Generating your Why I Fit PDF...</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WhyIFitGeneration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}